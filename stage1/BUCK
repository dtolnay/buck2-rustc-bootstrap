load("//constraints:defs.bzl", "transition_alias")
load(":defs.bzl", "SYSROOT_CRATES", "rust_tool", "sysroot")

[
    transition_alias(
        name = crate,
        actual = "//:{}".format(crate),
        incoming_transition = "//platforms/stage1:library",
        visibility = ["PUBLIC"],
    )
    for crate in SYSROOT_CRATES
]

transition_alias(
    name = "rust_allocator",
    actual = "//allocator:rust_allocator",
    incoming_transition = "//platforms/stage1:library",
    visibility = ["toolchains//:rust"],
)

transition_alias(
    name = "rustc_driver",
    actual = "//:rustc_driver[shared]",
    incoming_transition = "//platforms/stage1:compiler",
)

rust_tool(
    name = "rustc",
    exe = "//:rustc-main-rustc-main",
    incoming_transition = "//platforms/stage1:compiler",
    llvm = "//stage0:ci_llvm",
    rustc_driver = "//:rustc_driver[shared]",
    visibility = ["toolchains//:rust"],
)

rust_tool(
    name = "rustdoc",
    exe = "//:rustdoc-tool-rustdoc_tool_binary",
    incoming_transition = "//platforms/stage1:compiler",
    llvm = "//stage0:ci_llvm",
    rustc_driver = "//:rustc_driver[shared]",
    visibility = ["toolchains//:rust"],
)

rust_tool(
    name = "clippy-driver",
    exe = "//:clippy-clippy-driver",
    incoming_transition = "//platforms/stage1:compiler",
    llvm = "//stage0:ci_llvm",
    rustc_driver = "//:rustc_driver[shared]",
    visibility = ["toolchains//:rust"],
)

sysroot(
    name = "sysroot",
    incoming_transition = "//platforms/stage1:library",
    visibility = ["toolchains//:rust"],
    deps = [":std"],
)
