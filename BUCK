# @generated by `reindeer buckify`

load("//crates.io:crate_download.bzl", "crate_download")
load(
    ":defs.bzl",
    "cxx_bootstrap_library",
    "rust_bootstrap_alias",
    "rust_bootstrap_binary",
    "rust_bootstrap_buildscript_run",
    "rust_bootstrap_library",
)

export_file(
    name = "stage0_manifest",
    src = "rust/src/stage0",
    visibility = ["//stage0:"],
)

rust_bootstrap_library(
    name = "rustc_driver-0.0.0",
    srcs = ["rust/compiler/rustc_driver/src/lib.rs"],
    crate = "rustc_driver",
    crate_root = "rust/compiler/rustc_driver/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [":rustc_driver_impl-0.0.0"],
)

crate_download(
    name = "addr2line-0.25.0.crate",
    sha256 = "9acbfca36652500c911ddb767ed433e3ed99b032b5d935be73c6923662db1d43",
    strip_prefix = "addr2line-0.25.0",
    urls = ["https://static.crates.io/crates/addr2line/0.25.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "addr2line-0.25.0",
    srcs = [":addr2line-0.25.0.crate"],
    crate = "addr2line",
    crate_root = "addr2line-0.25.0.crate/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "core",
        "rustc-dep-of-std",
    ],
    named_deps = {
        "alloc": ":rustc-std-workspace-alloc-1.99.0",
        "core": ":rustc-std-workspace-core-1.99.0",
    },
    visibility = [],
    deps = [":gimli-0.32.1"],
)

crate_download(
    name = "adler2-2.0.1.crate",
    sha256 = "320119579fcad9c21884f5c4861d16174d0e06250625266f50fe6898340abefa",
    strip_prefix = "adler2-2.0.1",
    urls = ["https://static.crates.io/crates/adler2/2.0.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "adler2-2.0.1",
    srcs = [":adler2-2.0.1.crate"],
    crate = "adler2",
    crate_root = "adler2-2.0.1.crate/src/lib.rs",
    edition = "2021",
    platform = {
        "linux-arm64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "linux-riscv64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "linux-x86_64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "macos-arm64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "macos-x86_64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "windows-gnu-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
    },
    visibility = [],
)

crate_download(
    name = "aho-corasick-1.1.3.crate",
    sha256 = "8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916",
    strip_prefix = "aho-corasick-1.1.3",
    urls = ["https://static.crates.io/crates/aho-corasick/1.1.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "aho-corasick-1.1.3",
    srcs = [":aho-corasick-1.1.3.crate"],
    crate = "aho_corasick",
    crate_root = "aho-corasick-1.1.3.crate/src/lib.rs",
    edition = "2021",
    features = [
        "perf-literal",
        "std",
    ],
    visibility = [],
    deps = [":memchr-2.7.5"],
)

rust_bootstrap_alias(
    name = "alloc",
    actual = ":alloc-0.0.0",
    visibility = ["PUBLIC"],
)

rust_bootstrap_library(
    name = "alloc-0.0.0",
    srcs = [
        "rust/library/alloc/src/alloc.rs",
        "rust/library/alloc/src/borrow.rs",
        "rust/library/alloc/src/boxed.rs",
        "rust/library/alloc/src/boxed/convert.rs",
        "rust/library/alloc/src/boxed/iter.rs",
        "rust/library/alloc/src/boxed/thin.rs",
        "rust/library/alloc/src/bstr.rs",
        "rust/library/alloc/src/collections/binary_heap/mod.rs",
        "rust/library/alloc/src/collections/btree/append.rs",
        "rust/library/alloc/src/collections/btree/borrow.rs",
        "rust/library/alloc/src/collections/btree/borrow/tests.rs",
        "rust/library/alloc/src/collections/btree/dedup_sorted_iter.rs",
        "rust/library/alloc/src/collections/btree/fix.rs",
        "rust/library/alloc/src/collections/btree/map.rs",
        "rust/library/alloc/src/collections/btree/map/entry.rs",
        "rust/library/alloc/src/collections/btree/map/tests.rs",
        "rust/library/alloc/src/collections/btree/mem.rs",
        "rust/library/alloc/src/collections/btree/merge_iter.rs",
        "rust/library/alloc/src/collections/btree/mod.rs",
        "rust/library/alloc/src/collections/btree/navigate.rs",
        "rust/library/alloc/src/collections/btree/node.rs",
        "rust/library/alloc/src/collections/btree/node/tests.rs",
        "rust/library/alloc/src/collections/btree/remove.rs",
        "rust/library/alloc/src/collections/btree/search.rs",
        "rust/library/alloc/src/collections/btree/set.rs",
        "rust/library/alloc/src/collections/btree/set/entry.rs",
        "rust/library/alloc/src/collections/btree/set/tests.rs",
        "rust/library/alloc/src/collections/btree/set_val.rs",
        "rust/library/alloc/src/collections/btree/split.rs",
        "rust/library/alloc/src/collections/linked_list.rs",
        "rust/library/alloc/src/collections/linked_list/tests.rs",
        "rust/library/alloc/src/collections/mod.rs",
        "rust/library/alloc/src/collections/vec_deque/drain.rs",
        "rust/library/alloc/src/collections/vec_deque/into_iter.rs",
        "rust/library/alloc/src/collections/vec_deque/iter.rs",
        "rust/library/alloc/src/collections/vec_deque/iter_mut.rs",
        "rust/library/alloc/src/collections/vec_deque/macros.rs",
        "rust/library/alloc/src/collections/vec_deque/mod.rs",
        "rust/library/alloc/src/collections/vec_deque/spec_extend.rs",
        "rust/library/alloc/src/collections/vec_deque/spec_from_iter.rs",
        "rust/library/alloc/src/collections/vec_deque/tests.rs",
        "rust/library/alloc/src/ffi/c_str.rs",
        "rust/library/alloc/src/ffi/mod.rs",
        "rust/library/alloc/src/fmt.rs",
        "rust/library/alloc/src/lib.miri.rs",
        "rust/library/alloc/src/lib.rs",
        "rust/library/alloc/src/macros.rs",
        "rust/library/alloc/src/raw_vec/mod.rs",
        "rust/library/alloc/src/raw_vec/tests.rs",
        "rust/library/alloc/src/rc.rs",
        "rust/library/alloc/src/slice.rs",
        "rust/library/alloc/src/str.rs",
        "rust/library/alloc/src/string.rs",
        "rust/library/alloc/src/sync.rs",
        "rust/library/alloc/src/task.rs",
        "rust/library/alloc/src/vec/cow.rs",
        "rust/library/alloc/src/vec/drain.rs",
        "rust/library/alloc/src/vec/extract_if.rs",
        "rust/library/alloc/src/vec/in_place_collect.rs",
        "rust/library/alloc/src/vec/in_place_drop.rs",
        "rust/library/alloc/src/vec/into_iter.rs",
        "rust/library/alloc/src/vec/is_zero.rs",
        "rust/library/alloc/src/vec/mod.rs",
        "rust/library/alloc/src/vec/partial_eq.rs",
        "rust/library/alloc/src/vec/peek_mut.rs",
        "rust/library/alloc/src/vec/set_len_on_drop.rs",
        "rust/library/alloc/src/vec/spec_extend.rs",
        "rust/library/alloc/src/vec/spec_from_elem.rs",
        "rust/library/alloc/src/vec/spec_from_iter.rs",
        "rust/library/alloc/src/vec/spec_from_iter_nested.rs",
        "rust/library/alloc/src/vec/splice.rs",
    ],
    crate = "alloc",
    crate_root = "rust/library/alloc/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":compiler_builtins-0.1.160",
        ":core-0.0.0",
    ],
)

rust_bootstrap_alias(
    name = "allocator-api2",
    actual = ":allocator-api2-0.2.21",
    visibility = ["PUBLIC"],
)

crate_download(
    name = "allocator-api2-0.2.21.crate",
    sha256 = "683d7910e743518b0e34f1186f92494becacb047c7b6bf616c96772180fef923",
    strip_prefix = "allocator-api2-0.2.21",
    urls = ["https://static.crates.io/crates/allocator-api2/0.2.21/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "allocator-api2-0.2.21",
    srcs = [":allocator-api2-0.2.21.crate"],
    crate = "allocator_api2",
    crate_root = "allocator-api2-0.2.21.crate/src/lib.rs",
    edition = "2018",
    features = ["alloc"],
    visibility = [],
)

crate_download(
    name = "annotate-snippets-0.11.5.crate",
    sha256 = "710e8eae58854cdc1790fcb56cca04d712a17be849eeb81da2a724bf4bae2bc4",
    strip_prefix = "annotate-snippets-0.11.5",
    urls = ["https://static.crates.io/crates/annotate-snippets/0.11.5/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "annotate-snippets-0.11.5",
    srcs = [":annotate-snippets-0.11.5.crate"],
    crate = "annotate_snippets",
    crate_root = "annotate-snippets-0.11.5.crate/src/lib.rs",
    edition = "2021",
    features = ["default"],
    visibility = [],
    deps = [
        ":anstyle-1.0.11",
        ":unicode-width-0.2.1",
    ],
)

crate_download(
    name = "anstream-0.6.20.crate",
    sha256 = "3ae563653d1938f79b1ab1b5e668c87c76a9930414574a6583a7b7e11a8e6192",
    strip_prefix = "anstream-0.6.20",
    urls = ["https://static.crates.io/crates/anstream/0.6.20/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "anstream-0.6.20",
    srcs = [":anstream-0.6.20.crate"],
    crate = "anstream",
    crate_root = "anstream-0.6.20.crate/src/lib.rs",
    edition = "2021",
    features = [
        "auto",
        "default",
        "wincon",
    ],
    platform = {
        "windows-gnu-compiler": dict(
            deps = [":anstyle-wincon-3.0.10"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":anstyle-wincon-3.0.10"],
        ),
    },
    visibility = [],
    deps = [
        ":anstyle-1.0.11",
        ":anstyle-parse-0.2.7",
        ":anstyle-query-1.1.4",
        ":colorchoice-1.0.4",
        ":is_terminal_polyfill-1.70.1",
        ":utf8parse-0.2.2",
    ],
)

crate_download(
    name = "anstyle-1.0.11.crate",
    sha256 = "862ed96ca487e809f1c8e5a8447f6ee2cf102f846893800b20cebdf541fc6bbd",
    strip_prefix = "anstyle-1.0.11",
    urls = ["https://static.crates.io/crates/anstyle/1.0.11/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "anstyle-1.0.11",
    srcs = [":anstyle-1.0.11.crate"],
    crate = "anstyle",
    crate_root = "anstyle-1.0.11.crate/src/lib.rs",
    edition = "2021",
    features = [
        "default",
        "std",
    ],
    visibility = [],
)

crate_download(
    name = "anstyle-parse-0.2.7.crate",
    sha256 = "4e7644824f0aa2c7b9384579234ef10eb7efb6a0deb83f9630a49594dd9c15c2",
    strip_prefix = "anstyle-parse-0.2.7",
    urls = ["https://static.crates.io/crates/anstyle-parse/0.2.7/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "anstyle-parse-0.2.7",
    srcs = [":anstyle-parse-0.2.7.crate"],
    crate = "anstyle_parse",
    crate_root = "anstyle-parse-0.2.7.crate/src/lib.rs",
    edition = "2021",
    features = [
        "default",
        "utf8",
    ],
    visibility = [],
    deps = [":utf8parse-0.2.2"],
)

crate_download(
    name = "anstyle-query-1.1.4.crate",
    sha256 = "9e231f6134f61b71076a3eab506c379d4f36122f2af15a9ff04415ea4c3339e2",
    strip_prefix = "anstyle-query-1.1.4",
    urls = ["https://static.crates.io/crates/anstyle-query/1.1.4/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "anstyle-query-1.1.4",
    srcs = [":anstyle-query-1.1.4.crate"],
    crate = "anstyle_query",
    crate_root = "anstyle-query-1.1.4.crate/src/lib.rs",
    edition = "2021",
    platform = {
        "windows-gnu-compiler": dict(
            deps = [":windows-sys-0.60.2"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":windows-sys-0.60.2"],
        ),
    },
    visibility = [],
)

crate_download(
    name = "anstyle-wincon-3.0.10.crate",
    sha256 = "3e0633414522a32ffaac8ac6cc8f748e090c5717661fddeea04219e2344f5f2a",
    strip_prefix = "anstyle-wincon-3.0.10",
    urls = ["https://static.crates.io/crates/anstyle-wincon/3.0.10/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "anstyle-wincon-3.0.10",
    srcs = [":anstyle-wincon-3.0.10.crate"],
    crate = "anstyle_wincon",
    crate_root = "anstyle-wincon-3.0.10.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [
        ":anstyle-1.0.11",
        ":once_cell_polyfill-1.70.1",
        ":windows-sys-0.60.2",
    ],
)

crate_download(
    name = "ar_archive_writer-0.4.2.crate",
    sha256 = "01667f6f40216b9a0b2945e05fed5f1ad0ab6470e69cb9378001e37b1c0668e4",
    strip_prefix = "ar_archive_writer-0.4.2",
    urls = ["https://static.crates.io/crates/ar_archive_writer/0.4.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "ar_archive_writer-0.4.2",
    srcs = [":ar_archive_writer-0.4.2.crate"],
    crate = "ar_archive_writer",
    crate_root = "ar_archive_writer-0.4.2.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [":object-0.36.7"],
)

crate_download(
    name = "arrayref-0.3.9.crate",
    sha256 = "76a2e8124351fda1ef8aaaa3bbd7ebbcb486bbcd4225aca0aa0d84bb2db8fecb",
    strip_prefix = "arrayref-0.3.9",
    urls = ["https://static.crates.io/crates/arrayref/0.3.9/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "arrayref-0.3.9",
    srcs = [":arrayref-0.3.9.crate"],
    crate = "arrayref",
    crate_root = "arrayref-0.3.9.crate/src/lib.rs",
    edition = "2015",
    visibility = [],
)

crate_download(
    name = "arrayvec-0.7.6.crate",
    sha256 = "7c02d123df017efcdfbd739ef81735b36c5ba83ec3c59c80a9d7ecc718f92e50",
    strip_prefix = "arrayvec-0.7.6",
    urls = ["https://static.crates.io/crates/arrayvec/0.7.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "arrayvec-0.7.6",
    srcs = [":arrayvec-0.7.6.crate"],
    crate = "arrayvec",
    crate_root = "arrayvec-0.7.6.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
)

crate_download(
    name = "askama-0.14.0.crate",
    sha256 = "f75363874b771be265f4ffe307ca705ef6f3baa19011c149da8674a87f1b75c4",
    strip_prefix = "askama-0.14.0",
    urls = ["https://static.crates.io/crates/askama/0.14.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "askama-0.14.0",
    srcs = [":askama-0.14.0.crate"],
    crate = "askama",
    crate_root = "askama-0.14.0.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "config",
        "derive",
    ],
    visibility = [],
    deps = [
        ":askama_derive-0.14.0",
        ":itoa-1.0.15",
    ],
)

crate_download(
    name = "askama_derive-0.14.0.crate",
    sha256 = "129397200fe83088e8a68407a8e2b1f826cf0086b21ccdb866a722c8bcd3a94f",
    strip_prefix = "askama_derive-0.14.0",
    urls = ["https://static.crates.io/crates/askama_derive/0.14.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "askama_derive-0.14.0",
    srcs = [":askama_derive-0.14.0.crate"],
    crate = "askama_derive",
    crate_root = "askama_derive-0.14.0.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "config",
    ],
    named_deps = {
        "parser": ":askama_parser-0.14.0",
    },
    proc_macro = True,
    visibility = [],
    deps = [
        ":basic-toml-0.1.10",
        ":memchr-2.7.5",
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":rustc-hash-2.1.1",
        ":serde-1.0.219",
        ":serde_derive-1.0.219",
        ":syn-2.0.106",
    ],
)

crate_download(
    name = "askama_parser-0.14.0.crate",
    sha256 = "d6ab5630b3d5eaf232620167977f95eb51f3432fc76852328774afbd242d4358",
    strip_prefix = "askama_parser-0.14.0",
    urls = ["https://static.crates.io/crates/askama_parser/0.14.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "askama_parser-0.14.0",
    srcs = [":askama_parser-0.14.0.crate"],
    crate = "askama_parser",
    crate_root = "askama_parser-0.14.0.crate/src/lib.rs",
    edition = "2021",
    features = ["config"],
    visibility = [],
    deps = [
        ":memchr-2.7.5",
        ":serde-1.0.219",
        ":serde_derive-1.0.219",
        ":winnow-0.7.13",
    ],
)

crate_download(
    name = "autocfg-1.5.0.crate",
    sha256 = "c08606f8c3cbf4ce6ec8e28fb0014a2c086708fe954eaa885384a6165172e7e8",
    strip_prefix = "autocfg-1.5.0",
    urls = ["https://static.crates.io/crates/autocfg/1.5.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "autocfg-1.5.0",
    srcs = [":autocfg-1.5.0.crate"],
    crate = "autocfg",
    crate_root = "autocfg-1.5.0.crate/src/lib.rs",
    edition = "2015",
    visibility = [],
)

crate_download(
    name = "base64-0.21.7.crate",
    sha256 = "9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567",
    strip_prefix = "base64-0.21.7",
    urls = ["https://static.crates.io/crates/base64/0.21.7/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "base64-0.21.7",
    srcs = [":base64-0.21.7.crate"],
    crate = "base64",
    crate_root = "base64-0.21.7.crate/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "default",
        "std",
    ],
    visibility = [],
)

crate_download(
    name = "basic-toml-0.1.10.crate",
    sha256 = "ba62675e8242a4c4e806d12f11d136e626e6c8361d6b829310732241652a178a",
    strip_prefix = "basic-toml-0.1.10",
    urls = ["https://static.crates.io/crates/basic-toml/0.1.10/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "basic-toml-0.1.10",
    srcs = [":basic-toml-0.1.10.crate"],
    crate = "basic_toml",
    crate_root = "basic-toml-0.1.10.crate/src/lib.rs",
    edition = "2021",
    env = {
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "1",
        "CARGO_PKG_VERSION_PATCH": "10",
    },
    visibility = [],
    deps = [":serde-1.0.219"],
)

crate_download(
    name = "bitflags-2.9.3.crate",
    sha256 = "34efbcccd345379ca2868b2b2c9d3782e9cc58ba87bc7d79d5b53d9c9ae6f25d",
    strip_prefix = "bitflags-2.9.3",
    urls = ["https://static.crates.io/crates/bitflags/2.9.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "bitflags-2.9.3",
    srcs = [":bitflags-2.9.3.crate"],
    crate = "bitflags",
    crate_root = "bitflags-2.9.3.crate/src/lib.rs",
    edition = "2021",
    platform = {
        "linux-arm64-compiler": dict(
            features = ["std"],
        ),
        "linux-riscv64-compiler": dict(
            features = ["std"],
        ),
        "linux-x86_64-compiler": dict(
            features = ["std"],
        ),
        "macos-arm64-compiler": dict(
            features = ["std"],
        ),
        "macos-x86_64-compiler": dict(
            features = ["std"],
        ),
    },
    visibility = [],
)

crate_download(
    name = "blake3-1.8.2.crate",
    sha256 = "3888aaa89e4b2a40fca9848e400f6a658a5a3978de7be858e209cafa8be9a4a0",
    strip_prefix = "blake3-1.8.2",
    sub_targets = [
        "c/blake3.c",
        "c/blake3.h",
        "c/blake3_avx2_x86-64_unix.S",
        "c/blake3_avx2_x86-64_windows_gnu.S",
        "c/blake3_avx2_x86-64_windows_msvc.asm",
        "c/blake3_avx512_x86-64_unix.S",
        "c/blake3_avx512_x86-64_windows_gnu.S",
        "c/blake3_avx512_x86-64_windows_msvc.asm",
        "c/blake3_dispatch.c",
        "c/blake3_impl.h",
        "c/blake3_neon.c",
        "c/blake3_portable.c",
        "c/blake3_sse2_x86-64_unix.S",
        "c/blake3_sse2_x86-64_windows_gnu.S",
        "c/blake3_sse2_x86-64_windows_msvc.asm",
        "c/blake3_sse41_x86-64_unix.S",
        "c/blake3_sse41_x86-64_windows_gnu.S",
        "c/blake3_sse41_x86-64_windows_msvc.asm",
    ],
    urls = ["https://static.crates.io/crates/blake3/1.8.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "blake3-1.8.2",
    srcs = [":blake3-1.8.2.crate"],
    crate = "blake3",
    crate_root = "blake3-1.8.2.crate/src/lib.rs",
    edition = "2021",
    features = [
        "default",
        "std",
    ],
    platform = {
        "linux-arm64-compiler": dict(
            rustc_flags = ["--cfg=blake3_neon"],
            deps = [":blake3-1.8.2-simd_neon-aarch64"],
        ),
        "linux-x86_64-compiler": dict(
            rustc_flags = [
                "--cfg=blake3_avx2_ffi",
                "--cfg=blake3_avx512_ffi",
                "--cfg=blake3_sse2_ffi",
                "--cfg=blake3_sse41_ffi",
            ],
            deps = [":blake3-1.8.2-simd_x86_unix"],
        ),
        "macos-arm64-compiler": dict(
            rustc_flags = ["--cfg=blake3_neon"],
            deps = [":blake3-1.8.2-simd_neon-aarch64"],
        ),
        "macos-x86_64-compiler": dict(
            rustc_flags = [
                "--cfg=blake3_avx2_ffi",
                "--cfg=blake3_avx512_ffi",
                "--cfg=blake3_sse2_ffi",
                "--cfg=blake3_sse41_ffi",
            ],
            deps = [":blake3-1.8.2-simd_x86_unix"],
        ),
        "windows-gnu-compiler": dict(
            rustc_flags = [
                "--cfg=blake3_avx2_ffi",
                "--cfg=blake3_avx512_ffi",
                "--cfg=blake3_sse2_ffi",
                "--cfg=blake3_sse41_ffi",
            ],
            deps = [":blake3-1.8.2-simd_x86_windows_gnu"],
        ),
        "windows-msvc-compiler": dict(
            rustc_flags = [
                "--cfg=blake3_avx2_ffi",
                "--cfg=blake3_avx512_ffi",
                "--cfg=blake3_sse2_ffi",
                "--cfg=blake3_sse41_ffi",
            ],
            deps = [":blake3-1.8.2-simd_x86_windows_msvc"],
        ),
    },
    visibility = [],
    deps = [
        ":arrayref-0.3.9",
        ":arrayvec-0.7.6",
        ":cfg-if-1.0.3",
        ":constant_time_eq-0.3.1",
    ],
)

cxx_bootstrap_library(
    name = "blake3-1.8.2-simd_neon-aarch64",
    srcs = [":blake3-1.8.2.crate[c/blake3_neon.c]"],
    headers = [
        ":blake3-1.8.2.crate[c/blake3.h]",
        ":blake3-1.8.2.crate[c/blake3_impl.h]",
    ],
    visibility = [],
)

cxx_bootstrap_library(
    name = "blake3-1.8.2-simd_x86_unix",
    srcs = [
        ":blake3-1.8.2.crate[c/blake3.c]",
        ":blake3-1.8.2.crate[c/blake3_avx2_x86-64_unix.S]",
        ":blake3-1.8.2.crate[c/blake3_avx512_x86-64_unix.S]",
        ":blake3-1.8.2.crate[c/blake3_dispatch.c]",
        ":blake3-1.8.2.crate[c/blake3_portable.c]",
        ":blake3-1.8.2.crate[c/blake3_sse2_x86-64_unix.S]",
        ":blake3-1.8.2.crate[c/blake3_sse41_x86-64_unix.S]",
    ],
    headers = [
        ":blake3-1.8.2.crate[c/blake3.h]",
        ":blake3-1.8.2.crate[c/blake3_impl.h]",
    ],
    compatible_with = [
        "prelude//os/constraints:linux",
        "prelude//os/constraints:macos",
    ],
    compiler_flags = [
        "-mavx512f",
        "-mavx512vl",
    ],
    visibility = [],
)

cxx_bootstrap_library(
    name = "blake3-1.8.2-simd_x86_windows_gnu",
    srcs = [
        ":blake3-1.8.2.crate[c/blake3.c]",
        ":blake3-1.8.2.crate[c/blake3_avx2_x86-64_windows_gnu.S]",
        ":blake3-1.8.2.crate[c/blake3_avx512_x86-64_windows_gnu.S]",
        ":blake3-1.8.2.crate[c/blake3_dispatch.c]",
        ":blake3-1.8.2.crate[c/blake3_portable.c]",
        ":blake3-1.8.2.crate[c/blake3_sse2_x86-64_windows_gnu.S]",
        ":blake3-1.8.2.crate[c/blake3_sse41_x86-64_windows_gnu.S]",
    ],
    headers = [
        ":blake3-1.8.2.crate[c/blake3.h]",
        ":blake3-1.8.2.crate[c/blake3_impl.h]",
    ],
    compatible_with = ["prelude//os/constraints:windows"],
    compiler_flags = [
        "-mavx512f",
        "-mavx512vl",
    ],
    visibility = [],
)

cxx_bootstrap_library(
    name = "blake3-1.8.2-simd_x86_windows_msvc",
    srcs = [
        ":blake3-1.8.2.crate[c/blake3.c]",
        ":blake3-1.8.2.crate[c/blake3_avx2_x86-64_windows_msvc.asm]",
        ":blake3-1.8.2.crate[c/blake3_avx512_x86-64_windows_msvc.asm]",
        ":blake3-1.8.2.crate[c/blake3_dispatch.c]",
        ":blake3-1.8.2.crate[c/blake3_portable.c]",
        ":blake3-1.8.2.crate[c/blake3_sse2_x86-64_windows_msvc.asm]",
        ":blake3-1.8.2.crate[c/blake3_sse41_x86-64_windows_msvc.asm]",
    ],
    headers = [
        ":blake3-1.8.2.crate[c/blake3.h]",
        ":blake3-1.8.2.crate[c/blake3_impl.h]",
    ],
    compatible_with = ["prelude//os/constraints:windows"],
    visibility = [],
)

crate_download(
    name = "block-buffer-0.10.4.crate",
    sha256 = "3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71",
    strip_prefix = "block-buffer-0.10.4",
    urls = ["https://static.crates.io/crates/block-buffer/0.10.4/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "block-buffer-0.10.4",
    srcs = [":block-buffer-0.10.4.crate"],
    crate = "block_buffer",
    crate_root = "block-buffer-0.10.4.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
    deps = [":generic-array-0.14.7"],
)

crate_download(
    name = "bstr-1.12.0.crate",
    sha256 = "234113d19d0d7d613b40e86fb654acf958910802bcceab913a4f9e7cda03b1a4",
    strip_prefix = "bstr-1.12.0",
    urls = ["https://static.crates.io/crates/bstr/1.12.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "bstr-1.12.0",
    srcs = [":bstr-1.12.0.crate"],
    crate = "bstr",
    crate_root = "bstr-1.12.0.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "default",
        "std",
        "unicode",
    ],
    visibility = [],
    deps = [
        ":memchr-2.7.5",
        ":regex-automata-0.4.9",
    ],
)

crate_download(
    name = "camino-1.1.11.crate",
    sha256 = "5d07aa9a93b00c76f71bc35d598bed923f6d4f3a9ca5c24b7737ae1a292841c0",
    strip_prefix = "camino-1.1.11",
    urls = ["https://static.crates.io/crates/camino/1.1.11/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "camino-1.1.11",
    srcs = [":camino-1.1.11.crate"],
    crate = "camino",
    crate_root = "camino-1.1.11.crate/src/lib.rs",
    edition = "2018",
    env = {
        "OUT_DIR": "$(location :camino-1.1.11-build-script-run[out_dir])",
    },
    features = [
        "serde",
        "serde1",
    ],
    rustc_flags = ["@$(location :camino-1.1.11-build-script-run[rustc_flags])"],
    visibility = [],
    deps = [":serde-1.0.219"],
)

rust_bootstrap_binary(
    name = "camino-1.1.11-build-script-build",
    srcs = [":camino-1.1.11.crate"],
    crate = "build_script_build",
    crate_root = "camino-1.1.11.crate/build.rs",
    edition = "2018",
    features = [
        "serde",
        "serde1",
    ],
    visibility = [],
)

rust_bootstrap_buildscript_run(
    name = "camino-1.1.11-build-script-run",
    package_name = "camino",
    buildscript_rule = ":camino-1.1.11-build-script-build",
    features = [
        "serde",
        "serde1",
    ],
    version = "1.1.11",
)

crate_download(
    name = "cargo-platform-0.1.9.crate",
    sha256 = "e35af189006b9c0f00a064685c727031e3ed2d8020f7ba284d78cc2671bd36ea",
    strip_prefix = "cargo-platform-0.1.9",
    urls = ["https://static.crates.io/crates/cargo-platform/0.1.9/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "cargo-platform-0.1.9",
    srcs = [":cargo-platform-0.1.9.crate"],
    crate = "cargo_platform",
    crate_root = "cargo-platform-0.1.9.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [":serde-1.0.219"],
)

crate_download(
    name = "cargo_metadata-0.18.1.crate",
    sha256 = "2d886547e41f740c616ae73108f6eb70afe6d940c7bc697cb30f13daec073037",
    strip_prefix = "cargo_metadata-0.18.1",
    urls = ["https://static.crates.io/crates/cargo_metadata/0.18.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "cargo_metadata-0.18.1",
    srcs = [":cargo_metadata-0.18.1.crate"],
    crate = "cargo_metadata",
    crate_root = "cargo_metadata-0.18.1.crate/src/lib.rs",
    edition = "2018",
    features = ["default"],
    visibility = [],
    deps = [
        ":camino-1.1.11",
        ":cargo-platform-0.1.9",
        ":semver-1.0.26",
        ":serde-1.0.219",
        ":serde_json-1.0.143",
        ":thiserror-1.0.69",
    ],
)

crate_download(
    name = "cc-1.2.16.crate",
    sha256 = "be714c154be609ec7f5dad223a33bf1482fff90472de28f7362806e6d4832b8c",
    strip_prefix = "cc-1.2.16",
    urls = ["https://static.crates.io/crates/cc/1.2.16/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "cc-1.2.16",
    srcs = [":cc-1.2.16.crate"],
    crate = "cc",
    crate_root = "cc-1.2.16.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
    deps = [":shlex-1.3.0"],
)

crate_download(
    name = "cfg-if-1.0.3.crate",
    sha256 = "2fd1289c04a9ea8cb22300a459a72a385d7c73d3259e2ed7dcb2af674838cfa9",
    strip_prefix = "cfg-if-1.0.3",
    urls = ["https://static.crates.io/crates/cfg-if/1.0.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "cfg-if-1.0.3",
    srcs = [":cfg-if-1.0.3.crate"],
    crate = "cfg_if",
    crate_root = "cfg-if-1.0.3.crate/src/lib.rs",
    edition = "2018",
    platform = {
        "linux-arm64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "linux-riscv64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "linux-x86_64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "macos-arm64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "macos-x86_64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "windows-gnu-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "windows-msvc-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
    },
    visibility = [],
)

crate_download(
    name = "cfg_aliases-0.2.1.crate",
    sha256 = "613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724",
    strip_prefix = "cfg_aliases-0.2.1",
    urls = ["https://static.crates.io/crates/cfg_aliases/0.2.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "cfg_aliases-0.2.1",
    srcs = [":cfg_aliases-0.2.1.crate"],
    crate = "cfg_aliases",
    crate_root = "cfg_aliases-0.2.1.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
)

rust_bootstrap_alias(
    name = "clippy-cargo-clippy",
    actual = ":clippy-0.1.89-cargo-clippy",
    visibility = ["PUBLIC"],
)

rust_bootstrap_binary(
    name = "clippy-0.1.89-cargo-clippy",
    srcs = [
        "rust/src/tools/clippy/src/driver.rs",
        "rust/src/tools/clippy/src/main.rs",
    ],
    crate = "cargo_clippy",
    crate_root = "rust/src/tools/clippy/src/main.rs",
    edition = "2024",
    env = {
        "CARGO_PKG_NAME": "clippy",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "1",
        "CARGO_PKG_VERSION_PATCH": "89",
    },
    linker_flags = ["-Wl,-rpath,$ORIGIN/../lib"],
    visibility = [],
    deps = [
        ":anstream-0.6.20",
        ":clippy_config-0.1.89",
        ":clippy_lints-0.1.89",
        ":clippy_utils-0.1.89",
        ":color-print-0.3.7",
        ":rustc_driver-0.0.0",
        ":rustc_interface-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_tools_util-0.4.2",
        ":termize-0.1.1",
    ],
)

rust_bootstrap_alias(
    name = "clippy-clippy-driver",
    actual = ":clippy-0.1.89-clippy-driver",
    visibility = ["PUBLIC"],
)

rust_bootstrap_binary(
    name = "clippy-0.1.89-clippy-driver",
    srcs = [
        "rust/src/tools/clippy/src/driver.rs",
        "rust/src/tools/clippy/src/main.rs",
    ],
    crate = "clippy_driver",
    crate_root = "rust/src/tools/clippy/src/driver.rs",
    edition = "2024",
    env = {
        "CARGO_PKG_NAME": "clippy",
        "CARGO_PKG_VERSION_MAJOR": "0",
        "CARGO_PKG_VERSION_MINOR": "1",
        "CARGO_PKG_VERSION_PATCH": "89",
    },
    linker_flags = ["-Wl,-rpath,$ORIGIN/../lib"],
    visibility = [],
    deps = [
        ":anstream-0.6.20",
        ":clippy_config-0.1.89",
        ":clippy_lints-0.1.89",
        ":clippy_utils-0.1.89",
        ":color-print-0.3.7",
        ":rustc_driver-0.0.0",
        ":rustc_interface-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_tools_util-0.4.2",
        ":termize-0.1.1",
    ],
)

rust_bootstrap_library(
    name = "clippy_config-0.1.89",
    srcs = [
        "rust/src/tools/clippy/clippy_config/src/conf.rs",
        "rust/src/tools/clippy/clippy_config/src/lib.rs",
        "rust/src/tools/clippy/clippy_config/src/metadata.rs",
        "rust/src/tools/clippy/clippy_config/src/types.rs",
    ],
    crate = "clippy_config",
    crate_root = "rust/src/tools/clippy/clippy_config/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":clippy_utils-0.1.89",
        ":itertools-0.12.1",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":serde-1.0.219",
        ":toml-0.7.8",
    ],
)

rust_bootstrap_library(
    name = "clippy_lints-0.1.89",
    srcs = [
        "rust/src/tools/clippy/clippy_lints/src/absolute_paths.rs",
        "rust/src/tools/clippy/clippy_lints/src/almost_complete_range.rs",
        "rust/src/tools/clippy/clippy_lints/src/approx_const.rs",
        "rust/src/tools/clippy/clippy_lints/src/arbitrary_source_item_ordering.rs",
        "rust/src/tools/clippy/clippy_lints/src/arc_with_non_send_sync.rs",
        "rust/src/tools/clippy/clippy_lints/src/as_conversions.rs",
        "rust/src/tools/clippy/clippy_lints/src/asm_syntax.rs",
        "rust/src/tools/clippy/clippy_lints/src/assertions_on_constants.rs",
        "rust/src/tools/clippy/clippy_lints/src/assertions_on_result_states.rs",
        "rust/src/tools/clippy/clippy_lints/src/assigning_clones.rs",
        "rust/src/tools/clippy/clippy_lints/src/async_yields_async.rs",
        "rust/src/tools/clippy/clippy_lints/src/attrs/allow_attributes.rs",
        "rust/src/tools/clippy/clippy_lints/src/attrs/allow_attributes_without_reason.rs",
        "rust/src/tools/clippy/clippy_lints/src/attrs/blanket_clippy_restriction_lints.rs",
        "rust/src/tools/clippy/clippy_lints/src/attrs/deprecated_cfg_attr.rs",
        "rust/src/tools/clippy/clippy_lints/src/attrs/deprecated_semver.rs",
        "rust/src/tools/clippy/clippy_lints/src/attrs/duplicated_attributes.rs",
        "rust/src/tools/clippy/clippy_lints/src/attrs/inline_always.rs",
        "rust/src/tools/clippy/clippy_lints/src/attrs/mixed_attributes_style.rs",
        "rust/src/tools/clippy/clippy_lints/src/attrs/mod.rs",
        "rust/src/tools/clippy/clippy_lints/src/attrs/non_minimal_cfg.rs",
        "rust/src/tools/clippy/clippy_lints/src/attrs/repr_attributes.rs",
        "rust/src/tools/clippy/clippy_lints/src/attrs/should_panic_without_expect.rs",
        "rust/src/tools/clippy/clippy_lints/src/attrs/unnecessary_clippy_cfg.rs",
        "rust/src/tools/clippy/clippy_lints/src/attrs/useless_attribute.rs",
        "rust/src/tools/clippy/clippy_lints/src/attrs/utils.rs",
        "rust/src/tools/clippy/clippy_lints/src/await_holding_invalid.rs",
        "rust/src/tools/clippy/clippy_lints/src/blocks_in_conditions.rs",
        "rust/src/tools/clippy/clippy_lints/src/bool_assert_comparison.rs",
        "rust/src/tools/clippy/clippy_lints/src/bool_to_int_with_if.rs",
        "rust/src/tools/clippy/clippy_lints/src/booleans.rs",
        "rust/src/tools/clippy/clippy_lints/src/borrow_deref_ref.rs",
        "rust/src/tools/clippy/clippy_lints/src/box_default.rs",
        "rust/src/tools/clippy/clippy_lints/src/byte_char_slices.rs",
        "rust/src/tools/clippy/clippy_lints/src/cargo/common_metadata.rs",
        "rust/src/tools/clippy/clippy_lints/src/cargo/feature_name.rs",
        "rust/src/tools/clippy/clippy_lints/src/cargo/lint_groups_priority.rs",
        "rust/src/tools/clippy/clippy_lints/src/cargo/mod.rs",
        "rust/src/tools/clippy/clippy_lints/src/cargo/multiple_crate_versions.rs",
        "rust/src/tools/clippy/clippy_lints/src/cargo/wildcard_dependencies.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/as_pointer_underscore.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/as_ptr_cast_mut.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/as_underscore.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/borrow_as_ptr.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/cast_abs_to_unsigned.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/cast_enum_constructor.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/cast_lossless.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/cast_nan_to_int.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/cast_possible_truncation.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/cast_possible_wrap.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/cast_precision_loss.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/cast_ptr_alignment.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/cast_sign_loss.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/cast_slice_different_sizes.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/cast_slice_from_raw_parts.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/char_lit_as_u8.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/confusing_method_to_numeric_cast.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/fn_to_numeric_cast.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/fn_to_numeric_cast_any.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/fn_to_numeric_cast_with_truncation.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/manual_dangling_ptr.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/mod.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/ptr_as_ptr.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/ptr_cast_constness.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/ref_as_ptr.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/unnecessary_cast.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/utils.rs",
        "rust/src/tools/clippy/clippy_lints/src/casts/zero_ptr.rs",
        "rust/src/tools/clippy/clippy_lints/src/cfg_not_test.rs",
        "rust/src/tools/clippy/clippy_lints/src/checked_conversions.rs",
        "rust/src/tools/clippy/clippy_lints/src/cloned_ref_to_slice_refs.rs",
        "rust/src/tools/clippy/clippy_lints/src/coerce_container_to_any.rs",
        "rust/src/tools/clippy/clippy_lints/src/cognitive_complexity.rs",
        "rust/src/tools/clippy/clippy_lints/src/collapsible_if.rs",
        "rust/src/tools/clippy/clippy_lints/src/collection_is_never_read.rs",
        "rust/src/tools/clippy/clippy_lints/src/comparison_chain.rs",
        "rust/src/tools/clippy/clippy_lints/src/copies.rs",
        "rust/src/tools/clippy/clippy_lints/src/copy_iterator.rs",
        "rust/src/tools/clippy/clippy_lints/src/crate_in_macro_def.rs",
        "rust/src/tools/clippy/clippy_lints/src/create_dir.rs",
        "rust/src/tools/clippy/clippy_lints/src/dbg_macro.rs",
        "rust/src/tools/clippy/clippy_lints/src/declare_clippy_lint.rs",
        "rust/src/tools/clippy/clippy_lints/src/declared_lints.rs",
        "rust/src/tools/clippy/clippy_lints/src/default.rs",
        "rust/src/tools/clippy/clippy_lints/src/default_constructed_unit_structs.rs",
        "rust/src/tools/clippy/clippy_lints/src/default_instead_of_iter_empty.rs",
        "rust/src/tools/clippy/clippy_lints/src/default_numeric_fallback.rs",
        "rust/src/tools/clippy/clippy_lints/src/default_union_representation.rs",
        "rust/src/tools/clippy/clippy_lints/src/deprecated_lints.rs",
        "rust/src/tools/clippy/clippy_lints/src/dereference.rs",
        "rust/src/tools/clippy/clippy_lints/src/derivable_impls.rs",
        "rust/src/tools/clippy/clippy_lints/src/derive.rs",
        "rust/src/tools/clippy/clippy_lints/src/disallowed_macros.rs",
        "rust/src/tools/clippy/clippy_lints/src/disallowed_methods.rs",
        "rust/src/tools/clippy/clippy_lints/src/disallowed_names.rs",
        "rust/src/tools/clippy/clippy_lints/src/disallowed_script_idents.rs",
        "rust/src/tools/clippy/clippy_lints/src/disallowed_types.rs",
        "rust/src/tools/clippy/clippy_lints/src/doc/doc_comment_double_space_linebreaks.rs",
        "rust/src/tools/clippy/clippy_lints/src/doc/doc_suspicious_footnotes.rs",
        "rust/src/tools/clippy/clippy_lints/src/doc/include_in_doc_without_cfg.rs",
        "rust/src/tools/clippy/clippy_lints/src/doc/lazy_continuation.rs",
        "rust/src/tools/clippy/clippy_lints/src/doc/link_with_quotes.rs",
        "rust/src/tools/clippy/clippy_lints/src/doc/markdown.rs",
        "rust/src/tools/clippy/clippy_lints/src/doc/missing_headers.rs",
        "rust/src/tools/clippy/clippy_lints/src/doc/mod.rs",
        "rust/src/tools/clippy/clippy_lints/src/doc/needless_doctest_main.rs",
        "rust/src/tools/clippy/clippy_lints/src/doc/suspicious_doc_comments.rs",
        "rust/src/tools/clippy/clippy_lints/src/doc/too_long_first_doc_paragraph.rs",
        "rust/src/tools/clippy/clippy_lints/src/double_parens.rs",
        "rust/src/tools/clippy/clippy_lints/src/drop_forget_ref.rs",
        "rust/src/tools/clippy/clippy_lints/src/duplicate_mod.rs",
        "rust/src/tools/clippy/clippy_lints/src/else_if_without_else.rs",
        "rust/src/tools/clippy/clippy_lints/src/empty_drop.rs",
        "rust/src/tools/clippy/clippy_lints/src/empty_enum.rs",
        "rust/src/tools/clippy/clippy_lints/src/empty_line_after.rs",
        "rust/src/tools/clippy/clippy_lints/src/empty_with_brackets.rs",
        "rust/src/tools/clippy/clippy_lints/src/endian_bytes.rs",
        "rust/src/tools/clippy/clippy_lints/src/entry.rs",
        "rust/src/tools/clippy/clippy_lints/src/enum_clike.rs",
        "rust/src/tools/clippy/clippy_lints/src/equatable_if_let.rs",
        "rust/src/tools/clippy/clippy_lints/src/error_impl_error.rs",
        "rust/src/tools/clippy/clippy_lints/src/escape.rs",
        "rust/src/tools/clippy/clippy_lints/src/eta_reduction.rs",
        "rust/src/tools/clippy/clippy_lints/src/excessive_bools.rs",
        "rust/src/tools/clippy/clippy_lints/src/excessive_nesting.rs",
        "rust/src/tools/clippy/clippy_lints/src/exhaustive_items.rs",
        "rust/src/tools/clippy/clippy_lints/src/exit.rs",
        "rust/src/tools/clippy/clippy_lints/src/explicit_write.rs",
        "rust/src/tools/clippy/clippy_lints/src/extra_unused_type_parameters.rs",
        "rust/src/tools/clippy/clippy_lints/src/fallible_impl_from.rs",
        "rust/src/tools/clippy/clippy_lints/src/field_scoped_visibility_modifiers.rs",
        "rust/src/tools/clippy/clippy_lints/src/float_literal.rs",
        "rust/src/tools/clippy/clippy_lints/src/floating_point_arithmetic.rs",
        "rust/src/tools/clippy/clippy_lints/src/format.rs",
        "rust/src/tools/clippy/clippy_lints/src/format_args.rs",
        "rust/src/tools/clippy/clippy_lints/src/format_impl.rs",
        "rust/src/tools/clippy/clippy_lints/src/format_push_string.rs",
        "rust/src/tools/clippy/clippy_lints/src/formatting.rs",
        "rust/src/tools/clippy/clippy_lints/src/four_forward_slashes.rs",
        "rust/src/tools/clippy/clippy_lints/src/from_over_into.rs",
        "rust/src/tools/clippy/clippy_lints/src/from_raw_with_void_ptr.rs",
        "rust/src/tools/clippy/clippy_lints/src/from_str_radix_10.rs",
        "rust/src/tools/clippy/clippy_lints/src/functions/impl_trait_in_params.rs",
        "rust/src/tools/clippy/clippy_lints/src/functions/misnamed_getters.rs",
        "rust/src/tools/clippy/clippy_lints/src/functions/mod.rs",
        "rust/src/tools/clippy/clippy_lints/src/functions/must_use.rs",
        "rust/src/tools/clippy/clippy_lints/src/functions/not_unsafe_ptr_arg_deref.rs",
        "rust/src/tools/clippy/clippy_lints/src/functions/ref_option.rs",
        "rust/src/tools/clippy/clippy_lints/src/functions/renamed_function_params.rs",
        "rust/src/tools/clippy/clippy_lints/src/functions/result.rs",
        "rust/src/tools/clippy/clippy_lints/src/functions/too_many_arguments.rs",
        "rust/src/tools/clippy/clippy_lints/src/functions/too_many_lines.rs",
        "rust/src/tools/clippy/clippy_lints/src/future_not_send.rs",
        "rust/src/tools/clippy/clippy_lints/src/if_let_mutex.rs",
        "rust/src/tools/clippy/clippy_lints/src/if_not_else.rs",
        "rust/src/tools/clippy/clippy_lints/src/if_then_some_else_none.rs",
        "rust/src/tools/clippy/clippy_lints/src/ignored_unit_patterns.rs",
        "rust/src/tools/clippy/clippy_lints/src/impl_hash_with_borrow_str_and_bytes.rs",
        "rust/src/tools/clippy/clippy_lints/src/implicit_hasher.rs",
        "rust/src/tools/clippy/clippy_lints/src/implicit_return.rs",
        "rust/src/tools/clippy/clippy_lints/src/implicit_saturating_add.rs",
        "rust/src/tools/clippy/clippy_lints/src/implicit_saturating_sub.rs",
        "rust/src/tools/clippy/clippy_lints/src/implied_bounds_in_impls.rs",
        "rust/src/tools/clippy/clippy_lints/src/incompatible_msrv.rs",
        "rust/src/tools/clippy/clippy_lints/src/inconsistent_struct_constructor.rs",
        "rust/src/tools/clippy/clippy_lints/src/index_refutable_slice.rs",
        "rust/src/tools/clippy/clippy_lints/src/indexing_slicing.rs",
        "rust/src/tools/clippy/clippy_lints/src/ineffective_open_options.rs",
        "rust/src/tools/clippy/clippy_lints/src/infallible_try_from.rs",
        "rust/src/tools/clippy/clippy_lints/src/infinite_iter.rs",
        "rust/src/tools/clippy/clippy_lints/src/inherent_impl.rs",
        "rust/src/tools/clippy/clippy_lints/src/inherent_to_string.rs",
        "rust/src/tools/clippy/clippy_lints/src/init_numbered_fields.rs",
        "rust/src/tools/clippy/clippy_lints/src/inline_fn_without_body.rs",
        "rust/src/tools/clippy/clippy_lints/src/instant_subtraction.rs",
        "rust/src/tools/clippy/clippy_lints/src/int_plus_one.rs",
        "rust/src/tools/clippy/clippy_lints/src/integer_division_remainder_used.rs",
        "rust/src/tools/clippy/clippy_lints/src/invalid_upcast_comparisons.rs",
        "rust/src/tools/clippy/clippy_lints/src/item_name_repetitions.rs",
        "rust/src/tools/clippy/clippy_lints/src/items_after_statements.rs",
        "rust/src/tools/clippy/clippy_lints/src/items_after_test_module.rs",
        "rust/src/tools/clippy/clippy_lints/src/iter_not_returning_iterator.rs",
        "rust/src/tools/clippy/clippy_lints/src/iter_over_hash_type.rs",
        "rust/src/tools/clippy/clippy_lints/src/iter_without_into_iter.rs",
        "rust/src/tools/clippy/clippy_lints/src/large_const_arrays.rs",
        "rust/src/tools/clippy/clippy_lints/src/large_enum_variant.rs",
        "rust/src/tools/clippy/clippy_lints/src/large_futures.rs",
        "rust/src/tools/clippy/clippy_lints/src/large_include_file.rs",
        "rust/src/tools/clippy/clippy_lints/src/large_stack_arrays.rs",
        "rust/src/tools/clippy/clippy_lints/src/large_stack_frames.rs",
        "rust/src/tools/clippy/clippy_lints/src/legacy_numeric_constants.rs",
        "rust/src/tools/clippy/clippy_lints/src/len_zero.rs",
        "rust/src/tools/clippy/clippy_lints/src/let_if_seq.rs",
        "rust/src/tools/clippy/clippy_lints/src/let_underscore.rs",
        "rust/src/tools/clippy/clippy_lints/src/let_with_type_underscore.rs",
        "rust/src/tools/clippy/clippy_lints/src/lib.rs",
        "rust/src/tools/clippy/clippy_lints/src/lifetimes.rs",
        "rust/src/tools/clippy/clippy_lints/src/lines_filter_map_ok.rs",
        "rust/src/tools/clippy/clippy_lints/src/literal_representation.rs",
        "rust/src/tools/clippy/clippy_lints/src/literal_string_with_formatting_args.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/char_indices_as_byte_indices.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/empty_loop.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/explicit_counter_loop.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/explicit_into_iter_loop.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/explicit_iter_loop.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/for_kv_map.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/infinite_loop.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/iter_next_loop.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/manual_find.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/manual_flatten.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/manual_memcpy.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/manual_slice_fill.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/manual_while_let_some.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/missing_spin_loop.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/mod.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/mut_range_bound.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/needless_range_loop.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/never_loop.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/same_item_push.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/single_element_loop.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/unused_enumerate_index.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/utils.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/while_float.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/while_immutable_condition.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/while_let_loop.rs",
        "rust/src/tools/clippy/clippy_lints/src/loops/while_let_on_iterator.rs",
        "rust/src/tools/clippy/clippy_lints/src/macro_metavars_in_unsafe.rs",
        "rust/src/tools/clippy/clippy_lints/src/macro_use.rs",
        "rust/src/tools/clippy/clippy_lints/src/main_recursion.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_abs_diff.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_assert.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_async_fn.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_bits.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_clamp.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_div_ceil.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_float_methods.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_hash_one.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_ignore_case_cmp.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_is_ascii_check.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_is_power_of_two.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_let_else.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_main_separator_str.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_non_exhaustive.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_option_as_slice.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_range_patterns.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_rem_euclid.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_retain.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_rotate.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_slice_size_calculation.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_string_new.rs",
        "rust/src/tools/clippy/clippy_lints/src/manual_strip.rs",
        "rust/src/tools/clippy/clippy_lints/src/map_unit_fn.rs",
        "rust/src/tools/clippy/clippy_lints/src/match_result_ok.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/collapsible_match.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/infallible_destructuring_match.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/manual_filter.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/manual_map.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/manual_ok_err.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/manual_unwrap_or.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/manual_utils.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/match_as_ref.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/match_bool.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/match_like_matches.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/match_ref_pats.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/match_same_arms.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/match_single_binding.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/match_str_case_mismatch.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/match_wild_enum.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/match_wild_err_arm.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/mod.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/needless_match.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/overlapping_arms.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/redundant_guards.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/redundant_pattern_match.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/rest_pat_in_fully_bound_struct.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/significant_drop_in_scrutinee.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/single_match.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/try_err.rs",
        "rust/src/tools/clippy/clippy_lints/src/matches/wild_in_or_pats.rs",
        "rust/src/tools/clippy/clippy_lints/src/mem_replace.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/bind_instead_of_map.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/bytecount.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/bytes_count_to_len.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/bytes_nth.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/case_sensitive_file_extension_comparisons.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/chars_cmp.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/chars_cmp_with_unwrap.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/chars_last_cmp.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/chars_last_cmp_with_unwrap.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/chars_next_cmp.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/chars_next_cmp_with_unwrap.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/clear_with_drain.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/clone_on_copy.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/clone_on_ref_ptr.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/cloned_instead_of_copied.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/collapsible_str_replace.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/double_ended_iterator_last.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/drain_collect.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/err_expect.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/expect_fun_call.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/extend_with_drain.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/filetype_is_file.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/filter_map.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/filter_map_bool_then.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/filter_map_identity.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/filter_map_next.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/filter_next.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/flat_map_identity.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/flat_map_option.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/format_collect.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/from_iter_instead_of_collect.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/get_first.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/get_last_with_len.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/get_unwrap.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/implicit_clone.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/inefficient_to_string.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/inspect_for_each.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/into_iter_on_ref.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/io_other_error.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/ip_constant.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/is_digit_ascii_radix.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/is_empty.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/iter_cloned_collect.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/iter_count.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/iter_filter.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/iter_kv_map.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/iter_next_slice.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/iter_nth.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/iter_nth_zero.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/iter_on_single_or_empty_collections.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/iter_out_of_bounds.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/iter_overeager_cloned.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/iter_skip_next.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/iter_skip_zero.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/iter_with_drain.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/iterator_step_by_zero.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/join_absolute_paths.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/manual_c_str_literals.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/manual_contains.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/manual_inspect.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/manual_is_variant_and.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/manual_next_back.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/manual_ok_or.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/manual_repeat_n.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/manual_saturating_arithmetic.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/manual_str_repeat.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/manual_try_fold.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/map_all_any_identity.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/map_clone.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/map_collect_result_unit.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/map_err_ignore.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/map_flatten.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/map_identity.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/map_unwrap_or.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/map_with_unused_argument_over_ranges.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/mod.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/mut_mutex_lock.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/needless_as_bytes.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/needless_character_iteration.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/needless_collect.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/needless_option_as_deref.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/needless_option_take.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/no_effect_replace.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/obfuscated_if_else.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/ok_expect.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/open_options.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/option_as_ref_cloned.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/option_as_ref_deref.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/option_map_or_none.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/option_map_unwrap_or.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/or_fun_call.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/or_then_unwrap.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/path_buf_push_overwrite.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/path_ends_with_ext.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/range_zip_with_len.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/read_line_without_trim.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/readonly_write_lock.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/redundant_as_str.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/repeat_once.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/result_map_or_else_none.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/return_and_then.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/search_is_some.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/seek_from_current.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/seek_to_start_instead_of_rewind.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/single_char_add_str.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/single_char_insert_string.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/single_char_push_string.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/skip_while_next.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/sliced_string_as_bytes.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/stable_sort_primitive.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/str_split.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/str_splitn.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/string_extend_chars.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/string_lit_chars_any.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/suspicious_command_arg_space.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/suspicious_map.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/suspicious_splitn.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/suspicious_to_owned.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/swap_with_temporary.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/type_id_on_box.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unbuffered_bytes.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/uninit_assumed_init.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unit_hash.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unnecessary_fallible_conversions.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unnecessary_filter_map.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unnecessary_first_then_check.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unnecessary_fold.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unnecessary_get_then_check.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unnecessary_iter_cloned.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unnecessary_join.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unnecessary_lazy_eval.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unnecessary_literal_unwrap.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unnecessary_map_or.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unnecessary_min_or_max.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unnecessary_result_map_or_else.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unnecessary_sort_by.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unnecessary_to_owned.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unused_enumerate_index.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/unwrap_expect_used.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/useless_asref.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/useless_nonzero_new_unchecked.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/utils.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/vec_resize_to_zero.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/verbose_file_reads.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/waker_clone_wake.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/wrong_self_convention.rs",
        "rust/src/tools/clippy/clippy_lints/src/methods/zst_offset.rs",
        "rust/src/tools/clippy/clippy_lints/src/min_ident_chars.rs",
        "rust/src/tools/clippy/clippy_lints/src/minmax.rs",
        "rust/src/tools/clippy/clippy_lints/src/misc.rs",
        "rust/src/tools/clippy/clippy_lints/src/misc_early/builtin_type_shadow.rs",
        "rust/src/tools/clippy/clippy_lints/src/misc_early/literal_suffix.rs",
        "rust/src/tools/clippy/clippy_lints/src/misc_early/mixed_case_hex_literals.rs",
        "rust/src/tools/clippy/clippy_lints/src/misc_early/mod.rs",
        "rust/src/tools/clippy/clippy_lints/src/misc_early/redundant_at_rest_pattern.rs",
        "rust/src/tools/clippy/clippy_lints/src/misc_early/redundant_pattern.rs",
        "rust/src/tools/clippy/clippy_lints/src/misc_early/unneeded_field_pattern.rs",
        "rust/src/tools/clippy/clippy_lints/src/misc_early/unneeded_wildcard_pattern.rs",
        "rust/src/tools/clippy/clippy_lints/src/misc_early/zero_prefixed_literal.rs",
        "rust/src/tools/clippy/clippy_lints/src/mismatching_type_param_order.rs",
        "rust/src/tools/clippy/clippy_lints/src/missing_assert_message.rs",
        "rust/src/tools/clippy/clippy_lints/src/missing_asserts_for_indexing.rs",
        "rust/src/tools/clippy/clippy_lints/src/missing_const_for_fn.rs",
        "rust/src/tools/clippy/clippy_lints/src/missing_const_for_thread_local.rs",
        "rust/src/tools/clippy/clippy_lints/src/missing_doc.rs",
        "rust/src/tools/clippy/clippy_lints/src/missing_enforced_import_rename.rs",
        "rust/src/tools/clippy/clippy_lints/src/missing_fields_in_debug.rs",
        "rust/src/tools/clippy/clippy_lints/src/missing_inline.rs",
        "rust/src/tools/clippy/clippy_lints/src/missing_trait_methods.rs",
        "rust/src/tools/clippy/clippy_lints/src/mixed_read_write_in_expression.rs",
        "rust/src/tools/clippy/clippy_lints/src/module_style.rs",
        "rust/src/tools/clippy/clippy_lints/src/multi_assignments.rs",
        "rust/src/tools/clippy/clippy_lints/src/multiple_bound_locations.rs",
        "rust/src/tools/clippy/clippy_lints/src/multiple_unsafe_ops_per_block.rs",
        "rust/src/tools/clippy/clippy_lints/src/mut_key.rs",
        "rust/src/tools/clippy/clippy_lints/src/mut_mut.rs",
        "rust/src/tools/clippy/clippy_lints/src/mut_reference.rs",
        "rust/src/tools/clippy/clippy_lints/src/mutable_debug_assertion.rs",
        "rust/src/tools/clippy/clippy_lints/src/mutex_atomic.rs",
        "rust/src/tools/clippy/clippy_lints/src/needless_arbitrary_self_type.rs",
        "rust/src/tools/clippy/clippy_lints/src/needless_bool.rs",
        "rust/src/tools/clippy/clippy_lints/src/needless_borrowed_ref.rs",
        "rust/src/tools/clippy/clippy_lints/src/needless_borrows_for_generic_args.rs",
        "rust/src/tools/clippy/clippy_lints/src/needless_continue.rs",
        "rust/src/tools/clippy/clippy_lints/src/needless_else.rs",
        "rust/src/tools/clippy/clippy_lints/src/needless_for_each.rs",
        "rust/src/tools/clippy/clippy_lints/src/needless_if.rs",
        "rust/src/tools/clippy/clippy_lints/src/needless_late_init.rs",
        "rust/src/tools/clippy/clippy_lints/src/needless_maybe_sized.rs",
        "rust/src/tools/clippy/clippy_lints/src/needless_parens_on_range_literals.rs",
        "rust/src/tools/clippy/clippy_lints/src/needless_pass_by_ref_mut.rs",
        "rust/src/tools/clippy/clippy_lints/src/needless_pass_by_value.rs",
        "rust/src/tools/clippy/clippy_lints/src/needless_question_mark.rs",
        "rust/src/tools/clippy/clippy_lints/src/needless_update.rs",
        "rust/src/tools/clippy/clippy_lints/src/neg_cmp_op_on_partial_ord.rs",
        "rust/src/tools/clippy/clippy_lints/src/neg_multiply.rs",
        "rust/src/tools/clippy/clippy_lints/src/new_without_default.rs",
        "rust/src/tools/clippy/clippy_lints/src/no_effect.rs",
        "rust/src/tools/clippy/clippy_lints/src/no_mangle_with_rust_abi.rs",
        "rust/src/tools/clippy/clippy_lints/src/non_canonical_impls.rs",
        "rust/src/tools/clippy/clippy_lints/src/non_copy_const.rs",
        "rust/src/tools/clippy/clippy_lints/src/non_expressive_names.rs",
        "rust/src/tools/clippy/clippy_lints/src/non_octal_unix_permissions.rs",
        "rust/src/tools/clippy/clippy_lints/src/non_send_fields_in_send_ty.rs",
        "rust/src/tools/clippy/clippy_lints/src/non_std_lazy_statics.rs",
        "rust/src/tools/clippy/clippy_lints/src/non_zero_suggestions.rs",
        "rust/src/tools/clippy/clippy_lints/src/nonstandard_macro_braces.rs",
        "rust/src/tools/clippy/clippy_lints/src/octal_escapes.rs",
        "rust/src/tools/clippy/clippy_lints/src/only_used_in_recursion.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/absurd_extreme_comparisons.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/arithmetic_side_effects.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/assign_op_pattern.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/bit_mask.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/cmp_owned.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/const_comparisons.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/double_comparison.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/duration_subsec.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/eq_op.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/erasing_op.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/float_cmp.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/float_equality_without_abs.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/identity_op.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/integer_division.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/manual_midpoint.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/misrefactored_assign_op.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/mod.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/modulo_arithmetic.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/modulo_one.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/needless_bitwise_bool.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/numeric_arithmetic.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/op_ref.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/self_assignment.rs",
        "rust/src/tools/clippy/clippy_lints/src/operators/verbose_bit_mask.rs",
        "rust/src/tools/clippy/clippy_lints/src/option_env_unwrap.rs",
        "rust/src/tools/clippy/clippy_lints/src/option_if_let_else.rs",
        "rust/src/tools/clippy/clippy_lints/src/panic_in_result_fn.rs",
        "rust/src/tools/clippy/clippy_lints/src/panic_unimplemented.rs",
        "rust/src/tools/clippy/clippy_lints/src/panicking_overflow_checks.rs",
        "rust/src/tools/clippy/clippy_lints/src/partial_pub_fields.rs",
        "rust/src/tools/clippy/clippy_lints/src/partialeq_ne_impl.rs",
        "rust/src/tools/clippy/clippy_lints/src/partialeq_to_none.rs",
        "rust/src/tools/clippy/clippy_lints/src/pass_by_ref_or_value.rs",
        "rust/src/tools/clippy/clippy_lints/src/pathbuf_init_then_push.rs",
        "rust/src/tools/clippy/clippy_lints/src/pattern_type_mismatch.rs",
        "rust/src/tools/clippy/clippy_lints/src/permissions_set_readonly_false.rs",
        "rust/src/tools/clippy/clippy_lints/src/pointers_in_nomem_asm_block.rs",
        "rust/src/tools/clippy/clippy_lints/src/precedence.rs",
        "rust/src/tools/clippy/clippy_lints/src/ptr.rs",
        "rust/src/tools/clippy/clippy_lints/src/ptr_offset_with_cast.rs",
        "rust/src/tools/clippy/clippy_lints/src/pub_underscore_fields.rs",
        "rust/src/tools/clippy/clippy_lints/src/pub_use.rs",
        "rust/src/tools/clippy/clippy_lints/src/question_mark.rs",
        "rust/src/tools/clippy/clippy_lints/src/question_mark_used.rs",
        "rust/src/tools/clippy/clippy_lints/src/ranges.rs",
        "rust/src/tools/clippy/clippy_lints/src/raw_strings.rs",
        "rust/src/tools/clippy/clippy_lints/src/rc_clone_in_vec_init.rs",
        "rust/src/tools/clippy/clippy_lints/src/read_zero_byte_vec.rs",
        "rust/src/tools/clippy/clippy_lints/src/redundant_async_block.rs",
        "rust/src/tools/clippy/clippy_lints/src/redundant_clone.rs",
        "rust/src/tools/clippy/clippy_lints/src/redundant_closure_call.rs",
        "rust/src/tools/clippy/clippy_lints/src/redundant_else.rs",
        "rust/src/tools/clippy/clippy_lints/src/redundant_field_names.rs",
        "rust/src/tools/clippy/clippy_lints/src/redundant_locals.rs",
        "rust/src/tools/clippy/clippy_lints/src/redundant_pub_crate.rs",
        "rust/src/tools/clippy/clippy_lints/src/redundant_slicing.rs",
        "rust/src/tools/clippy/clippy_lints/src/redundant_static_lifetimes.rs",
        "rust/src/tools/clippy/clippy_lints/src/redundant_test_prefix.rs",
        "rust/src/tools/clippy/clippy_lints/src/redundant_type_annotations.rs",
        "rust/src/tools/clippy/clippy_lints/src/ref_option_ref.rs",
        "rust/src/tools/clippy/clippy_lints/src/ref_patterns.rs",
        "rust/src/tools/clippy/clippy_lints/src/reference.rs",
        "rust/src/tools/clippy/clippy_lints/src/regex.rs",
        "rust/src/tools/clippy/clippy_lints/src/repeat_vec_with_capacity.rs",
        "rust/src/tools/clippy/clippy_lints/src/reserve_after_initialization.rs",
        "rust/src/tools/clippy/clippy_lints/src/return_self_not_must_use.rs",
        "rust/src/tools/clippy/clippy_lints/src/returns.rs",
        "rust/src/tools/clippy/clippy_lints/src/same_name_method.rs",
        "rust/src/tools/clippy/clippy_lints/src/self_named_constructors.rs",
        "rust/src/tools/clippy/clippy_lints/src/semicolon_block.rs",
        "rust/src/tools/clippy/clippy_lints/src/semicolon_if_nothing_returned.rs",
        "rust/src/tools/clippy/clippy_lints/src/serde_api.rs",
        "rust/src/tools/clippy/clippy_lints/src/set_contains_or_insert.rs",
        "rust/src/tools/clippy/clippy_lints/src/shadow.rs",
        "rust/src/tools/clippy/clippy_lints/src/significant_drop_tightening.rs",
        "rust/src/tools/clippy/clippy_lints/src/single_call_fn.rs",
        "rust/src/tools/clippy/clippy_lints/src/single_char_lifetime_names.rs",
        "rust/src/tools/clippy/clippy_lints/src/single_component_path_imports.rs",
        "rust/src/tools/clippy/clippy_lints/src/single_option_map.rs",
        "rust/src/tools/clippy/clippy_lints/src/single_range_in_vec_init.rs",
        "rust/src/tools/clippy/clippy_lints/src/size_of_in_element_count.rs",
        "rust/src/tools/clippy/clippy_lints/src/size_of_ref.rs",
        "rust/src/tools/clippy/clippy_lints/src/slow_vector_initialization.rs",
        "rust/src/tools/clippy/clippy_lints/src/std_instead_of_core.rs",
        "rust/src/tools/clippy/clippy_lints/src/string_patterns.rs",
        "rust/src/tools/clippy/clippy_lints/src/strings.rs",
        "rust/src/tools/clippy/clippy_lints/src/strlen_on_c_strings.rs",
        "rust/src/tools/clippy/clippy_lints/src/suspicious_operation_groupings.rs",
        "rust/src/tools/clippy/clippy_lints/src/suspicious_trait_impl.rs",
        "rust/src/tools/clippy/clippy_lints/src/suspicious_xor_used_as_pow.rs",
        "rust/src/tools/clippy/clippy_lints/src/swap.rs",
        "rust/src/tools/clippy/clippy_lints/src/swap_ptr_to_ref.rs",
        "rust/src/tools/clippy/clippy_lints/src/tabs_in_doc_comments.rs",
        "rust/src/tools/clippy/clippy_lints/src/temporary_assignment.rs",
        "rust/src/tools/clippy/clippy_lints/src/tests_outside_test_module.rs",
        "rust/src/tools/clippy/clippy_lints/src/to_digit_is_some.rs",
        "rust/src/tools/clippy/clippy_lints/src/to_string_trait_impl.rs",
        "rust/src/tools/clippy/clippy_lints/src/trailing_empty_array.rs",
        "rust/src/tools/clippy/clippy_lints/src/trait_bounds.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/crosspointer_transmute.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/eager_transmute.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/missing_transmute_annotations.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/mod.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/transmute_int_to_bool.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/transmute_int_to_non_zero.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/transmute_null_to_fn.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/transmute_ptr_to_ptr.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/transmute_ptr_to_ref.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/transmute_ref_to_ref.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/transmute_undefined_repr.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/transmutes_expressible_as_ptr_casts.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/transmuting_null.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/unsound_collection_transmute.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/useless_transmute.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/utils.rs",
        "rust/src/tools/clippy/clippy_lints/src/transmute/wrong_transmute.rs",
        "rust/src/tools/clippy/clippy_lints/src/tuple_array_conversions.rs",
        "rust/src/tools/clippy/clippy_lints/src/types/borrowed_box.rs",
        "rust/src/tools/clippy/clippy_lints/src/types/box_collection.rs",
        "rust/src/tools/clippy/clippy_lints/src/types/linked_list.rs",
        "rust/src/tools/clippy/clippy_lints/src/types/mod.rs",
        "rust/src/tools/clippy/clippy_lints/src/types/option_option.rs",
        "rust/src/tools/clippy/clippy_lints/src/types/owned_cow.rs",
        "rust/src/tools/clippy/clippy_lints/src/types/rc_buffer.rs",
        "rust/src/tools/clippy/clippy_lints/src/types/rc_mutex.rs",
        "rust/src/tools/clippy/clippy_lints/src/types/redundant_allocation.rs",
        "rust/src/tools/clippy/clippy_lints/src/types/type_complexity.rs",
        "rust/src/tools/clippy/clippy_lints/src/types/utils.rs",
        "rust/src/tools/clippy/clippy_lints/src/types/vec_box.rs",
        "rust/src/tools/clippy/clippy_lints/src/unconditional_recursion.rs",
        "rust/src/tools/clippy/clippy_lints/src/undocumented_unsafe_blocks.rs",
        "rust/src/tools/clippy/clippy_lints/src/unicode.rs",
        "rust/src/tools/clippy/clippy_lints/src/uninhabited_references.rs",
        "rust/src/tools/clippy/clippy_lints/src/uninit_vec.rs",
        "rust/src/tools/clippy/clippy_lints/src/unit_return_expecting_ord.rs",
        "rust/src/tools/clippy/clippy_lints/src/unit_types/let_unit_value.rs",
        "rust/src/tools/clippy/clippy_lints/src/unit_types/mod.rs",
        "rust/src/tools/clippy/clippy_lints/src/unit_types/unit_arg.rs",
        "rust/src/tools/clippy/clippy_lints/src/unit_types/unit_cmp.rs",
        "rust/src/tools/clippy/clippy_lints/src/unit_types/utils.rs",
        "rust/src/tools/clippy/clippy_lints/src/unnecessary_box_returns.rs",
        "rust/src/tools/clippy/clippy_lints/src/unnecessary_literal_bound.rs",
        "rust/src/tools/clippy/clippy_lints/src/unnecessary_map_on_constructor.rs",
        "rust/src/tools/clippy/clippy_lints/src/unnecessary_owned_empty_strings.rs",
        "rust/src/tools/clippy/clippy_lints/src/unnecessary_self_imports.rs",
        "rust/src/tools/clippy/clippy_lints/src/unnecessary_semicolon.rs",
        "rust/src/tools/clippy/clippy_lints/src/unnecessary_struct_initialization.rs",
        "rust/src/tools/clippy/clippy_lints/src/unnecessary_wraps.rs",
        "rust/src/tools/clippy/clippy_lints/src/unneeded_struct_pattern.rs",
        "rust/src/tools/clippy/clippy_lints/src/unnested_or_patterns.rs",
        "rust/src/tools/clippy/clippy_lints/src/unsafe_removed_from_name.rs",
        "rust/src/tools/clippy/clippy_lints/src/unused_async.rs",
        "rust/src/tools/clippy/clippy_lints/src/unused_io_amount.rs",
        "rust/src/tools/clippy/clippy_lints/src/unused_peekable.rs",
        "rust/src/tools/clippy/clippy_lints/src/unused_result_ok.rs",
        "rust/src/tools/clippy/clippy_lints/src/unused_rounding.rs",
        "rust/src/tools/clippy/clippy_lints/src/unused_self.rs",
        "rust/src/tools/clippy/clippy_lints/src/unused_trait_names.rs",
        "rust/src/tools/clippy/clippy_lints/src/unused_unit.rs",
        "rust/src/tools/clippy/clippy_lints/src/unwrap.rs",
        "rust/src/tools/clippy/clippy_lints/src/unwrap_in_result.rs",
        "rust/src/tools/clippy/clippy_lints/src/upper_case_acronyms.rs",
        "rust/src/tools/clippy/clippy_lints/src/use_self.rs",
        "rust/src/tools/clippy/clippy_lints/src/useless_concat.rs",
        "rust/src/tools/clippy/clippy_lints/src/useless_conversion.rs",
        "rust/src/tools/clippy/clippy_lints/src/utils/attr_collector.rs",
        "rust/src/tools/clippy/clippy_lints/src/utils/author.rs",
        "rust/src/tools/clippy/clippy_lints/src/utils/dump_hir.rs",
        "rust/src/tools/clippy/clippy_lints/src/utils/format_args_collector.rs",
        "rust/src/tools/clippy/clippy_lints/src/utils/mod.rs",
        "rust/src/tools/clippy/clippy_lints/src/vec.rs",
        "rust/src/tools/clippy/clippy_lints/src/vec_init_then_push.rs",
        "rust/src/tools/clippy/clippy_lints/src/visibility.rs",
        "rust/src/tools/clippy/clippy_lints/src/wildcard_imports.rs",
        "rust/src/tools/clippy/clippy_lints/src/write.rs",
        "rust/src/tools/clippy/clippy_lints/src/zero_div_zero.rs",
        "rust/src/tools/clippy/clippy_lints/src/zero_repeat_side_effects.rs",
        "rust/src/tools/clippy/clippy_lints/src/zero_sized_map_values.rs",
        "rust/src/tools/clippy/clippy_lints/src/zombie_processes.rs",
    ],
    crate = "clippy_lints",
    crate_root = "rust/src/tools/clippy/clippy_lints/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":arrayvec-0.7.6",
        ":cargo_metadata-0.18.1",
        ":clippy_config-0.1.89",
        ":clippy_utils-0.1.89",
        ":itertools-0.12.1",
        ":pulldown-cmark-0.11.3",
        ":quine-mc_cluskey-0.2.4",
        ":regex-syntax-0.8.5",
        ":rustc_abi-0.0.0",
        ":rustc_arena-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_ast_pretty-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_driver-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_hir_analysis-0.0.0",
        ":rustc_hir_pretty-0.0.0",
        ":rustc_hir_typeck-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_infer-0.0.0",
        ":rustc_lexer-0.0.0",
        ":rustc_lint-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_parse-0.0.0",
        ":rustc_parse_format-0.0.0",
        ":rustc_resolve-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":semver-1.0.26",
        ":serde-1.0.219",
        ":smallvec-1.15.1",
        ":thin-vec-0.2.14",
        ":toml-0.7.8",
        ":unicode-normalization-0.1.24",
        ":unicode-script-0.5.7",
        ":url-2.5.7",
    ],
)

rust_bootstrap_library(
    name = "clippy_utils-0.1.89",
    srcs = [
        "rust/src/tools/clippy/clippy_utils/src/ast_utils/ident_iter.rs",
        "rust/src/tools/clippy/clippy_utils/src/ast_utils/mod.rs",
        "rust/src/tools/clippy/clippy_utils/src/attrs.rs",
        "rust/src/tools/clippy/clippy_utils/src/check_proc_macro.rs",
        "rust/src/tools/clippy/clippy_utils/src/comparisons.rs",
        "rust/src/tools/clippy/clippy_utils/src/consts.rs",
        "rust/src/tools/clippy/clippy_utils/src/diagnostics.rs",
        "rust/src/tools/clippy/clippy_utils/src/eager_or_lazy.rs",
        "rust/src/tools/clippy/clippy_utils/src/higher.rs",
        "rust/src/tools/clippy/clippy_utils/src/hir_utils.rs",
        "rust/src/tools/clippy/clippy_utils/src/lib.rs",
        "rust/src/tools/clippy/clippy_utils/src/macros.rs",
        "rust/src/tools/clippy/clippy_utils/src/mir/mod.rs",
        "rust/src/tools/clippy/clippy_utils/src/mir/possible_borrower.rs",
        "rust/src/tools/clippy/clippy_utils/src/mir/possible_origin.rs",
        "rust/src/tools/clippy/clippy_utils/src/mir/transitive_relation.rs",
        "rust/src/tools/clippy/clippy_utils/src/msrvs.rs",
        "rust/src/tools/clippy/clippy_utils/src/numeric_literal.rs",
        "rust/src/tools/clippy/clippy_utils/src/paths.rs",
        "rust/src/tools/clippy/clippy_utils/src/ptr.rs",
        "rust/src/tools/clippy/clippy_utils/src/qualify_min_const_fn.rs",
        "rust/src/tools/clippy/clippy_utils/src/source.rs",
        "rust/src/tools/clippy/clippy_utils/src/str_utils.rs",
        "rust/src/tools/clippy/clippy_utils/src/sugg.rs",
        "rust/src/tools/clippy/clippy_utils/src/sym.rs",
        "rust/src/tools/clippy/clippy_utils/src/ty/mod.rs",
        "rust/src/tools/clippy/clippy_utils/src/ty/type_certainty/certainty.rs",
        "rust/src/tools/clippy/clippy_utils/src/ty/type_certainty/mod.rs",
        "rust/src/tools/clippy/clippy_utils/src/usage.rs",
        "rust/src/tools/clippy/clippy_utils/src/visitors.rs",
    ],
    crate = "clippy_utils",
    crate_root = "rust/src/tools/clippy/clippy_utils/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":arrayvec-0.7.6",
        ":indexmap-2.11.0",
        ":itertools-0.12.1",
        ":rustc_abi-0.0.0",
        ":rustc_apfloat-0.2.3+llvm-462a31f5a5ab",
        ":rustc_ast-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_attr_parsing-0.0.0",
        ":rustc_const_eval-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_driver-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_hir_analysis-0.0.0",
        ":rustc_hir_typeck-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_infer-0.0.0",
        ":rustc_lexer-0.0.0",
        ":rustc_lint-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_mir_dataflow-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":serde-1.0.219",
        ":smallvec-1.15.1",
    ],
)

crate_download(
    name = "color-print-0.3.7.crate",
    sha256 = "3aa954171903797d5623e047d9ab69d91b493657917bdfb8c2c80ecaf9cdb6f4",
    strip_prefix = "color-print-0.3.7",
    urls = ["https://static.crates.io/crates/color-print/0.3.7/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "color-print-0.3.7",
    srcs = [":color-print-0.3.7.crate"],
    crate = "color_print",
    crate_root = "color-print-0.3.7.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
    deps = [":color-print-proc-macro-0.3.7"],
)

crate_download(
    name = "color-print-proc-macro-0.3.7.crate",
    sha256 = "692186b5ebe54007e45a59aea47ece9eb4108e141326c304cdc91699a7118a22",
    strip_prefix = "color-print-proc-macro-0.3.7",
    urls = ["https://static.crates.io/crates/color-print-proc-macro/0.3.7/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "color-print-proc-macro-0.3.7",
    srcs = [":color-print-proc-macro-0.3.7.crate"],
    crate = "color_print_proc_macro",
    crate_root = "color-print-proc-macro-0.3.7.crate/src/lib.rs",
    edition = "2018",
    proc_macro = True,
    visibility = [],
    deps = [
        ":nom-7.1.3",
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
    ],
)

crate_download(
    name = "colorchoice-1.0.4.crate",
    sha256 = "b05b61dc5112cbb17e4b6cd61790d9845d13888356391624cbe7e41efeac1e75",
    strip_prefix = "colorchoice-1.0.4",
    urls = ["https://static.crates.io/crates/colorchoice/1.0.4/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "colorchoice-1.0.4",
    srcs = [":colorchoice-1.0.4.crate"],
    crate = "colorchoice",
    crate_root = "colorchoice-1.0.4.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
)

rust_bootstrap_alias(
    name = "compiler_builtins",
    actual = ":compiler_builtins-0.1.160",
    visibility = ["PUBLIC"],
)

rust_bootstrap_library(
    name = "compiler_builtins-0.1.160",
    srcs = [
        "rust/library/compiler-builtins/compiler-builtins/src/aarch64.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/aarch64_linux.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/arm.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/arm_linux.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/avr.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/add.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/cmp.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/conv.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/div.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/extend.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/mod.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/mul.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/pow.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/sub.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/traits.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/trunc.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/hexagon.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/addsub.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/big.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/bswap.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/leading_zeros.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/mod.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/mul.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/sdiv.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/shift.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/specialized_div_rem/asymmetric.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/specialized_div_rem/binary_long.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/specialized_div_rem/delegate.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/specialized_div_rem/norm_shift.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/specialized_div_rem/trifecta.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/trailing_zeros.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/traits.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/udiv.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/lib.miri.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/lib.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/macros.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/math/mod.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/mem/impls.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/mem/mod.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/mem/x86_64.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/probestack.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/riscv.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/x86.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/x86_64.rs",
        "rust/library/compiler-builtins/libm/src/math/acos.rs",
        "rust/library/compiler-builtins/libm/src/math/acosf.rs",
        "rust/library/compiler-builtins/libm/src/math/acosh.rs",
        "rust/library/compiler-builtins/libm/src/math/acoshf.rs",
        "rust/library/compiler-builtins/libm/src/math/arch/aarch64.rs",
        "rust/library/compiler-builtins/libm/src/math/arch/i586.rs",
        "rust/library/compiler-builtins/libm/src/math/arch/mod.rs",
        "rust/library/compiler-builtins/libm/src/math/arch/wasm32.rs",
        "rust/library/compiler-builtins/libm/src/math/arch/x86.rs",
        "rust/library/compiler-builtins/libm/src/math/arch/x86/detect.rs",
        "rust/library/compiler-builtins/libm/src/math/arch/x86/fma.rs",
        "rust/library/compiler-builtins/libm/src/math/asin.rs",
        "rust/library/compiler-builtins/libm/src/math/asinf.rs",
        "rust/library/compiler-builtins/libm/src/math/asinh.rs",
        "rust/library/compiler-builtins/libm/src/math/asinhf.rs",
        "rust/library/compiler-builtins/libm/src/math/atan.rs",
        "rust/library/compiler-builtins/libm/src/math/atan2.rs",
        "rust/library/compiler-builtins/libm/src/math/atan2f.rs",
        "rust/library/compiler-builtins/libm/src/math/atanf.rs",
        "rust/library/compiler-builtins/libm/src/math/atanh.rs",
        "rust/library/compiler-builtins/libm/src/math/atanhf.rs",
        "rust/library/compiler-builtins/libm/src/math/cbrt.rs",
        "rust/library/compiler-builtins/libm/src/math/cbrtf.rs",
        "rust/library/compiler-builtins/libm/src/math/ceil.rs",
        "rust/library/compiler-builtins/libm/src/math/copysign.rs",
        "rust/library/compiler-builtins/libm/src/math/cos.rs",
        "rust/library/compiler-builtins/libm/src/math/cosf.rs",
        "rust/library/compiler-builtins/libm/src/math/cosh.rs",
        "rust/library/compiler-builtins/libm/src/math/coshf.rs",
        "rust/library/compiler-builtins/libm/src/math/erf.rs",
        "rust/library/compiler-builtins/libm/src/math/erff.rs",
        "rust/library/compiler-builtins/libm/src/math/exp.rs",
        "rust/library/compiler-builtins/libm/src/math/exp10.rs",
        "rust/library/compiler-builtins/libm/src/math/exp10f.rs",
        "rust/library/compiler-builtins/libm/src/math/exp2.rs",
        "rust/library/compiler-builtins/libm/src/math/exp2f.rs",
        "rust/library/compiler-builtins/libm/src/math/expf.rs",
        "rust/library/compiler-builtins/libm/src/math/expm1.rs",
        "rust/library/compiler-builtins/libm/src/math/expm1f.rs",
        "rust/library/compiler-builtins/libm/src/math/expo2.rs",
        "rust/library/compiler-builtins/libm/src/math/fabs.rs",
        "rust/library/compiler-builtins/libm/src/math/fdim.rs",
        "rust/library/compiler-builtins/libm/src/math/floor.rs",
        "rust/library/compiler-builtins/libm/src/math/fma.rs",
        "rust/library/compiler-builtins/libm/src/math/fmin_fmax.rs",
        "rust/library/compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
        "rust/library/compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
        "rust/library/compiler-builtins/libm/src/math/fmod.rs",
        "rust/library/compiler-builtins/libm/src/math/frexp.rs",
        "rust/library/compiler-builtins/libm/src/math/frexpf.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/ceil.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/copysign.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fabs.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fdim.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/floor.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fma.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fma_wide.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fmax.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fmaximum.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fmaximum_num.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fmin.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fminimum.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fminimum_num.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fmod.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/mod.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/rint.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/round.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/scalbn.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/sqrt.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/trunc.rs",
        "rust/library/compiler-builtins/libm/src/math/hypot.rs",
        "rust/library/compiler-builtins/libm/src/math/hypotf.rs",
        "rust/library/compiler-builtins/libm/src/math/ilogb.rs",
        "rust/library/compiler-builtins/libm/src/math/ilogbf.rs",
        "rust/library/compiler-builtins/libm/src/math/j0.rs",
        "rust/library/compiler-builtins/libm/src/math/j0f.rs",
        "rust/library/compiler-builtins/libm/src/math/j1.rs",
        "rust/library/compiler-builtins/libm/src/math/j1f.rs",
        "rust/library/compiler-builtins/libm/src/math/jn.rs",
        "rust/library/compiler-builtins/libm/src/math/jnf.rs",
        "rust/library/compiler-builtins/libm/src/math/k_cos.rs",
        "rust/library/compiler-builtins/libm/src/math/k_cosf.rs",
        "rust/library/compiler-builtins/libm/src/math/k_expo2.rs",
        "rust/library/compiler-builtins/libm/src/math/k_expo2f.rs",
        "rust/library/compiler-builtins/libm/src/math/k_sin.rs",
        "rust/library/compiler-builtins/libm/src/math/k_sinf.rs",
        "rust/library/compiler-builtins/libm/src/math/k_tan.rs",
        "rust/library/compiler-builtins/libm/src/math/k_tanf.rs",
        "rust/library/compiler-builtins/libm/src/math/ldexp.rs",
        "rust/library/compiler-builtins/libm/src/math/lgamma.rs",
        "rust/library/compiler-builtins/libm/src/math/lgamma_r.rs",
        "rust/library/compiler-builtins/libm/src/math/lgammaf.rs",
        "rust/library/compiler-builtins/libm/src/math/lgammaf_r.rs",
        "rust/library/compiler-builtins/libm/src/math/log.rs",
        "rust/library/compiler-builtins/libm/src/math/log10.rs",
        "rust/library/compiler-builtins/libm/src/math/log10f.rs",
        "rust/library/compiler-builtins/libm/src/math/log1p.rs",
        "rust/library/compiler-builtins/libm/src/math/log1pf.rs",
        "rust/library/compiler-builtins/libm/src/math/log2.rs",
        "rust/library/compiler-builtins/libm/src/math/log2f.rs",
        "rust/library/compiler-builtins/libm/src/math/logf.rs",
        "rust/library/compiler-builtins/libm/src/math/mod.rs",
        "rust/library/compiler-builtins/libm/src/math/modf.rs",
        "rust/library/compiler-builtins/libm/src/math/modff.rs",
        "rust/library/compiler-builtins/libm/src/math/nextafter.rs",
        "rust/library/compiler-builtins/libm/src/math/nextafterf.rs",
        "rust/library/compiler-builtins/libm/src/math/pow.rs",
        "rust/library/compiler-builtins/libm/src/math/powf.rs",
        "rust/library/compiler-builtins/libm/src/math/rem_pio2.rs",
        "rust/library/compiler-builtins/libm/src/math/rem_pio2_large.rs",
        "rust/library/compiler-builtins/libm/src/math/rem_pio2f.rs",
        "rust/library/compiler-builtins/libm/src/math/remainder.rs",
        "rust/library/compiler-builtins/libm/src/math/remainderf.rs",
        "rust/library/compiler-builtins/libm/src/math/remquo.rs",
        "rust/library/compiler-builtins/libm/src/math/remquof.rs",
        "rust/library/compiler-builtins/libm/src/math/rint.rs",
        "rust/library/compiler-builtins/libm/src/math/round.rs",
        "rust/library/compiler-builtins/libm/src/math/roundeven.rs",
        "rust/library/compiler-builtins/libm/src/math/scalbn.rs",
        "rust/library/compiler-builtins/libm/src/math/sin.rs",
        "rust/library/compiler-builtins/libm/src/math/sincos.rs",
        "rust/library/compiler-builtins/libm/src/math/sincosf.rs",
        "rust/library/compiler-builtins/libm/src/math/sinf.rs",
        "rust/library/compiler-builtins/libm/src/math/sinh.rs",
        "rust/library/compiler-builtins/libm/src/math/sinhf.rs",
        "rust/library/compiler-builtins/libm/src/math/sqrt.rs",
        "rust/library/compiler-builtins/libm/src/math/support/big.rs",
        "rust/library/compiler-builtins/libm/src/math/support/big/tests.rs",
        "rust/library/compiler-builtins/libm/src/math/support/env.rs",
        "rust/library/compiler-builtins/libm/src/math/support/feature_detect.rs",
        "rust/library/compiler-builtins/libm/src/math/support/float_traits.rs",
        "rust/library/compiler-builtins/libm/src/math/support/hex_float.rs",
        "rust/library/compiler-builtins/libm/src/math/support/int_traits.rs",
        "rust/library/compiler-builtins/libm/src/math/support/macros.rs",
        "rust/library/compiler-builtins/libm/src/math/support/mod.rs",
        "rust/library/compiler-builtins/libm/src/math/tan.rs",
        "rust/library/compiler-builtins/libm/src/math/tanf.rs",
        "rust/library/compiler-builtins/libm/src/math/tanh.rs",
        "rust/library/compiler-builtins/libm/src/math/tanhf.rs",
        "rust/library/compiler-builtins/libm/src/math/tgamma.rs",
        "rust/library/compiler-builtins/libm/src/math/tgammaf.rs",
        "rust/library/compiler-builtins/libm/src/math/trunc.rs",
    ],
    crate = "compiler_builtins",
    crate_root = "rust/library/compiler-builtins/compiler-builtins/src/lib.rs",
    edition = "2024",
    env = {
        "OUT_DIR": "$(location :compiler_builtins-0.1.160-build-script-run[out_dir])",
    },
    features = [
        "compiler-builtins",
        "default",
        "rustc-dep-of-std",
    ],
    rustc_flags = [
        "-Ccodegen-units=10000",
        "@$(location :compiler_builtins-0.1.160-build-script-run[rustc_flags])",
    ],
    visibility = [],
    deps = [":core-0.0.0"],
)

rust_bootstrap_binary(
    name = "compiler_builtins-0.1.160-build-script-build",
    srcs = [
        "rust/library/compiler-builtins/compiler-builtins/build.rs",
        "rust/library/compiler-builtins/compiler-builtins/configure.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/aarch64.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/aarch64_linux.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/arm.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/arm_linux.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/avr.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/add.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/cmp.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/conv.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/div.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/extend.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/mod.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/mul.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/pow.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/sub.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/traits.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/float/trunc.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/hexagon.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/addsub.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/big.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/bswap.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/leading_zeros.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/mod.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/mul.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/sdiv.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/shift.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/specialized_div_rem/asymmetric.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/specialized_div_rem/binary_long.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/specialized_div_rem/delegate.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/specialized_div_rem/norm_shift.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/specialized_div_rem/trifecta.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/trailing_zeros.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/traits.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/int/udiv.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/lib.miri.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/lib.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/macros.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/math/mod.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/mem/impls.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/mem/mod.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/mem/x86_64.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/probestack.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/riscv.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/x86.rs",
        "rust/library/compiler-builtins/compiler-builtins/src/x86_64.rs",
        "rust/library/compiler-builtins/libm/src/math/acos.rs",
        "rust/library/compiler-builtins/libm/src/math/acosf.rs",
        "rust/library/compiler-builtins/libm/src/math/acosh.rs",
        "rust/library/compiler-builtins/libm/src/math/acoshf.rs",
        "rust/library/compiler-builtins/libm/src/math/arch/aarch64.rs",
        "rust/library/compiler-builtins/libm/src/math/arch/i586.rs",
        "rust/library/compiler-builtins/libm/src/math/arch/mod.rs",
        "rust/library/compiler-builtins/libm/src/math/arch/wasm32.rs",
        "rust/library/compiler-builtins/libm/src/math/arch/x86.rs",
        "rust/library/compiler-builtins/libm/src/math/arch/x86/detect.rs",
        "rust/library/compiler-builtins/libm/src/math/arch/x86/fma.rs",
        "rust/library/compiler-builtins/libm/src/math/asin.rs",
        "rust/library/compiler-builtins/libm/src/math/asinf.rs",
        "rust/library/compiler-builtins/libm/src/math/asinh.rs",
        "rust/library/compiler-builtins/libm/src/math/asinhf.rs",
        "rust/library/compiler-builtins/libm/src/math/atan.rs",
        "rust/library/compiler-builtins/libm/src/math/atan2.rs",
        "rust/library/compiler-builtins/libm/src/math/atan2f.rs",
        "rust/library/compiler-builtins/libm/src/math/atanf.rs",
        "rust/library/compiler-builtins/libm/src/math/atanh.rs",
        "rust/library/compiler-builtins/libm/src/math/atanhf.rs",
        "rust/library/compiler-builtins/libm/src/math/cbrt.rs",
        "rust/library/compiler-builtins/libm/src/math/cbrtf.rs",
        "rust/library/compiler-builtins/libm/src/math/ceil.rs",
        "rust/library/compiler-builtins/libm/src/math/copysign.rs",
        "rust/library/compiler-builtins/libm/src/math/cos.rs",
        "rust/library/compiler-builtins/libm/src/math/cosf.rs",
        "rust/library/compiler-builtins/libm/src/math/cosh.rs",
        "rust/library/compiler-builtins/libm/src/math/coshf.rs",
        "rust/library/compiler-builtins/libm/src/math/erf.rs",
        "rust/library/compiler-builtins/libm/src/math/erff.rs",
        "rust/library/compiler-builtins/libm/src/math/exp.rs",
        "rust/library/compiler-builtins/libm/src/math/exp10.rs",
        "rust/library/compiler-builtins/libm/src/math/exp10f.rs",
        "rust/library/compiler-builtins/libm/src/math/exp2.rs",
        "rust/library/compiler-builtins/libm/src/math/exp2f.rs",
        "rust/library/compiler-builtins/libm/src/math/expf.rs",
        "rust/library/compiler-builtins/libm/src/math/expm1.rs",
        "rust/library/compiler-builtins/libm/src/math/expm1f.rs",
        "rust/library/compiler-builtins/libm/src/math/expo2.rs",
        "rust/library/compiler-builtins/libm/src/math/fabs.rs",
        "rust/library/compiler-builtins/libm/src/math/fdim.rs",
        "rust/library/compiler-builtins/libm/src/math/floor.rs",
        "rust/library/compiler-builtins/libm/src/math/fma.rs",
        "rust/library/compiler-builtins/libm/src/math/fmin_fmax.rs",
        "rust/library/compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
        "rust/library/compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
        "rust/library/compiler-builtins/libm/src/math/fmod.rs",
        "rust/library/compiler-builtins/libm/src/math/frexp.rs",
        "rust/library/compiler-builtins/libm/src/math/frexpf.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/ceil.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/copysign.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fabs.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fdim.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/floor.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fma.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fma_wide.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fmax.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fmaximum.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fmaximum_num.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fmin.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fminimum.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fminimum_num.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/fmod.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/mod.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/rint.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/round.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/scalbn.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/sqrt.rs",
        "rust/library/compiler-builtins/libm/src/math/generic/trunc.rs",
        "rust/library/compiler-builtins/libm/src/math/hypot.rs",
        "rust/library/compiler-builtins/libm/src/math/hypotf.rs",
        "rust/library/compiler-builtins/libm/src/math/ilogb.rs",
        "rust/library/compiler-builtins/libm/src/math/ilogbf.rs",
        "rust/library/compiler-builtins/libm/src/math/j0.rs",
        "rust/library/compiler-builtins/libm/src/math/j0f.rs",
        "rust/library/compiler-builtins/libm/src/math/j1.rs",
        "rust/library/compiler-builtins/libm/src/math/j1f.rs",
        "rust/library/compiler-builtins/libm/src/math/jn.rs",
        "rust/library/compiler-builtins/libm/src/math/jnf.rs",
        "rust/library/compiler-builtins/libm/src/math/k_cos.rs",
        "rust/library/compiler-builtins/libm/src/math/k_cosf.rs",
        "rust/library/compiler-builtins/libm/src/math/k_expo2.rs",
        "rust/library/compiler-builtins/libm/src/math/k_expo2f.rs",
        "rust/library/compiler-builtins/libm/src/math/k_sin.rs",
        "rust/library/compiler-builtins/libm/src/math/k_sinf.rs",
        "rust/library/compiler-builtins/libm/src/math/k_tan.rs",
        "rust/library/compiler-builtins/libm/src/math/k_tanf.rs",
        "rust/library/compiler-builtins/libm/src/math/ldexp.rs",
        "rust/library/compiler-builtins/libm/src/math/lgamma.rs",
        "rust/library/compiler-builtins/libm/src/math/lgamma_r.rs",
        "rust/library/compiler-builtins/libm/src/math/lgammaf.rs",
        "rust/library/compiler-builtins/libm/src/math/lgammaf_r.rs",
        "rust/library/compiler-builtins/libm/src/math/log.rs",
        "rust/library/compiler-builtins/libm/src/math/log10.rs",
        "rust/library/compiler-builtins/libm/src/math/log10f.rs",
        "rust/library/compiler-builtins/libm/src/math/log1p.rs",
        "rust/library/compiler-builtins/libm/src/math/log1pf.rs",
        "rust/library/compiler-builtins/libm/src/math/log2.rs",
        "rust/library/compiler-builtins/libm/src/math/log2f.rs",
        "rust/library/compiler-builtins/libm/src/math/logf.rs",
        "rust/library/compiler-builtins/libm/src/math/mod.rs",
        "rust/library/compiler-builtins/libm/src/math/modf.rs",
        "rust/library/compiler-builtins/libm/src/math/modff.rs",
        "rust/library/compiler-builtins/libm/src/math/nextafter.rs",
        "rust/library/compiler-builtins/libm/src/math/nextafterf.rs",
        "rust/library/compiler-builtins/libm/src/math/pow.rs",
        "rust/library/compiler-builtins/libm/src/math/powf.rs",
        "rust/library/compiler-builtins/libm/src/math/rem_pio2.rs",
        "rust/library/compiler-builtins/libm/src/math/rem_pio2_large.rs",
        "rust/library/compiler-builtins/libm/src/math/rem_pio2f.rs",
        "rust/library/compiler-builtins/libm/src/math/remainder.rs",
        "rust/library/compiler-builtins/libm/src/math/remainderf.rs",
        "rust/library/compiler-builtins/libm/src/math/remquo.rs",
        "rust/library/compiler-builtins/libm/src/math/remquof.rs",
        "rust/library/compiler-builtins/libm/src/math/rint.rs",
        "rust/library/compiler-builtins/libm/src/math/round.rs",
        "rust/library/compiler-builtins/libm/src/math/roundeven.rs",
        "rust/library/compiler-builtins/libm/src/math/scalbn.rs",
        "rust/library/compiler-builtins/libm/src/math/sin.rs",
        "rust/library/compiler-builtins/libm/src/math/sincos.rs",
        "rust/library/compiler-builtins/libm/src/math/sincosf.rs",
        "rust/library/compiler-builtins/libm/src/math/sinf.rs",
        "rust/library/compiler-builtins/libm/src/math/sinh.rs",
        "rust/library/compiler-builtins/libm/src/math/sinhf.rs",
        "rust/library/compiler-builtins/libm/src/math/sqrt.rs",
        "rust/library/compiler-builtins/libm/src/math/support/big.rs",
        "rust/library/compiler-builtins/libm/src/math/support/big/tests.rs",
        "rust/library/compiler-builtins/libm/src/math/support/env.rs",
        "rust/library/compiler-builtins/libm/src/math/support/feature_detect.rs",
        "rust/library/compiler-builtins/libm/src/math/support/float_traits.rs",
        "rust/library/compiler-builtins/libm/src/math/support/hex_float.rs",
        "rust/library/compiler-builtins/libm/src/math/support/int_traits.rs",
        "rust/library/compiler-builtins/libm/src/math/support/macros.rs",
        "rust/library/compiler-builtins/libm/src/math/support/mod.rs",
        "rust/library/compiler-builtins/libm/src/math/tan.rs",
        "rust/library/compiler-builtins/libm/src/math/tanf.rs",
        "rust/library/compiler-builtins/libm/src/math/tanh.rs",
        "rust/library/compiler-builtins/libm/src/math/tanhf.rs",
        "rust/library/compiler-builtins/libm/src/math/tgamma.rs",
        "rust/library/compiler-builtins/libm/src/math/tgammaf.rs",
        "rust/library/compiler-builtins/libm/src/math/trunc.rs",
    ],
    crate = "build_script_build",
    crate_root = "rust/library/compiler-builtins/compiler-builtins/build.rs",
    edition = "2024",
    features = [
        "compiler-builtins",
        "default",
        "rustc-dep-of-std",
    ],
    visibility = [],
)

rust_bootstrap_buildscript_run(
    name = "compiler_builtins-0.1.160-build-script-run",
    package_name = "compiler_builtins",
    buildscript_rule = ":compiler_builtins-0.1.160-build-script-build",
    env = {
        "OPT_LEVEL": "3",
    },
    features = [
        "compiler-builtins",
        "default",
        "rustc-dep-of-std",
    ],
    local_manifest_dir = "rust/library/compiler-builtins/compiler-builtins",
    version = "0.1.160",
)

crate_download(
    name = "constant_time_eq-0.3.1.crate",
    sha256 = "7c74b8349d32d297c9134b8c88677813a227df8f779daa29bfc29c183fe3dca6",
    strip_prefix = "constant_time_eq-0.3.1",
    urls = ["https://static.crates.io/crates/constant_time_eq/0.3.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "constant_time_eq-0.3.1",
    srcs = [":constant_time_eq-0.3.1.crate"],
    crate = "constant_time_eq",
    crate_root = "constant_time_eq-0.3.1.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
)

rust_bootstrap_alias(
    name = "core",
    actual = ":core-0.0.0",
    visibility = ["PUBLIC"],
)

rust_bootstrap_library(
    name = "core-0.0.0",
    srcs = [
        "rust/library/core/src/alloc/global.rs",
        "rust/library/core/src/alloc/layout.rs",
        "rust/library/core/src/alloc/mod.rs",
        "rust/library/core/src/any.rs",
        "rust/library/core/src/arch.rs",
        "rust/library/core/src/array/ascii.rs",
        "rust/library/core/src/array/drain.rs",
        "rust/library/core/src/array/equality.rs",
        "rust/library/core/src/array/iter.rs",
        "rust/library/core/src/array/iter/iter_inner.rs",
        "rust/library/core/src/array/mod.rs",
        "rust/library/core/src/ascii.rs",
        "rust/library/core/src/ascii/ascii_char.rs",
        "rust/library/core/src/asserting.rs",
        "rust/library/core/src/async_iter/async_iter.rs",
        "rust/library/core/src/async_iter/from_iter.rs",
        "rust/library/core/src/async_iter/mod.rs",
        "rust/library/core/src/bool.rs",
        "rust/library/core/src/borrow.rs",
        "rust/library/core/src/bstr/mod.rs",
        "rust/library/core/src/bstr/traits.rs",
        "rust/library/core/src/cell.rs",
        "rust/library/core/src/cell/lazy.rs",
        "rust/library/core/src/cell/once.rs",
        "rust/library/core/src/char/convert.rs",
        "rust/library/core/src/char/decode.rs",
        "rust/library/core/src/char/methods.rs",
        "rust/library/core/src/char/mod.rs",
        "rust/library/core/src/clone.rs",
        "rust/library/core/src/clone/uninit.rs",
        "rust/library/core/src/cmp.rs",
        "rust/library/core/src/cmp/bytewise.rs",
        "rust/library/core/src/contracts.rs",
        "rust/library/core/src/convert/mod.rs",
        "rust/library/core/src/convert/num.rs",
        "rust/library/core/src/default.rs",
        "rust/library/core/src/error.md",
        "rust/library/core/src/error.rs",
        "rust/library/core/src/escape.rs",
        "rust/library/core/src/ffi/c_char.md",
        "rust/library/core/src/ffi/c_double.md",
        "rust/library/core/src/ffi/c_float.md",
        "rust/library/core/src/ffi/c_int.md",
        "rust/library/core/src/ffi/c_long.md",
        "rust/library/core/src/ffi/c_longlong.md",
        "rust/library/core/src/ffi/c_schar.md",
        "rust/library/core/src/ffi/c_short.md",
        "rust/library/core/src/ffi/c_str.rs",
        "rust/library/core/src/ffi/c_uchar.md",
        "rust/library/core/src/ffi/c_uint.md",
        "rust/library/core/src/ffi/c_ulong.md",
        "rust/library/core/src/ffi/c_ulonglong.md",
        "rust/library/core/src/ffi/c_ushort.md",
        "rust/library/core/src/ffi/c_void.md",
        "rust/library/core/src/ffi/mod.rs",
        "rust/library/core/src/ffi/primitives.rs",
        "rust/library/core/src/ffi/va_list.rs",
        "rust/library/core/src/fmt/builders.rs",
        "rust/library/core/src/fmt/float.rs",
        "rust/library/core/src/fmt/fmt_trait_method_doc.md",
        "rust/library/core/src/fmt/mod.rs",
        "rust/library/core/src/fmt/nofloat.rs",
        "rust/library/core/src/fmt/num.rs",
        "rust/library/core/src/fmt/rt.rs",
        "rust/library/core/src/future/async_drop.rs",
        "rust/library/core/src/future/future.rs",
        "rust/library/core/src/future/into_future.rs",
        "rust/library/core/src/future/join.rs",
        "rust/library/core/src/future/mod.rs",
        "rust/library/core/src/future/pending.rs",
        "rust/library/core/src/future/poll_fn.rs",
        "rust/library/core/src/future/ready.rs",
        "rust/library/core/src/hash/mod.rs",
        "rust/library/core/src/hash/sip.rs",
        "rust/library/core/src/hint.rs",
        "rust/library/core/src/internal_macros.rs",
        "rust/library/core/src/intrinsics/bounds.rs",
        "rust/library/core/src/intrinsics/fallback.rs",
        "rust/library/core/src/intrinsics/mir.rs",
        "rust/library/core/src/intrinsics/mod.rs",
        "rust/library/core/src/intrinsics/simd.rs",
        "rust/library/core/src/io/borrowed_buf.rs",
        "rust/library/core/src/io/mod.rs",
        "rust/library/core/src/iter/adapters/array_chunks.rs",
        "rust/library/core/src/iter/adapters/by_ref_sized.rs",
        "rust/library/core/src/iter/adapters/chain.rs",
        "rust/library/core/src/iter/adapters/cloned.rs",
        "rust/library/core/src/iter/adapters/copied.rs",
        "rust/library/core/src/iter/adapters/cycle.rs",
        "rust/library/core/src/iter/adapters/enumerate.rs",
        "rust/library/core/src/iter/adapters/filter.rs",
        "rust/library/core/src/iter/adapters/filter_map.rs",
        "rust/library/core/src/iter/adapters/flatten.rs",
        "rust/library/core/src/iter/adapters/fuse.rs",
        "rust/library/core/src/iter/adapters/inspect.rs",
        "rust/library/core/src/iter/adapters/intersperse.rs",
        "rust/library/core/src/iter/adapters/map.rs",
        "rust/library/core/src/iter/adapters/map_while.rs",
        "rust/library/core/src/iter/adapters/map_windows.rs",
        "rust/library/core/src/iter/adapters/mod.rs",
        "rust/library/core/src/iter/adapters/peekable.rs",
        "rust/library/core/src/iter/adapters/rev.rs",
        "rust/library/core/src/iter/adapters/scan.rs",
        "rust/library/core/src/iter/adapters/skip.rs",
        "rust/library/core/src/iter/adapters/skip_while.rs",
        "rust/library/core/src/iter/adapters/step_by.rs",
        "rust/library/core/src/iter/adapters/take.rs",
        "rust/library/core/src/iter/adapters/take_while.rs",
        "rust/library/core/src/iter/adapters/zip.rs",
        "rust/library/core/src/iter/mod.rs",
        "rust/library/core/src/iter/range.rs",
        "rust/library/core/src/iter/sources.rs",
        "rust/library/core/src/iter/sources/empty.rs",
        "rust/library/core/src/iter/sources/from_coroutine.rs",
        "rust/library/core/src/iter/sources/from_fn.rs",
        "rust/library/core/src/iter/sources/generator.rs",
        "rust/library/core/src/iter/sources/once.rs",
        "rust/library/core/src/iter/sources/once_with.rs",
        "rust/library/core/src/iter/sources/repeat.rs",
        "rust/library/core/src/iter/sources/repeat_n.rs",
        "rust/library/core/src/iter/sources/repeat_with.rs",
        "rust/library/core/src/iter/sources/successors.rs",
        "rust/library/core/src/iter/traits/accum.rs",
        "rust/library/core/src/iter/traits/collect.rs",
        "rust/library/core/src/iter/traits/double_ended.rs",
        "rust/library/core/src/iter/traits/exact_size.rs",
        "rust/library/core/src/iter/traits/iterator.rs",
        "rust/library/core/src/iter/traits/marker.rs",
        "rust/library/core/src/iter/traits/mod.rs",
        "rust/library/core/src/iter/traits/unchecked_iterator.rs",
        "rust/library/core/src/lib.miri.rs",
        "rust/library/core/src/lib.rs",
        "rust/library/core/src/macros/mod.rs",
        "rust/library/core/src/macros/panic.md",
        "rust/library/core/src/marker.rs",
        "rust/library/core/src/marker/variance.rs",
        "rust/library/core/src/mem/manually_drop.rs",
        "rust/library/core/src/mem/maybe_uninit.rs",
        "rust/library/core/src/mem/mod.rs",
        "rust/library/core/src/mem/transmutability.rs",
        "rust/library/core/src/net/display_buffer.rs",
        "rust/library/core/src/net/ip_addr.rs",
        "rust/library/core/src/net/mod.rs",
        "rust/library/core/src/net/parser.rs",
        "rust/library/core/src/net/socket_addr.rs",
        "rust/library/core/src/num/bignum.rs",
        "rust/library/core/src/num/dec2flt/common.rs",
        "rust/library/core/src/num/dec2flt/decimal.rs",
        "rust/library/core/src/num/dec2flt/decimal_seq.rs",
        "rust/library/core/src/num/dec2flt/float.rs",
        "rust/library/core/src/num/dec2flt/fpu.rs",
        "rust/library/core/src/num/dec2flt/lemire.rs",
        "rust/library/core/src/num/dec2flt/mod.rs",
        "rust/library/core/src/num/dec2flt/parse.rs",
        "rust/library/core/src/num/dec2flt/slow.rs",
        "rust/library/core/src/num/dec2flt/table.rs",
        "rust/library/core/src/num/diy_float.rs",
        "rust/library/core/src/num/error.rs",
        "rust/library/core/src/num/f128.rs",
        "rust/library/core/src/num/f16.rs",
        "rust/library/core/src/num/f32.rs",
        "rust/library/core/src/num/f64.rs",
        "rust/library/core/src/num/flt2dec/decoder.rs",
        "rust/library/core/src/num/flt2dec/estimator.rs",
        "rust/library/core/src/num/flt2dec/mod.rs",
        "rust/library/core/src/num/flt2dec/strategy/dragon.rs",
        "rust/library/core/src/num/flt2dec/strategy/grisu.rs",
        "rust/library/core/src/num/fmt.rs",
        "rust/library/core/src/num/int_log10.rs",
        "rust/library/core/src/num/int_macros.rs",
        "rust/library/core/src/num/int_sqrt.rs",
        "rust/library/core/src/num/libm.rs",
        "rust/library/core/src/num/mod.rs",
        "rust/library/core/src/num/niche_types.rs",
        "rust/library/core/src/num/nonzero.rs",
        "rust/library/core/src/num/overflow_panic.rs",
        "rust/library/core/src/num/saturating.rs",
        "rust/library/core/src/num/shells/i128.rs",
        "rust/library/core/src/num/shells/i16.rs",
        "rust/library/core/src/num/shells/i32.rs",
        "rust/library/core/src/num/shells/i64.rs",
        "rust/library/core/src/num/shells/i8.rs",
        "rust/library/core/src/num/shells/int_macros.rs",
        "rust/library/core/src/num/shells/isize.rs",
        "rust/library/core/src/num/shells/u128.rs",
        "rust/library/core/src/num/shells/u16.rs",
        "rust/library/core/src/num/shells/u32.rs",
        "rust/library/core/src/num/shells/u64.rs",
        "rust/library/core/src/num/shells/u8.rs",
        "rust/library/core/src/num/shells/usize.rs",
        "rust/library/core/src/num/uint_macros.rs",
        "rust/library/core/src/num/wrapping.rs",
        "rust/library/core/src/ops/arith.rs",
        "rust/library/core/src/ops/async_function.rs",
        "rust/library/core/src/ops/bit.rs",
        "rust/library/core/src/ops/control_flow.rs",
        "rust/library/core/src/ops/coroutine.rs",
        "rust/library/core/src/ops/deref.rs",
        "rust/library/core/src/ops/drop.rs",
        "rust/library/core/src/ops/function.rs",
        "rust/library/core/src/ops/index.rs",
        "rust/library/core/src/ops/index_range.rs",
        "rust/library/core/src/ops/mod.rs",
        "rust/library/core/src/ops/range.rs",
        "rust/library/core/src/ops/try_trait.rs",
        "rust/library/core/src/ops/unsize.rs",
        "rust/library/core/src/option.rs",
        "rust/library/core/src/panic.rs",
        "rust/library/core/src/panic/location.rs",
        "rust/library/core/src/panic/panic_info.rs",
        "rust/library/core/src/panic/unwind_safe.rs",
        "rust/library/core/src/panicking.rs",
        "rust/library/core/src/pat.rs",
        "rust/library/core/src/pin.rs",
        "rust/library/core/src/pin/unsafe_pinned.rs",
        "rust/library/core/src/prelude/mod.rs",
        "rust/library/core/src/prelude/v1.rs",
        "rust/library/core/src/primitive.rs",
        "rust/library/core/src/primitive_docs.rs",
        "rust/library/core/src/ptr/alignment.rs",
        "rust/library/core/src/ptr/const_ptr.rs",
        "rust/library/core/src/ptr/docs/add.md",
        "rust/library/core/src/ptr/docs/as_uninit_slice.md",
        "rust/library/core/src/ptr/docs/is_null.md",
        "rust/library/core/src/ptr/docs/offset.md",
        "rust/library/core/src/ptr/metadata.rs",
        "rust/library/core/src/ptr/mod.rs",
        "rust/library/core/src/ptr/mut_ptr.rs",
        "rust/library/core/src/ptr/non_null.rs",
        "rust/library/core/src/ptr/unique.rs",
        "rust/library/core/src/random.rs",
        "rust/library/core/src/range.rs",
        "rust/library/core/src/range/iter.rs",
        "rust/library/core/src/range/legacy.rs",
        "rust/library/core/src/result.rs",
        "rust/library/core/src/slice/ascii.rs",
        "rust/library/core/src/slice/cmp.rs",
        "rust/library/core/src/slice/index.rs",
        "rust/library/core/src/slice/iter.rs",
        "rust/library/core/src/slice/iter/macros.rs",
        "rust/library/core/src/slice/memchr.rs",
        "rust/library/core/src/slice/mod.rs",
        "rust/library/core/src/slice/raw.rs",
        "rust/library/core/src/slice/rotate.rs",
        "rust/library/core/src/slice/sort/mod.rs",
        "rust/library/core/src/slice/sort/select.rs",
        "rust/library/core/src/slice/sort/shared/mod.rs",
        "rust/library/core/src/slice/sort/shared/pivot.rs",
        "rust/library/core/src/slice/sort/shared/smallsort.rs",
        "rust/library/core/src/slice/sort/stable/drift.rs",
        "rust/library/core/src/slice/sort/stable/merge.rs",
        "rust/library/core/src/slice/sort/stable/mod.rs",
        "rust/library/core/src/slice/sort/stable/quicksort.rs",
        "rust/library/core/src/slice/sort/stable/tiny.rs",
        "rust/library/core/src/slice/sort/unstable/heapsort.rs",
        "rust/library/core/src/slice/sort/unstable/mod.rs",
        "rust/library/core/src/slice/sort/unstable/quicksort.rs",
        "rust/library/core/src/slice/specialize.rs",
        "rust/library/core/src/str/converts.rs",
        "rust/library/core/src/str/count.rs",
        "rust/library/core/src/str/error.rs",
        "rust/library/core/src/str/iter.rs",
        "rust/library/core/src/str/lossy.rs",
        "rust/library/core/src/str/mod.rs",
        "rust/library/core/src/str/pattern.rs",
        "rust/library/core/src/str/traits.rs",
        "rust/library/core/src/str/validations.rs",
        "rust/library/core/src/sync/atomic.rs",
        "rust/library/core/src/sync/exclusive.rs",
        "rust/library/core/src/sync/mod.rs",
        "rust/library/core/src/task/mod.rs",
        "rust/library/core/src/task/poll.rs",
        "rust/library/core/src/task/ready.rs",
        "rust/library/core/src/task/wake.rs",
        "rust/library/core/src/time.rs",
        "rust/library/core/src/tuple.rs",
        "rust/library/core/src/ub_checks.rs",
        "rust/library/core/src/unicode/mod.rs",
        "rust/library/core/src/unicode/printable.rs",
        "rust/library/core/src/unicode/unicode_data.rs",
        "rust/library/core/src/unit.rs",
        "rust/library/core/src/unsafe_binder.rs",
        "rust/library/portable-simd/crates/core_simd/examples/dot_product.rs",
        "rust/library/portable-simd/crates/core_simd/examples/matrix_inversion.rs",
        "rust/library/portable-simd/crates/core_simd/examples/nbody.rs",
        "rust/library/portable-simd/crates/core_simd/examples/spectral_norm.rs",
        "rust/library/portable-simd/crates/core_simd/src/alias.rs",
        "rust/library/portable-simd/crates/core_simd/src/cast.rs",
        "rust/library/portable-simd/crates/core_simd/src/core_simd_docs.md",
        "rust/library/portable-simd/crates/core_simd/src/fmt.rs",
        "rust/library/portable-simd/crates/core_simd/src/iter.rs",
        "rust/library/portable-simd/crates/core_simd/src/lane_count.rs",
        "rust/library/portable-simd/crates/core_simd/src/lib.rs",
        "rust/library/portable-simd/crates/core_simd/src/masks.rs",
        "rust/library/portable-simd/crates/core_simd/src/masks/bitmask.rs",
        "rust/library/portable-simd/crates/core_simd/src/masks/full_masks.rs",
        "rust/library/portable-simd/crates/core_simd/src/mod.rs",
        "rust/library/portable-simd/crates/core_simd/src/ops.rs",
        "rust/library/portable-simd/crates/core_simd/src/ops/assign.rs",
        "rust/library/portable-simd/crates/core_simd/src/ops/deref.rs",
        "rust/library/portable-simd/crates/core_simd/src/ops/shift_scalar.rs",
        "rust/library/portable-simd/crates/core_simd/src/ops/unary.rs",
        "rust/library/portable-simd/crates/core_simd/src/select.rs",
        "rust/library/portable-simd/crates/core_simd/src/simd/cmp.rs",
        "rust/library/portable-simd/crates/core_simd/src/simd/cmp/eq.rs",
        "rust/library/portable-simd/crates/core_simd/src/simd/cmp/ord.rs",
        "rust/library/portable-simd/crates/core_simd/src/simd/num.rs",
        "rust/library/portable-simd/crates/core_simd/src/simd/num/float.rs",
        "rust/library/portable-simd/crates/core_simd/src/simd/num/int.rs",
        "rust/library/portable-simd/crates/core_simd/src/simd/num/uint.rs",
        "rust/library/portable-simd/crates/core_simd/src/simd/prelude.rs",
        "rust/library/portable-simd/crates/core_simd/src/simd/ptr.rs",
        "rust/library/portable-simd/crates/core_simd/src/simd/ptr/const_ptr.rs",
        "rust/library/portable-simd/crates/core_simd/src/simd/ptr/mut_ptr.rs",
        "rust/library/portable-simd/crates/core_simd/src/swizzle.rs",
        "rust/library/portable-simd/crates/core_simd/src/swizzle_dyn.rs",
        "rust/library/portable-simd/crates/core_simd/src/to_bytes.rs",
        "rust/library/portable-simd/crates/core_simd/src/vector.rs",
        "rust/library/portable-simd/crates/core_simd/src/vendor.rs",
        "rust/library/portable-simd/crates/core_simd/src/vendor/arm.rs",
        "rust/library/portable-simd/crates/core_simd/src/vendor/loongarch64.rs",
        "rust/library/portable-simd/crates/core_simd/src/vendor/powerpc.rs",
        "rust/library/portable-simd/crates/core_simd/src/vendor/wasm32.rs",
        "rust/library/portable-simd/crates/core_simd/src/vendor/x86.rs",
        "rust/library/portable-simd/crates/core_simd/tests/autoderef.rs",
        "rust/library/portable-simd/crates/core_simd/tests/cast.rs",
        "rust/library/portable-simd/crates/core_simd/tests/f32_ops.rs",
        "rust/library/portable-simd/crates/core_simd/tests/f64_ops.rs",
        "rust/library/portable-simd/crates/core_simd/tests/i16_ops.rs",
        "rust/library/portable-simd/crates/core_simd/tests/i32_ops.rs",
        "rust/library/portable-simd/crates/core_simd/tests/i64_ops.rs",
        "rust/library/portable-simd/crates/core_simd/tests/i8_ops.rs",
        "rust/library/portable-simd/crates/core_simd/tests/isize_ops.rs",
        "rust/library/portable-simd/crates/core_simd/tests/layout.rs",
        "rust/library/portable-simd/crates/core_simd/tests/mask_ops.rs",
        "rust/library/portable-simd/crates/core_simd/tests/mask_ops_impl/mask16.rs",
        "rust/library/portable-simd/crates/core_simd/tests/mask_ops_impl/mask32.rs",
        "rust/library/portable-simd/crates/core_simd/tests/mask_ops_impl/mask64.rs",
        "rust/library/portable-simd/crates/core_simd/tests/mask_ops_impl/mask8.rs",
        "rust/library/portable-simd/crates/core_simd/tests/mask_ops_impl/mask_macros.rs",
        "rust/library/portable-simd/crates/core_simd/tests/mask_ops_impl/masksize.rs",
        "rust/library/portable-simd/crates/core_simd/tests/mask_ops_impl/mod.rs",
        "rust/library/portable-simd/crates/core_simd/tests/masked_load_store.rs",
        "rust/library/portable-simd/crates/core_simd/tests/masks.rs",
        "rust/library/portable-simd/crates/core_simd/tests/ops_macros.rs",
        "rust/library/portable-simd/crates/core_simd/tests/pointers.rs",
        "rust/library/portable-simd/crates/core_simd/tests/round.rs",
        "rust/library/portable-simd/crates/core_simd/tests/swizzle.rs",
        "rust/library/portable-simd/crates/core_simd/tests/swizzle_dyn.rs",
        "rust/library/portable-simd/crates/core_simd/tests/to_bytes.rs",
        "rust/library/portable-simd/crates/core_simd/tests/try_from_slice.rs",
        "rust/library/portable-simd/crates/core_simd/tests/u16_ops.rs",
        "rust/library/portable-simd/crates/core_simd/tests/u32_ops.rs",
        "rust/library/portable-simd/crates/core_simd/tests/u64_ops.rs",
        "rust/library/portable-simd/crates/core_simd/tests/u8_ops.rs",
        "rust/library/portable-simd/crates/core_simd/tests/usize_ops.rs",
        "rust/library/stdarch/crates/core_arch/src/aarch64/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/aarch64/mte.rs",
        "rust/library/stdarch/crates/core_arch/src/aarch64/neon/generated.rs",
        "rust/library/stdarch/crates/core_arch/src/aarch64/neon/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/aarch64/prefetch.rs",
        "rust/library/stdarch/crates/core_arch/src/aarch64/test_support.rs",
        "rust/library/stdarch/crates/core_arch/src/aarch64/tme.rs",
        "rust/library/stdarch/crates/core_arch/src/arm/dsp.rs",
        "rust/library/stdarch/crates/core_arch/src/arm/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/arm/neon.rs",
        "rust/library/stdarch/crates/core_arch/src/arm/sat.rs",
        "rust/library/stdarch/crates/core_arch/src/arm/simd32.rs",
        "rust/library/stdarch/crates/core_arch/src/arm_shared/barrier/common.rs",
        "rust/library/stdarch/crates/core_arch/src/arm_shared/barrier/cp15.rs",
        "rust/library/stdarch/crates/core_arch/src/arm_shared/barrier/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/arm_shared/barrier/not_mclass.rs",
        "rust/library/stdarch/crates/core_arch/src/arm_shared/barrier/v8.rs",
        "rust/library/stdarch/crates/core_arch/src/arm_shared/hints.rs",
        "rust/library/stdarch/crates/core_arch/src/arm_shared/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/arm_shared/neon/generated.rs",
        "rust/library/stdarch/crates/core_arch/src/arm_shared/neon/load_tests.rs",
        "rust/library/stdarch/crates/core_arch/src/arm_shared/neon/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/arm_shared/neon/shift_and_insert_tests.rs",
        "rust/library/stdarch/crates/core_arch/src/arm_shared/neon/store_tests.rs",
        "rust/library/stdarch/crates/core_arch/src/arm_shared/neon/table_lookup_tests.rs",
        "rust/library/stdarch/crates/core_arch/src/arm_shared/test_support.rs",
        "rust/library/stdarch/crates/core_arch/src/core_arch_docs.md",
        "rust/library/stdarch/crates/core_arch/src/lib.rs",
        "rust/library/stdarch/crates/core_arch/src/loongarch64/lasx/generated.rs",
        "rust/library/stdarch/crates/core_arch/src/loongarch64/lasx/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/loongarch64/lasx/tests.rs",
        "rust/library/stdarch/crates/core_arch/src/loongarch64/lasx/types.rs",
        "rust/library/stdarch/crates/core_arch/src/loongarch64/lsx/generated.rs",
        "rust/library/stdarch/crates/core_arch/src/loongarch64/lsx/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/loongarch64/lsx/tests.rs",
        "rust/library/stdarch/crates/core_arch/src/loongarch64/lsx/types.rs",
        "rust/library/stdarch/crates/core_arch/src/loongarch64/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/macros.rs",
        "rust/library/stdarch/crates/core_arch/src/mips/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/mips/msa.rs",
        "rust/library/stdarch/crates/core_arch/src/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/nvptx/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/nvptx/packed.rs",
        "rust/library/stdarch/crates/core_arch/src/powerpc/altivec.rs",
        "rust/library/stdarch/crates/core_arch/src/powerpc/macros.rs",
        "rust/library/stdarch/crates/core_arch/src/powerpc/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/powerpc/vsx.rs",
        "rust/library/stdarch/crates/core_arch/src/powerpc64/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/powerpc64/vsx.rs",
        "rust/library/stdarch/crates/core_arch/src/riscv32/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/riscv32/zk.rs",
        "rust/library/stdarch/crates/core_arch/src/riscv64/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/riscv64/zk.rs",
        "rust/library/stdarch/crates/core_arch/src/riscv_shared/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/riscv_shared/p.rs",
        "rust/library/stdarch/crates/core_arch/src/riscv_shared/zb.rs",
        "rust/library/stdarch/crates/core_arch/src/riscv_shared/zk.rs",
        "rust/library/stdarch/crates/core_arch/src/s390x/macros.rs",
        "rust/library/stdarch/crates/core_arch/src/s390x/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/s390x/vector.rs",
        "rust/library/stdarch/crates/core_arch/src/simd.rs",
        "rust/library/stdarch/crates/core_arch/src/wasm32/atomic.rs",
        "rust/library/stdarch/crates/core_arch/src/wasm32/memory.rs",
        "rust/library/stdarch/crates/core_arch/src/wasm32/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/wasm32/relaxed_simd.rs",
        "rust/library/stdarch/crates/core_arch/src/wasm32/simd128.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/abm.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/adx.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/aes.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/avx.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/avx2.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/avx512bf16.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/avx512bw.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/avx512cd.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/avx512dq.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/avx512f.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/avx512fp16.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/avx512ifma.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/avx512vnni.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/avxneconvert.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/bmi1.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/bmi2.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/bswap.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/bt.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/cpuid.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/eflags.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/f16c.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/fma.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/fxsr.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/gfni.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/kl.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/macros.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/pclmulqdq.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/rdrand.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/rdtsc.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/rtm.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/sha.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/sse.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/sse2.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/sse3.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/sse41.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/sse42.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/sse4a.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/ssse3.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/tbm.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/test.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/vaes.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/vpclmulqdq.rs",
        "rust/library/stdarch/crates/core_arch/src/x86/xsave.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/abm.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/adx.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/amx.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/avx.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/avx512bw.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/avx512f.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/bmi.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/bmi2.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/bswap.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/bt.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/cmpxchg16b.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/fxsr.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/macros.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/mod.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/rdrand.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/sse.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/sse2.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/sse41.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/sse42.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/tbm.rs",
        "rust/library/stdarch/crates/core_arch/src/x86_64/xsave.rs",
    ],
    crate = "core",
    crate_root = "rust/library/core/src/lib.rs",
    edition = "2024",
    visibility = [],
)

crate_download(
    name = "cpufeatures-0.2.17.crate",
    sha256 = "59ed5838eebb26a2bb2e58f6d5b5316989ae9d08bab10e0e6d103e656d1b0280",
    strip_prefix = "cpufeatures-0.2.17",
    urls = ["https://static.crates.io/crates/cpufeatures/0.2.17/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "cpufeatures-0.2.17",
    srcs = [":cpufeatures-0.2.17.crate"],
    crate = "cpufeatures",
    crate_root = "cpufeatures-0.2.17.crate/src/lib.rs",
    edition = "2018",
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
    },
    visibility = [],
)

crate_download(
    name = "crc32fast-1.5.0.crate",
    sha256 = "9481c1c90cbf2ac953f07c8d4a58aa3945c425b7185c9154d67a65e4230da511",
    strip_prefix = "crc32fast-1.5.0",
    urls = ["https://static.crates.io/crates/crc32fast/1.5.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "crc32fast-1.5.0",
    srcs = [":crc32fast-1.5.0.crate"],
    crate = "crc32fast",
    crate_root = "crc32fast-1.5.0.crate/src/lib.rs",
    edition = "2021",
    env = {
        "OUT_DIR": "$(location :crc32fast-1.5.0-build-script-run[out_dir])",
    },
    features = [
        "default",
        "std",
    ],
    rustc_flags = ["@$(location :crc32fast-1.5.0-build-script-run[rustc_flags])"],
    visibility = [],
    deps = [":cfg-if-1.0.3"],
)

rust_bootstrap_binary(
    name = "crc32fast-1.5.0-build-script-build",
    srcs = [":crc32fast-1.5.0.crate"],
    crate = "build_script_build",
    crate_root = "crc32fast-1.5.0.crate/build.rs",
    edition = "2021",
    features = [
        "default",
        "std",
    ],
    visibility = [],
)

rust_bootstrap_buildscript_run(
    name = "crc32fast-1.5.0-build-script-run",
    package_name = "crc32fast",
    buildscript_rule = ":crc32fast-1.5.0-build-script-build",
    features = [
        "default",
        "std",
    ],
    version = "1.5.0",
)

crate_download(
    name = "crossbeam-deque-0.8.6.crate",
    sha256 = "9dd111b7b7f7d55b72c0a6ae361660ee5853c9af73f70c3c2ef6858b950e2e51",
    strip_prefix = "crossbeam-deque-0.8.6",
    urls = ["https://static.crates.io/crates/crossbeam-deque/0.8.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "crossbeam-deque-0.8.6",
    srcs = [":crossbeam-deque-0.8.6.crate"],
    crate = "crossbeam_deque",
    crate_root = "crossbeam-deque-0.8.6.crate/src/lib.rs",
    edition = "2021",
    features = [
        "default",
        "std",
    ],
    visibility = [],
    deps = [
        ":crossbeam-epoch-0.9.18",
        ":crossbeam-utils-0.8.21",
    ],
)

crate_download(
    name = "crossbeam-epoch-0.9.18.crate",
    sha256 = "5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e",
    strip_prefix = "crossbeam-epoch-0.9.18",
    urls = ["https://static.crates.io/crates/crossbeam-epoch/0.9.18/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "crossbeam-epoch-0.9.18",
    srcs = [":crossbeam-epoch-0.9.18.crate"],
    crate = "crossbeam_epoch",
    crate_root = "crossbeam-epoch-0.9.18.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "std",
    ],
    visibility = [],
    deps = [":crossbeam-utils-0.8.21"],
)

crate_download(
    name = "crossbeam-utils-0.8.21.crate",
    sha256 = "d0a5c400df2834b80a4c3327b3aad3a4c4cd4de0629063962b03235697506a28",
    strip_prefix = "crossbeam-utils-0.8.21",
    urls = ["https://static.crates.io/crates/crossbeam-utils/0.8.21/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "crossbeam-utils-0.8.21",
    srcs = [":crossbeam-utils-0.8.21.crate"],
    crate = "crossbeam_utils",
    crate_root = "crossbeam-utils-0.8.21.crate/src/lib.rs",
    edition = "2021",
    features = [
        "default",
        "std",
    ],
    visibility = [],
)

crate_download(
    name = "crypto-common-0.1.6.crate",
    sha256 = "1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3",
    strip_prefix = "crypto-common-0.1.6",
    urls = ["https://static.crates.io/crates/crypto-common/0.1.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "crypto-common-0.1.6",
    srcs = [":crypto-common-0.1.6.crate"],
    crate = "crypto_common",
    crate_root = "crypto-common-0.1.6.crate/src/lib.rs",
    edition = "2018",
    features = ["std"],
    visibility = [],
    deps = [
        ":generic-array-0.14.7",
        ":typenum-1.18.0",
    ],
)

crate_download(
    name = "ctrlc-3.4.7.crate",
    sha256 = "46f93780a459b7d656ef7f071fe699c4d3d2cb201c4b24d085b6ddc505276e73",
    strip_prefix = "ctrlc-3.4.7",
    urls = ["https://static.crates.io/crates/ctrlc/3.4.7/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "ctrlc-3.4.7",
    srcs = [":ctrlc-3.4.7.crate"],
    crate = "ctrlc",
    crate_root = "ctrlc-3.4.7.crate/src/lib.rs",
    edition = "2021",
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":nix-0.30.1"],
        ),
        "linux-riscv64-compiler": dict(
            deps = [":nix-0.30.1"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":nix-0.30.1"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":nix-0.30.1"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":nix-0.30.1"],
        ),
        "windows-gnu-compiler": dict(
            deps = [":windows-sys-0.59.0"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":windows-sys-0.59.0"],
        ),
    },
    visibility = [],
)

crate_download(
    name = "darling-0.20.11.crate",
    sha256 = "fc7f46116c46ff9ab3eb1597a45688b6715c6e628b5c133e288e709a29bcb4ee",
    strip_prefix = "darling-0.20.11",
    urls = ["https://static.crates.io/crates/darling/0.20.11/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "darling-0.20.11",
    srcs = [":darling-0.20.11.crate"],
    crate = "darling",
    crate_root = "darling-0.20.11.crate/src/lib.rs",
    edition = "2021",
    features = [
        "default",
        "suggestions",
    ],
    visibility = [],
    deps = [
        ":darling_core-0.20.11",
        ":darling_macro-0.20.11",
    ],
)

crate_download(
    name = "darling_core-0.20.11.crate",
    sha256 = "0d00b9596d185e565c2207a0b01f8bd1a135483d02d9b7b0a54b11da8d53412e",
    strip_prefix = "darling_core-0.20.11",
    urls = ["https://static.crates.io/crates/darling_core/0.20.11/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "darling_core-0.20.11",
    srcs = [":darling_core-0.20.11.crate"],
    crate = "darling_core",
    crate_root = "darling_core-0.20.11.crate/src/lib.rs",
    edition = "2021",
    features = [
        "strsim",
        "suggestions",
    ],
    visibility = [],
    deps = [
        ":fnv-1.0.7",
        ":ident_case-1.0.1",
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":strsim-0.11.1",
        ":syn-2.0.106",
    ],
)

crate_download(
    name = "darling_macro-0.20.11.crate",
    sha256 = "fc34b93ccb385b40dc71c6fceac4b2ad23662c7eeb248cf10d529b7e055b6ead",
    strip_prefix = "darling_macro-0.20.11",
    urls = ["https://static.crates.io/crates/darling_macro/0.20.11/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "darling_macro-0.20.11",
    srcs = [":darling_macro-0.20.11.crate"],
    crate = "darling_macro",
    crate_root = "darling_macro-0.20.11.crate/src/lib.rs",
    edition = "2021",
    proc_macro = True,
    visibility = [],
    deps = [
        ":darling_core-0.20.11",
        ":quote-1.0.40",
        ":syn-2.0.106",
    ],
)

crate_download(
    name = "datafrog-2.0.1.crate",
    sha256 = "a0afaad2b26fa326569eb264b1363e8ae3357618c43982b3f285f0774ce76b69",
    strip_prefix = "datafrog-2.0.1",
    urls = ["https://static.crates.io/crates/datafrog/2.0.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "datafrog-2.0.1",
    srcs = [":datafrog-2.0.1.crate"],
    crate = "datafrog",
    crate_root = "datafrog-2.0.1.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
)

crate_download(
    name = "derive-where-1.6.0.crate",
    sha256 = "ef941ded77d15ca19b40374869ac6000af1c9f2a4c0f3d4c70926287e6364a8f",
    strip_prefix = "derive-where-1.6.0",
    urls = ["https://static.crates.io/crates/derive-where/1.6.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "derive-where-1.6.0",
    srcs = [":derive-where-1.6.0.crate"],
    crate = "derive_where",
    crate_root = "derive-where-1.6.0.crate/src/lib.rs",
    edition = "2021",
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
    ],
)

crate_download(
    name = "derive_setters-0.1.8.crate",
    sha256 = "ae5c625eda104c228c06ecaf988d1c60e542176bd7a490e60eeda3493244c0c9",
    strip_prefix = "derive_setters-0.1.8",
    urls = ["https://static.crates.io/crates/derive_setters/0.1.8/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "derive_setters-0.1.8",
    srcs = [":derive_setters-0.1.8.crate"],
    crate = "derive_setters",
    crate_root = "derive_setters-0.1.8.crate/src/lib.rs",
    edition = "2018",
    proc_macro = True,
    visibility = [],
    deps = [
        ":darling-0.20.11",
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
    ],
)

crate_download(
    name = "digest-0.10.7.crate",
    sha256 = "9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292",
    strip_prefix = "digest-0.10.7",
    urls = ["https://static.crates.io/crates/digest/0.10.7/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "digest-0.10.7",
    srcs = [":digest-0.10.7.crate"],
    crate = "digest",
    crate_root = "digest-0.10.7.crate/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "block-buffer",
        "core-api",
        "default",
        "std",
    ],
    visibility = [],
    deps = [
        ":block-buffer-0.10.4",
        ":crypto-common-0.1.6",
    ],
)

crate_download(
    name = "displaydoc-0.2.5.crate",
    sha256 = "97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0",
    strip_prefix = "displaydoc-0.2.5",
    urls = ["https://static.crates.io/crates/displaydoc/0.2.5/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "displaydoc-0.2.5",
    srcs = [":displaydoc-0.2.5.crate"],
    crate = "displaydoc",
    crate_root = "displaydoc-0.2.5.crate/src/lib.rs",
    edition = "2021",
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
    ],
)

crate_download(
    name = "either-1.15.0.crate",
    sha256 = "48c757948c5ede0e46177b7add2e67155f70e33c07fea8284df6576da70b3719",
    strip_prefix = "either-1.15.0",
    urls = ["https://static.crates.io/crates/either/1.15.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "either-1.15.0",
    srcs = [":either-1.15.0.crate"],
    crate = "either",
    crate_root = "either-1.15.0.crate/src/lib.rs",
    edition = "2021",
    features = [
        "default",
        "std",
        "use_std",
    ],
    visibility = [],
)

crate_download(
    name = "elsa-1.11.2.crate",
    sha256 = "9abf33c656a7256451ebb7d0082c5a471820c31269e49d807c538c252352186e",
    strip_prefix = "elsa-1.11.2",
    urls = ["https://static.crates.io/crates/elsa/1.11.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "elsa-1.11.2",
    srcs = [":elsa-1.11.2.crate"],
    crate = "elsa",
    crate_root = "elsa-1.11.2.crate/src/lib.rs",
    edition = "2018",
    features = ["default"],
    visibility = [],
    deps = [":stable_deref_trait-1.2.0"],
)

crate_download(
    name = "ena-0.14.3.crate",
    sha256 = "3d248bdd43ce613d87415282f69b9bb99d947d290b10962dd6c56233312c2ad5",
    strip_prefix = "ena-0.14.3",
    urls = ["https://static.crates.io/crates/ena/0.14.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "ena-0.14.3",
    srcs = [":ena-0.14.3.crate"],
    crate = "ena",
    crate_root = "ena-0.14.3.crate/src/lib.rs",
    edition = "2015",
    visibility = [],
    deps = [":log-0.4.27"],
)

crate_download(
    name = "equivalent-1.0.2.crate",
    sha256 = "877a4ace8713b0bcf2a4e7eec82529c029f1d0619886d18145fea96c3ffe5c0f",
    strip_prefix = "equivalent-1.0.2",
    urls = ["https://static.crates.io/crates/equivalent/1.0.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "equivalent-1.0.2",
    srcs = [":equivalent-1.0.2.crate"],
    crate = "equivalent",
    crate_root = "equivalent-1.0.2.crate/src/lib.rs",
    edition = "2015",
    visibility = [],
)

crate_download(
    name = "errno-0.3.13.crate",
    sha256 = "778e2ac28f6c47af28e4907f13ffd1e1ddbd400980a9abd7c8df189bf578a5ad",
    strip_prefix = "errno-0.3.13",
    urls = ["https://static.crates.io/crates/errno/0.3.13/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "errno-0.3.13",
    srcs = [":errno-0.3.13.crate"],
    crate = "errno",
    crate_root = "errno-0.3.13.crate/src/lib.rs",
    edition = "2018",
    features = ["std"],
    platform = {
        "macos-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
    },
    visibility = [],
)

crate_download(
    name = "fallible-iterator-0.3.0.crate",
    sha256 = "2acce4a10f12dc2fb14a218589d4f1f62ef011b2d0cc4b3cb1bba8e94da14649",
    strip_prefix = "fallible-iterator-0.3.0",
    urls = ["https://static.crates.io/crates/fallible-iterator/0.3.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "fallible-iterator-0.3.0",
    srcs = [":fallible-iterator-0.3.0.crate"],
    crate = "fallible_iterator",
    crate_root = "fallible-iterator-0.3.0.crate/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "std",
    ],
    visibility = [],
)

crate_download(
    name = "fastrand-2.3.0.crate",
    sha256 = "37909eebbb50d72f9059c3b6d82c0463f2ff062c9e95845c43a6c9c0355411be",
    strip_prefix = "fastrand-2.3.0",
    urls = ["https://static.crates.io/crates/fastrand/2.3.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "fastrand-2.3.0",
    srcs = [":fastrand-2.3.0.crate"],
    crate = "fastrand",
    crate_root = "fastrand-2.3.0.crate/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "default",
        "std",
    ],
    visibility = [],
)

crate_download(
    name = "flate2-1.1.2.crate",
    sha256 = "4a3d7db9596fecd151c5f638c0ee5d5bd487b6e0ea232e5dc96d5250f6f94b1d",
    strip_prefix = "flate2-1.1.2",
    urls = ["https://static.crates.io/crates/flate2/1.1.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "flate2-1.1.2",
    srcs = [":flate2-1.1.2.crate"],
    crate = "flate2",
    crate_root = "flate2-1.1.2.crate/src/lib.rs",
    edition = "2018",
    features = [
        "any_impl",
        "default",
        "miniz_oxide",
        "rust_backend",
    ],
    visibility = [],
    deps = [
        ":crc32fast-1.5.0",
        ":miniz_oxide-0.8.9",
    ],
)

crate_download(
    name = "fluent-bundle-0.16.0.crate",
    sha256 = "01203cb8918f5711e73891b347816d932046f95f54207710bda99beaeb423bf4",
    strip_prefix = "fluent-bundle-0.16.0",
    urls = ["https://static.crates.io/crates/fluent-bundle/0.16.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "fluent-bundle-0.16.0",
    srcs = [":fluent-bundle-0.16.0.crate"],
    crate = "fluent_bundle",
    crate_root = "fluent-bundle-0.16.0.crate/src/lib.rs",
    edition = "2021",
    features = ["default"],
    visibility = [],
    deps = [
        ":fluent-langneg-0.13.0",
        ":fluent-syntax-0.12.0",
        ":intl-memoizer-0.5.3",
        ":intl_pluralrules-7.0.2",
        ":rustc-hash-2.1.1",
        ":self_cell-1.2.0",
        ":smallvec-1.15.1",
        ":unic-langid-0.9.6",
    ],
)

crate_download(
    name = "fluent-langneg-0.13.0.crate",
    sha256 = "2c4ad0989667548f06ccd0e306ed56b61bd4d35458d54df5ec7587c0e8ed5e94",
    strip_prefix = "fluent-langneg-0.13.0",
    urls = ["https://static.crates.io/crates/fluent-langneg/0.13.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "fluent-langneg-0.13.0",
    srcs = [":fluent-langneg-0.13.0.crate"],
    crate = "fluent_langneg",
    crate_root = "fluent-langneg-0.13.0.crate/src/lib.rs",
    edition = "2018",
    features = ["default"],
    visibility = [],
    deps = [":unic-langid-0.9.6"],
)

crate_download(
    name = "fluent-syntax-0.12.0.crate",
    sha256 = "54f0d287c53ffd184d04d8677f590f4ac5379785529e5e08b1c8083acdd5c198",
    strip_prefix = "fluent-syntax-0.12.0",
    urls = ["https://static.crates.io/crates/fluent-syntax/0.12.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "fluent-syntax-0.12.0",
    srcs = [":fluent-syntax-0.12.0.crate"],
    crate = "fluent_syntax",
    crate_root = "fluent-syntax-0.12.0.crate/src/lib.rs",
    edition = "2021",
    features = ["default"],
    visibility = [],
    deps = [
        ":memchr-2.7.5",
        ":thiserror-2.0.16",
    ],
)

crate_download(
    name = "fnv-1.0.7.crate",
    sha256 = "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1",
    strip_prefix = "fnv-1.0.7",
    urls = ["https://static.crates.io/crates/fnv/1.0.7/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "fnv-1.0.7",
    srcs = [":fnv-1.0.7.crate"],
    crate = "fnv",
    crate_root = "fnv-1.0.7.crate/lib.rs",
    edition = "2015",
    features = [
        "default",
        "std",
    ],
    visibility = [],
)

crate_download(
    name = "foldhash-0.1.5.crate",
    sha256 = "d9c4f5dac5e15c24eb999c26181a6ca40b39fe946cbe4c263c7209467bc83af2",
    strip_prefix = "foldhash-0.1.5",
    urls = ["https://static.crates.io/crates/foldhash/0.1.5/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "foldhash-0.1.5",
    srcs = [":foldhash-0.1.5.crate"],
    crate = "foldhash",
    crate_root = "foldhash-0.1.5.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
)

crate_download(
    name = "form_urlencoded-1.2.2.crate",
    sha256 = "cb4cb245038516f5f85277875cdaa4f7d2c9a0fa0468de06ed190163b1581fcf",
    strip_prefix = "form_urlencoded-1.2.2",
    urls = ["https://static.crates.io/crates/form_urlencoded/1.2.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "form_urlencoded-1.2.2",
    srcs = [":form_urlencoded-1.2.2.crate"],
    crate = "form_urlencoded",
    crate_root = "form_urlencoded-1.2.2.crate/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "std",
    ],
    visibility = [],
    deps = [":percent-encoding-2.3.2"],
)

crate_download(
    name = "generic-array-0.14.7.crate",
    sha256 = "85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a",
    strip_prefix = "generic-array-0.14.7",
    urls = ["https://static.crates.io/crates/generic-array/0.14.7/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "generic-array-0.14.7",
    srcs = [":generic-array-0.14.7.crate"],
    crate = "generic_array",
    crate_root = "generic-array-0.14.7.crate/src/lib.rs",
    edition = "2015",
    features = ["more_lengths"],
    visibility = [],
    deps = [":typenum-1.18.0"],
)

crate_download(
    name = "getopts-0.2.23.crate",
    sha256 = "cba6ae63eb948698e300f645f87c70f76630d505f23b8907cf1e193ee85048c1",
    strip_prefix = "getopts-0.2.23",
    urls = ["https://static.crates.io/crates/getopts/0.2.23/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "getopts-0.2.23",
    srcs = [":getopts-0.2.23.crate"],
    crate = "getopts",
    crate_root = "getopts-0.2.23.crate/src/lib.rs",
    edition = "2021",
    platform = {
        "linux-arm64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
                "std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "linux-riscv64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
                "std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "linux-x86_64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
                "std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "macos-arm64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
                "std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "macos-x86_64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
                "std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "windows-gnu-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
                "std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "windows-msvc-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
                "std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
    },
    visibility = [],
    deps = [":unicode-width-0.2.1"],
)

crate_download(
    name = "getrandom-0.2.16.crate",
    sha256 = "335ff9f135e4384c8150d6f27c6daed433577f86b4750418338c01a1a2528592",
    strip_prefix = "getrandom-0.2.16",
    urls = ["https://static.crates.io/crates/getrandom/0.2.16/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "getrandom-0.2.16",
    srcs = [":getrandom-0.2.16.crate"],
    crate = "getrandom",
    crate_root = "getrandom-0.2.16.crate/src/lib.rs",
    edition = "2018",
    features = ["std"],
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-riscv64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
    },
    visibility = [],
    deps = [":cfg-if-1.0.3"],
)

crate_download(
    name = "getrandom-0.3.3.crate",
    sha256 = "26145e563e54f2cadc477553f1ec5ee650b00862f0a58bcd12cbdc5f0ea2d2f4",
    strip_prefix = "getrandom-0.3.3",
    urls = ["https://static.crates.io/crates/getrandom/0.3.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "getrandom-0.3.3",
    srcs = [":getrandom-0.3.3.crate"],
    crate = "getrandom",
    crate_root = "getrandom-0.3.3.crate/src/lib.rs",
    edition = "2021",
    features = ["std"],
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-riscv64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
    },
    visibility = [],
    deps = [":cfg-if-1.0.3"],
)

crate_download(
    name = "gimli-0.31.1.crate",
    sha256 = "07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f",
    strip_prefix = "gimli-0.31.1",
    urls = ["https://static.crates.io/crates/gimli/0.31.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "gimli-0.31.1",
    srcs = [":gimli-0.31.1.crate"],
    crate = "gimli",
    crate_root = "gimli-0.31.1.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "endian-reader",
        "fallible-iterator",
        "read",
        "read-all",
        "read-core",
        "std",
        "write",
    ],
    visibility = [],
    deps = [
        ":fallible-iterator-0.3.0",
        ":indexmap-2.11.0",
        ":stable_deref_trait-1.2.0",
    ],
)

crate_download(
    name = "gimli-0.32.1.crate",
    sha256 = "cd54e8795d97c9f5561c63529d98fcc0c2eed9e982deecc396797f2c04cff298",
    strip_prefix = "gimli-0.32.1",
    urls = ["https://static.crates.io/crates/gimli/0.32.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "gimli-0.32.1",
    srcs = [":gimli-0.32.1.crate"],
    crate = "gimli",
    crate_root = "gimli-0.32.1.crate/src/lib.rs",
    edition = "2018",
    features = [
        "read",
        "read-core",
        "rustc-dep-of-std",
    ],
    named_deps = {
        "alloc": ":rustc-std-workspace-alloc-1.99.0",
        "core": ":rustc-std-workspace-core-1.99.0",
    },
    visibility = [],
)

crate_download(
    name = "gsgdt-0.1.2.crate",
    sha256 = "a0d876ce7262df96262a2a19531da6ff9a86048224d49580a585fc5c04617825",
    strip_prefix = "gsgdt-0.1.2",
    urls = ["https://static.crates.io/crates/gsgdt/0.1.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "gsgdt-0.1.2",
    srcs = [":gsgdt-0.1.2.crate"],
    crate = "gsgdt",
    crate_root = "gsgdt-0.1.2.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
    deps = [":serde-1.0.219"],
)

crate_download(
    name = "hashbrown-0.15.5.crate",
    sha256 = "9229cfe53dfd69f0609a49f65461bd93001ea1ef889cd5529dd176593f5338a1",
    strip_prefix = "hashbrown-0.15.5",
    urls = ["https://static.crates.io/crates/hashbrown/0.15.5/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "hashbrown-0.15.5",
    srcs = [":hashbrown-0.15.5.crate"],
    crate = "hashbrown",
    crate_root = "hashbrown-0.15.5.crate/src/lib.rs",
    edition = "2021",
    features = ["nightly"],
    platform = {
        "linux-arm64-compiler": dict(
            features = [
                "allocator-api2",
                "default",
                "default-hasher",
                "equivalent",
                "inline-more",
                "raw-entry",
            ],
            deps = [
                ":allocator-api2-0.2.21",
                ":equivalent-1.0.2",
                ":foldhash-0.1.5",
            ],
        ),
        "linux-arm64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
                "rustc-internal-api",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "linux-riscv64-compiler": dict(
            features = [
                "allocator-api2",
                "default",
                "default-hasher",
                "equivalent",
                "inline-more",
                "raw-entry",
            ],
            deps = [
                ":allocator-api2-0.2.21",
                ":equivalent-1.0.2",
                ":foldhash-0.1.5",
            ],
        ),
        "linux-riscv64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
                "rustc-internal-api",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "linux-x86_64-compiler": dict(
            features = [
                "allocator-api2",
                "default",
                "default-hasher",
                "equivalent",
                "inline-more",
                "raw-entry",
            ],
            deps = [
                ":allocator-api2-0.2.21",
                ":equivalent-1.0.2",
                ":foldhash-0.1.5",
            ],
        ),
        "linux-x86_64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
                "rustc-internal-api",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "macos-arm64-compiler": dict(
            features = [
                "allocator-api2",
                "default",
                "default-hasher",
                "equivalent",
                "inline-more",
                "raw-entry",
            ],
            deps = [
                ":allocator-api2-0.2.21",
                ":equivalent-1.0.2",
                ":foldhash-0.1.5",
            ],
        ),
        "macos-arm64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
                "rustc-internal-api",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "macos-x86_64-compiler": dict(
            features = [
                "allocator-api2",
                "default",
                "default-hasher",
                "equivalent",
                "inline-more",
                "raw-entry",
            ],
            deps = [
                ":allocator-api2-0.2.21",
                ":equivalent-1.0.2",
                ":foldhash-0.1.5",
            ],
        ),
        "macos-x86_64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
                "rustc-internal-api",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "windows-gnu-compiler": dict(
            features = [
                "allocator-api2",
                "default",
                "default-hasher",
                "equivalent",
                "inline-more",
                "raw-entry",
            ],
            deps = [
                ":allocator-api2-0.2.21",
                ":equivalent-1.0.2",
                ":foldhash-0.1.5",
            ],
        ),
        "windows-gnu-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
                "rustc-internal-api",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "windows-msvc-compiler": dict(
            features = [
                "allocator-api2",
                "default",
                "default-hasher",
                "equivalent",
                "inline-more",
                "raw-entry",
            ],
            deps = [
                ":allocator-api2-0.2.21",
                ":equivalent-1.0.2",
                ":foldhash-0.1.5",
            ],
        ),
        "windows-msvc-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
                "rustc-internal-api",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
    },
    rustc_flags = select({
        "//constraints:compiler": [],
        "//constraints:library": ["-Zforce-unstable-if-unmarked"],
    }),
    visibility = [],
)

crate_download(
    name = "icu_collections-2.0.0.crate",
    sha256 = "200072f5d0e3614556f94a9930d5dc3e0662a652823904c3a75dc3b0af7fee47",
    strip_prefix = "icu_collections-2.0.0",
    urls = ["https://static.crates.io/crates/icu_collections/2.0.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "icu_collections-2.0.0",
    srcs = [":icu_collections-2.0.0.crate"],
    crate = "icu_collections",
    crate_root = "icu_collections-2.0.0.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [
        ":displaydoc-0.2.5",
        ":potential_utf-0.1.2",
        ":yoke-0.8.0",
        ":zerofrom-0.1.6",
        ":zerovec-0.11.4",
    ],
)

crate_download(
    name = "icu_list-1.5.0.crate",
    sha256 = "bbfeda1d7775b6548edd4e8b7562304a559a91ed56ab56e18961a053f367c365",
    strip_prefix = "icu_list-1.5.0",
    urls = ["https://static.crates.io/crates/icu_list/1.5.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "icu_list-1.5.0",
    srcs = [":icu_list-1.5.0.crate"],
    crate = "icu_list",
    crate_root = "icu_list-1.5.0.crate/src/lib.rs",
    edition = "2021",
    features = [
        "compiled_data",
        "default",
    ],
    visibility = [],
    deps = [
        ":displaydoc-0.2.5",
        ":icu_list_data-1.5.1",
        ":icu_locid_transform-1.5.0",
        ":icu_provider-1.5.0",
        ":regex-automata-0.2.0",
        ":writeable-0.5.5",
    ],
)

crate_download(
    name = "icu_list_data-1.5.1.crate",
    sha256 = "52b1a7fbdbf3958f1be8354cb59ac73f165b7b7082d447ff2090355c9a069120",
    strip_prefix = "icu_list_data-1.5.1",
    urls = ["https://static.crates.io/crates/icu_list_data/1.5.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "icu_list_data-1.5.1",
    srcs = [":icu_list_data-1.5.1.crate"],
    crate = "icu_list_data",
    crate_root = "icu_list_data-1.5.1.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
)

crate_download(
    name = "icu_locale_core-2.0.0.crate",
    sha256 = "0cde2700ccaed3872079a65fb1a78f6c0a36c91570f28755dda67bc8f7d9f00a",
    strip_prefix = "icu_locale_core-2.0.0",
    urls = ["https://static.crates.io/crates/icu_locale_core/2.0.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "icu_locale_core-2.0.0",
    srcs = [":icu_locale_core-2.0.0.crate"],
    crate = "icu_locale_core",
    crate_root = "icu_locale_core-2.0.0.crate/src/lib.rs",
    edition = "2021",
    features = ["zerovec"],
    visibility = [],
    deps = [
        ":displaydoc-0.2.5",
        ":litemap-0.8.0",
        ":tinystr-0.8.1",
        ":writeable-0.6.1",
        ":zerovec-0.11.4",
    ],
)

crate_download(
    name = "icu_locid-1.5.0.crate",
    sha256 = "13acbb8371917fc971be86fc8057c41a64b521c184808a698c02acc242dbf637",
    strip_prefix = "icu_locid-1.5.0",
    urls = ["https://static.crates.io/crates/icu_locid/1.5.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "icu_locid-1.5.0",
    srcs = [":icu_locid-1.5.0.crate"],
    crate = "icu_locid",
    crate_root = "icu_locid-1.5.0.crate/src/lib.rs",
    edition = "2021",
    features = ["zerovec"],
    visibility = [],
    deps = [
        ":displaydoc-0.2.5",
        ":litemap-0.7.5",
        ":tinystr-0.7.6",
        ":writeable-0.5.5",
        ":zerovec-0.10.4",
    ],
)

crate_download(
    name = "icu_locid_transform-1.5.0.crate",
    sha256 = "01d11ac35de8e40fdeda00d9e1e9d92525f3f9d887cdd7aa81d727596788b54e",
    strip_prefix = "icu_locid_transform-1.5.0",
    urls = ["https://static.crates.io/crates/icu_locid_transform/1.5.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "icu_locid_transform-1.5.0",
    srcs = [":icu_locid_transform-1.5.0.crate"],
    crate = "icu_locid_transform",
    crate_root = "icu_locid_transform-1.5.0.crate/src/lib.rs",
    edition = "2021",
    features = [
        "compiled_data",
        "default",
    ],
    visibility = [],
    deps = [
        ":displaydoc-0.2.5",
        ":icu_locid-1.5.0",
        ":icu_locid_transform_data-1.5.1",
        ":icu_provider-1.5.0",
        ":tinystr-0.7.6",
        ":zerovec-0.10.4",
    ],
)

crate_download(
    name = "icu_locid_transform_data-1.5.1.crate",
    sha256 = "7515e6d781098bf9f7205ab3fc7e9709d34554ae0b21ddbcb5febfa4bc7df11d",
    strip_prefix = "icu_locid_transform_data-1.5.1",
    urls = ["https://static.crates.io/crates/icu_locid_transform_data/1.5.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "icu_locid_transform_data-1.5.1",
    srcs = [":icu_locid_transform_data-1.5.1.crate"],
    crate = "icu_locid_transform_data",
    crate_root = "icu_locid_transform_data-1.5.1.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
)

crate_download(
    name = "icu_normalizer-2.0.0.crate",
    sha256 = "436880e8e18df4d7bbc06d58432329d6458cc84531f7ac5f024e93deadb37979",
    strip_prefix = "icu_normalizer-2.0.0",
    urls = ["https://static.crates.io/crates/icu_normalizer/2.0.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "icu_normalizer-2.0.0",
    srcs = [":icu_normalizer-2.0.0.crate"],
    crate = "icu_normalizer",
    crate_root = "icu_normalizer-2.0.0.crate/src/lib.rs",
    edition = "2021",
    features = ["compiled_data"],
    visibility = [],
    deps = [
        ":displaydoc-0.2.5",
        ":icu_collections-2.0.0",
        ":icu_normalizer_data-2.0.0",
        ":icu_provider-2.0.0",
        ":smallvec-1.15.1",
        ":zerovec-0.11.4",
    ],
)

crate_download(
    name = "icu_normalizer_data-2.0.0.crate",
    sha256 = "00210d6893afc98edb752b664b8890f0ef174c8adbb8d0be9710fa66fbbf72d3",
    strip_prefix = "icu_normalizer_data-2.0.0",
    urls = ["https://static.crates.io/crates/icu_normalizer_data/2.0.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "icu_normalizer_data-2.0.0",
    srcs = [":icu_normalizer_data-2.0.0.crate"],
    crate = "icu_normalizer_data",
    crate_root = "icu_normalizer_data-2.0.0.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
)

crate_download(
    name = "icu_properties-2.0.1.crate",
    sha256 = "016c619c1eeb94efb86809b015c58f479963de65bdb6253345c1a1276f22e32b",
    strip_prefix = "icu_properties-2.0.1",
    urls = ["https://static.crates.io/crates/icu_properties/2.0.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "icu_properties-2.0.1",
    srcs = [":icu_properties-2.0.1.crate"],
    crate = "icu_properties",
    crate_root = "icu_properties-2.0.1.crate/src/lib.rs",
    edition = "2021",
    features = ["compiled_data"],
    visibility = [],
    deps = [
        ":displaydoc-0.2.5",
        ":icu_collections-2.0.0",
        ":icu_locale_core-2.0.0",
        ":icu_properties_data-2.0.1",
        ":icu_provider-2.0.0",
        ":potential_utf-0.1.2",
        ":zerotrie-0.2.2",
        ":zerovec-0.11.4",
    ],
)

crate_download(
    name = "icu_properties_data-2.0.1.crate",
    sha256 = "298459143998310acd25ffe6810ed544932242d3f07083eee1084d83a71bd632",
    strip_prefix = "icu_properties_data-2.0.1",
    urls = ["https://static.crates.io/crates/icu_properties_data/2.0.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "icu_properties_data-2.0.1",
    srcs = [":icu_properties_data-2.0.1.crate"],
    crate = "icu_properties_data",
    crate_root = "icu_properties_data-2.0.1.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
)

crate_download(
    name = "icu_provider-1.5.0.crate",
    sha256 = "6ed421c8a8ef78d3e2dbc98a973be2f3770cb42b606e3ab18d6237c4dfde68d9",
    strip_prefix = "icu_provider-1.5.0",
    urls = ["https://static.crates.io/crates/icu_provider/1.5.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "icu_provider-1.5.0",
    srcs = [":icu_provider-1.5.0.crate"],
    crate = "icu_provider",
    crate_root = "icu_provider-1.5.0.crate/src/lib.rs",
    edition = "2021",
    features = [
        "macros",
        "sync",
    ],
    visibility = [],
    deps = [
        ":displaydoc-0.2.5",
        ":icu_locid-1.5.0",
        ":icu_provider_macros-1.5.0",
        ":stable_deref_trait-1.2.0",
        ":tinystr-0.7.6",
        ":writeable-0.5.5",
        ":yoke-0.7.5",
        ":zerofrom-0.1.6",
        ":zerovec-0.10.4",
    ],
)

crate_download(
    name = "icu_provider-2.0.0.crate",
    sha256 = "03c80da27b5f4187909049ee2d72f276f0d9f99a42c306bd0131ecfe04d8e5af",
    strip_prefix = "icu_provider-2.0.0",
    urls = ["https://static.crates.io/crates/icu_provider/2.0.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "icu_provider-2.0.0",
    srcs = [":icu_provider-2.0.0.crate"],
    crate = "icu_provider",
    crate_root = "icu_provider-2.0.0.crate/src/lib.rs",
    edition = "2021",
    features = [
        "baked",
        "zerotrie",
    ],
    visibility = [],
    deps = [
        ":displaydoc-0.2.5",
        ":icu_locale_core-2.0.0",
        ":stable_deref_trait-1.2.0",
        ":tinystr-0.8.1",
        ":writeable-0.6.1",
        ":yoke-0.8.0",
        ":zerofrom-0.1.6",
        ":zerotrie-0.2.2",
        ":zerovec-0.11.4",
    ],
)

crate_download(
    name = "icu_provider_adapters-1.5.0.crate",
    sha256 = "d6324dfd08348a8e0374a447ebd334044d766b1839bb8d5ccf2482a99a77c0bc",
    strip_prefix = "icu_provider_adapters-1.5.0",
    urls = ["https://static.crates.io/crates/icu_provider_adapters/1.5.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "icu_provider_adapters-1.5.0",
    srcs = [":icu_provider_adapters-1.5.0.crate"],
    crate = "icu_provider_adapters",
    crate_root = "icu_provider_adapters-1.5.0.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [
        ":icu_locid-1.5.0",
        ":icu_locid_transform-1.5.0",
        ":icu_provider-1.5.0",
        ":tinystr-0.7.6",
        ":zerovec-0.10.4",
    ],
)

crate_download(
    name = "icu_provider_macros-1.5.0.crate",
    sha256 = "1ec89e9337638ecdc08744df490b221a7399bf8d164eb52a665454e60e075ad6",
    strip_prefix = "icu_provider_macros-1.5.0",
    urls = ["https://static.crates.io/crates/icu_provider_macros/1.5.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "icu_provider_macros-1.5.0",
    srcs = [":icu_provider_macros-1.5.0.crate"],
    crate = "icu_provider_macros",
    crate_root = "icu_provider_macros-1.5.0.crate/src/lib.rs",
    edition = "2021",
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
    ],
)

crate_download(
    name = "ident_case-1.0.1.crate",
    sha256 = "b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39",
    strip_prefix = "ident_case-1.0.1",
    urls = ["https://static.crates.io/crates/ident_case/1.0.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "ident_case-1.0.1",
    srcs = [":ident_case-1.0.1.crate"],
    crate = "ident_case",
    crate_root = "ident_case-1.0.1.crate/src/lib.rs",
    edition = "2015",
    visibility = [],
)

crate_download(
    name = "idna-1.1.0.crate",
    sha256 = "3b0875f23caa03898994f6ddc501886a45c7d3d62d04d2d90788d47be1b1e4de",
    strip_prefix = "idna-1.1.0",
    urls = ["https://static.crates.io/crates/idna/1.1.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "idna-1.1.0",
    srcs = [":idna-1.1.0.crate"],
    crate = "idna",
    crate_root = "idna-1.1.0.crate/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "compiled_data",
        "std",
    ],
    visibility = [],
    deps = [
        ":idna_adapter-1.2.1",
        ":smallvec-1.15.1",
        ":utf8_iter-1.0.4",
    ],
)

crate_download(
    name = "idna_adapter-1.2.1.crate",
    sha256 = "3acae9609540aa318d1bc588455225fb2085b9ed0c4f6bd0d9d5bcd86f1a0344",
    strip_prefix = "idna_adapter-1.2.1",
    urls = ["https://static.crates.io/crates/idna_adapter/1.2.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "idna_adapter-1.2.1",
    srcs = [":idna_adapter-1.2.1.crate"],
    crate = "idna_adapter",
    crate_root = "idna_adapter-1.2.1.crate/src/lib.rs",
    edition = "2021",
    features = ["compiled_data"],
    visibility = [],
    deps = [
        ":icu_normalizer-2.0.0",
        ":icu_properties-2.0.1",
    ],
)

crate_download(
    name = "indexmap-2.11.0.crate",
    sha256 = "f2481980430f9f78649238835720ddccc57e52df14ffce1c6f37391d61b563e9",
    strip_prefix = "indexmap-2.11.0",
    urls = ["https://static.crates.io/crates/indexmap/2.11.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "indexmap-2.11.0",
    srcs = [":indexmap-2.11.0.crate"],
    crate = "indexmap",
    crate_root = "indexmap-2.11.0.crate/src/lib.rs",
    edition = "2021",
    features = [
        "default",
        "std",
    ],
    visibility = [],
    deps = [
        ":equivalent-1.0.2",
        ":hashbrown-0.15.5",
    ],
)

crate_download(
    name = "intl-memoizer-0.5.3.crate",
    sha256 = "310da2e345f5eb861e7a07ee182262e94975051db9e4223e909ba90f392f163f",
    strip_prefix = "intl-memoizer-0.5.3",
    urls = ["https://static.crates.io/crates/intl-memoizer/0.5.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "intl-memoizer-0.5.3",
    srcs = [":intl-memoizer-0.5.3.crate"],
    crate = "intl_memoizer",
    crate_root = "intl-memoizer-0.5.3.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [
        ":type-map-0.5.1",
        ":unic-langid-0.9.6",
    ],
)

crate_download(
    name = "intl_pluralrules-7.0.2.crate",
    sha256 = "078ea7b7c29a2b4df841a7f6ac8775ff6074020c6776d48491ce2268e068f972",
    strip_prefix = "intl_pluralrules-7.0.2",
    urls = ["https://static.crates.io/crates/intl_pluralrules/7.0.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "intl_pluralrules-7.0.2",
    srcs = [":intl_pluralrules-7.0.2.crate"],
    crate = "intl_pluralrules",
    crate_root = "intl_pluralrules-7.0.2.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
    deps = [":unic-langid-0.9.6"],
)

crate_download(
    name = "is_terminal_polyfill-1.70.1.crate",
    sha256 = "7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf",
    strip_prefix = "is_terminal_polyfill-1.70.1",
    urls = ["https://static.crates.io/crates/is_terminal_polyfill/1.70.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "is_terminal_polyfill-1.70.1",
    srcs = [":is_terminal_polyfill-1.70.1.crate"],
    crate = "is_terminal_polyfill",
    crate_root = "is_terminal_polyfill-1.70.1.crate/src/lib.rs",
    edition = "2021",
    features = ["default"],
    visibility = [],
)

crate_download(
    name = "itertools-0.12.1.crate",
    sha256 = "ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569",
    strip_prefix = "itertools-0.12.1",
    urls = ["https://static.crates.io/crates/itertools/0.12.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "itertools-0.12.1",
    srcs = [":itertools-0.12.1.crate"],
    crate = "itertools",
    crate_root = "itertools-0.12.1.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "use_alloc",
        "use_std",
    ],
    visibility = [],
    deps = [":either-1.15.0"],
)

crate_download(
    name = "itoa-1.0.15.crate",
    sha256 = "4a5f13b858c8d314ee3e8f639011f7ccefe71f97f96e50151fb991f267928e2c",
    strip_prefix = "itoa-1.0.15",
    urls = ["https://static.crates.io/crates/itoa/1.0.15/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "itoa-1.0.15",
    srcs = [":itoa-1.0.15.crate"],
    crate = "itoa",
    crate_root = "itoa-1.0.15.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
)

crate_download(
    name = "jiff-0.2.15.crate",
    sha256 = "be1f93b8b1eb69c77f24bbb0afdf66f54b632ee39af40ca21c4365a1d7347e49",
    strip_prefix = "jiff-0.2.15",
    urls = ["https://static.crates.io/crates/jiff/0.2.15/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "jiff-0.2.15",
    srcs = [":jiff-0.2.15.crate"],
    crate = "jiff",
    crate_root = "jiff-0.2.15.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "std",
    ],
    visibility = [],
)

crate_download(
    name = "jobserver-0.1.34.crate",
    sha256 = "9afb3de4395d6b3e67a780b6de64b51c978ecf11cb9a462c66be7d4ca9039d33",
    strip_prefix = "jobserver-0.1.34",
    urls = ["https://static.crates.io/crates/jobserver/0.1.34/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "jobserver-0.1.34",
    srcs = [":jobserver-0.1.34.crate"],
    crate = "jobserver",
    crate_root = "jobserver-0.1.34.crate/src/lib.rs",
    edition = "2021",
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-riscv64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "windows-gnu-compiler": dict(
            deps = [":getrandom-0.3.3"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":getrandom-0.3.3"],
        ),
    },
    visibility = [],
)

crate_download(
    name = "lazy_static-1.5.0.crate",
    sha256 = "bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe",
    strip_prefix = "lazy_static-1.5.0",
    urls = ["https://static.crates.io/crates/lazy_static/1.5.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "lazy_static-1.5.0",
    srcs = [":lazy_static-1.5.0.crate"],
    crate = "lazy_static",
    crate_root = "lazy_static-1.5.0.crate/src/lib.rs",
    edition = "2015",
    visibility = [],
)

crate_download(
    name = "leb128-0.2.5.crate",
    sha256 = "884e2677b40cc8c339eaefcb701c32ef1fd2493d71118dc0ca4b6a736c93bd67",
    strip_prefix = "leb128-0.2.5",
    urls = ["https://static.crates.io/crates/leb128/0.2.5/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "leb128-0.2.5",
    srcs = [":leb128-0.2.5.crate"],
    crate = "leb128",
    crate_root = "leb128-0.2.5.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
)

crate_download(
    name = "libc-0.2.175.crate",
    sha256 = "6a82ae493e598baaea5209805c49bbf2ea7de956d50d7da0da1164f9c6d28543",
    strip_prefix = "libc-0.2.175",
    urls = ["https://static.crates.io/crates/libc/0.2.175/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "libc-0.2.175",
    srcs = [":libc-0.2.175.crate"],
    crate = "libc",
    crate_root = "libc-0.2.175.crate/src/lib.rs",
    edition = "2021",
    env = {
        "OUT_DIR": "$(location :libc-0.2.175-build-script-run[out_dir])",
    },
    platform = {
        "linux-arm64-compiler": dict(
            features = [
                "default",
                "extra_traits",
                "std",
            ],
        ),
        "linux-arm64-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
            deps = [":rustc-std-workspace-core-1.99.0"],
        ),
        "linux-riscv64-compiler": dict(
            features = [
                "default",
                "extra_traits",
                "std",
            ],
        ),
        "linux-riscv64-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
            deps = [":rustc-std-workspace-core-1.99.0"],
        ),
        "linux-x86_64-compiler": dict(
            features = [
                "default",
                "extra_traits",
                "std",
            ],
        ),
        "linux-x86_64-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
            deps = [":rustc-std-workspace-core-1.99.0"],
        ),
        "macos-arm64-compiler": dict(
            features = [
                "default",
                "extra_traits",
                "std",
            ],
        ),
        "macos-arm64-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
            deps = [":rustc-std-workspace-core-1.99.0"],
        ),
        "macos-x86_64-compiler": dict(
            features = [
                "default",
                "extra_traits",
                "std",
            ],
        ),
        "macos-x86_64-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
            deps = [":rustc-std-workspace-core-1.99.0"],
        ),
        "windows-gnu-compiler": dict(
            features = [
                "default",
                "std",
            ],
        ),
        "windows-gnu-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
            deps = [":rustc-std-workspace-core-1.99.0"],
        ),
        "windows-msvc-compiler": dict(
            features = [
                "default",
                "std",
            ],
        ),
    },
    rustc_flags = ["@$(location :libc-0.2.175-build-script-run[rustc_flags])"],
    visibility = [],
)

rust_bootstrap_binary(
    name = "libc-0.2.175-build-script-build",
    srcs = [":libc-0.2.175.crate"],
    crate = "build_script_build",
    crate_root = "libc-0.2.175.crate/build.rs",
    edition = "2021",
    platform = {
        "linux-arm64-compiler": dict(
            features = [
                "default",
                "extra_traits",
                "std",
            ],
        ),
        "linux-arm64-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
        ),
        "linux-riscv64-compiler": dict(
            features = [
                "default",
                "extra_traits",
                "std",
            ],
        ),
        "linux-riscv64-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
        ),
        "linux-x86_64-compiler": dict(
            features = [
                "default",
                "extra_traits",
                "std",
            ],
        ),
        "linux-x86_64-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
        ),
        "macos-arm64-compiler": dict(
            features = [
                "default",
                "extra_traits",
                "std",
            ],
        ),
        "macos-arm64-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
        ),
        "macos-x86_64-compiler": dict(
            features = [
                "default",
                "extra_traits",
                "std",
            ],
        ),
        "macos-x86_64-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
        ),
        "windows-gnu-compiler": dict(
            features = [
                "default",
                "std",
            ],
        ),
        "windows-gnu-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
        ),
        "windows-msvc-compiler": dict(
            features = [
                "default",
                "std",
            ],
        ),
    },
    visibility = [],
)

rust_bootstrap_buildscript_run(
    name = "libc-0.2.175-build-script-run",
    package_name = "libc",
    buildscript_rule = ":libc-0.2.175-build-script-build",
    platform = {
        "linux-arm64-compiler": dict(
            features = [
                "default",
                "extra_traits",
                "std",
            ],
        ),
        "linux-arm64-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
        ),
        "linux-riscv64-compiler": dict(
            features = [
                "default",
                "extra_traits",
                "std",
            ],
        ),
        "linux-riscv64-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
        ),
        "linux-x86_64-compiler": dict(
            features = [
                "default",
                "extra_traits",
                "std",
            ],
        ),
        "linux-x86_64-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
        ),
        "macos-arm64-compiler": dict(
            features = [
                "default",
                "extra_traits",
                "std",
            ],
        ),
        "macos-arm64-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
        ),
        "macos-x86_64-compiler": dict(
            features = [
                "default",
                "extra_traits",
                "std",
            ],
        ),
        "macos-x86_64-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
        ),
        "windows-gnu-compiler": dict(
            features = [
                "default",
                "std",
            ],
        ),
        "windows-gnu-library": dict(
            features = [
                "align",
                "rustc-dep-of-std",
                "rustc-std-workspace-core",
            ],
        ),
        "windows-msvc-compiler": dict(
            features = [
                "default",
                "std",
            ],
        ),
    },
    version = "0.2.175",
)

crate_download(
    name = "libloading-0.8.8.crate",
    sha256 = "07033963ba89ebaf1584d767badaa2e8fcec21aedea6b8c0346d487d49c28667",
    strip_prefix = "libloading-0.8.8",
    urls = ["https://static.crates.io/crates/libloading/0.8.8/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "libloading-0.8.8",
    srcs = [":libloading-0.8.8.crate"],
    crate = "libloading",
    crate_root = "libloading-0.8.8.crate/src/lib.rs",
    edition = "2015",
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":cfg-if-1.0.3"],
        ),
        "linux-riscv64-compiler": dict(
            deps = [":cfg-if-1.0.3"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":cfg-if-1.0.3"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":cfg-if-1.0.3"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":cfg-if-1.0.3"],
        ),
        "windows-gnu-compiler": dict(
            deps = [":windows-targets-0.53.3"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":windows-targets-0.53.3"],
        ),
    },
    visibility = [],
)

crate_download(
    name = "linux-raw-sys-0.9.4.crate",
    sha256 = "cd945864f07fe9f5371a27ad7b52a172b4b499999f1d97574c9fa68373937e12",
    strip_prefix = "linux-raw-sys-0.9.4",
    urls = ["https://static.crates.io/crates/linux-raw-sys/0.9.4/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "linux-raw-sys-0.9.4",
    srcs = [":linux-raw-sys-0.9.4.crate"],
    crate = "linux_raw_sys",
    crate_root = "linux-raw-sys-0.9.4.crate/src/lib.rs",
    edition = "2021",
    features = [
        "elf",
        "errno",
        "general",
        "ioctl",
        "no_std",
    ],
    visibility = [],
)

crate_download(
    name = "litemap-0.7.5.crate",
    sha256 = "23fb14cb19457329c82206317a5663005a4d404783dc74f4252769b0d5f42856",
    strip_prefix = "litemap-0.7.5",
    urls = ["https://static.crates.io/crates/litemap/0.7.5/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "litemap-0.7.5",
    srcs = [":litemap-0.7.5.crate"],
    crate = "litemap",
    crate_root = "litemap-0.7.5.crate/src/lib.rs",
    edition = "2021",
    features = ["alloc"],
    visibility = [],
)

crate_download(
    name = "litemap-0.8.0.crate",
    sha256 = "241eaef5fd12c88705a01fc1066c48c4b36e0dd4377dcdc7ec3942cea7a69956",
    strip_prefix = "litemap-0.8.0",
    urls = ["https://static.crates.io/crates/litemap/0.8.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "litemap-0.8.0",
    srcs = [":litemap-0.8.0.crate"],
    crate = "litemap",
    crate_root = "litemap-0.8.0.crate/src/lib.rs",
    edition = "2021",
    features = ["alloc"],
    visibility = [],
)

crate_download(
    name = "lock_api-0.4.13.crate",
    sha256 = "96936507f153605bddfcda068dd804796c84324ed2510809e5b2a624c81da765",
    strip_prefix = "lock_api-0.4.13",
    urls = ["https://static.crates.io/crates/lock_api/0.4.13/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "lock_api-0.4.13",
    srcs = [":lock_api-0.4.13.crate"],
    crate = "lock_api",
    crate_root = "lock_api-0.4.13.crate/src/lib.rs",
    edition = "2021",
    env = {
        "OUT_DIR": "$(location :lock_api-0.4.13-build-script-run[out_dir])",
    },
    features = [
        "atomic_usize",
        "default",
    ],
    rustc_flags = ["@$(location :lock_api-0.4.13-build-script-run[rustc_flags])"],
    visibility = [],
    deps = [":scopeguard-1.2.0"],
)

rust_bootstrap_binary(
    name = "lock_api-0.4.13-build-script-build",
    srcs = [":lock_api-0.4.13.crate"],
    crate = "build_script_build",
    crate_root = "lock_api-0.4.13.crate/build.rs",
    edition = "2021",
    features = [
        "atomic_usize",
        "default",
    ],
    visibility = [],
    deps = [":autocfg-1.5.0"],
)

rust_bootstrap_buildscript_run(
    name = "lock_api-0.4.13-build-script-run",
    package_name = "lock_api",
    buildscript_rule = ":lock_api-0.4.13-build-script-build",
    features = [
        "atomic_usize",
        "default",
    ],
    version = "0.4.13",
)

crate_download(
    name = "log-0.4.27.crate",
    sha256 = "13dc2df351e3202783a1fe0d44375f7295ffb4049267b0f3018346dc122a1d94",
    strip_prefix = "log-0.4.27",
    urls = ["https://static.crates.io/crates/log/0.4.27/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "log-0.4.27",
    srcs = [":log-0.4.27.crate"],
    crate = "log",
    crate_root = "log-0.4.27.crate/src/lib.rs",
    edition = "2021",
    features = ["std"],
    visibility = [],
)

crate_download(
    name = "matchers-0.1.0.crate",
    sha256 = "8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558",
    strip_prefix = "matchers-0.1.0",
    urls = ["https://static.crates.io/crates/matchers/0.1.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "matchers-0.1.0",
    srcs = [":matchers-0.1.0.crate"],
    crate = "matchers",
    crate_root = "matchers-0.1.0.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
    deps = [":regex-automata-0.1.10"],
)

crate_download(
    name = "md-5-0.10.6.crate",
    sha256 = "d89e7ee0cfbedfc4da3340218492196241d89eefb6dab27de5df917a6d2e78cf",
    strip_prefix = "md-5-0.10.6",
    urls = ["https://static.crates.io/crates/md-5/0.10.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "md-5-0.10.6",
    srcs = [":md-5-0.10.6.crate"],
    crate = "md5",
    crate_root = "md-5-0.10.6.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "std",
    ],
    visibility = [],
    deps = [
        ":cfg-if-1.0.3",
        ":digest-0.10.7",
    ],
)

crate_download(
    name = "measureme-12.0.3.crate",
    sha256 = "6ebd1ebda747ae161a4a377bf93f87e18d46faad2331cc0c7d25b84b1d445f49",
    strip_prefix = "measureme-12.0.3",
    urls = ["https://static.crates.io/crates/measureme/12.0.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "measureme-12.0.3",
    srcs = [":measureme-12.0.3.crate"],
    crate = "measureme",
    crate_root = "measureme-12.0.3.crate/src/lib.rs",
    edition = "2018",
    platform = {
        "linux-x86_64-compiler": dict(
            deps = [
                ":memmap2-0.2.3",
                ":perf-event-open-sys-3.0.0",
            ],
        ),
    },
    visibility = [],
    deps = [
        ":log-0.4.27",
        ":parking_lot-0.12.4",
        ":rustc-hash-1.1.0",
        ":smallvec-1.15.1",
    ],
)

crate_download(
    name = "memchr-2.7.5.crate",
    sha256 = "32a282da65faaf38286cf3be983213fcf1d2e2a58700e808f83f4ea9a4804bc0",
    strip_prefix = "memchr-2.7.5",
    urls = ["https://static.crates.io/crates/memchr/2.7.5/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "memchr-2.7.5",
    srcs = [":memchr-2.7.5.crate"],
    crate = "memchr",
    crate_root = "memchr-2.7.5.crate/src/lib.rs",
    edition = "2021",
    platform = {
        "linux-arm64-compiler": dict(
            features = [
                "alloc",
                "default",
                "std",
            ],
        ),
        "linux-arm64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "linux-riscv64-compiler": dict(
            features = [
                "alloc",
                "default",
                "std",
            ],
        ),
        "linux-riscv64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "linux-x86_64-compiler": dict(
            features = [
                "alloc",
                "default",
                "std",
            ],
        ),
        "linux-x86_64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "macos-arm64-compiler": dict(
            features = [
                "alloc",
                "default",
                "std",
            ],
        ),
        "macos-arm64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "macos-x86_64-compiler": dict(
            features = [
                "alloc",
                "default",
                "std",
            ],
        ),
        "macos-x86_64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "windows-gnu-compiler": dict(
            features = [
                "alloc",
                "default",
                "std",
            ],
        ),
        "windows-gnu-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "windows-msvc-compiler": dict(
            features = [
                "alloc",
                "default",
                "std",
            ],
        ),
    },
    visibility = [],
)

crate_download(
    name = "memmap2-0.2.3.crate",
    sha256 = "723e3ebdcdc5c023db1df315364573789f8857c11b631a2fdfad7c00f5c046b4",
    strip_prefix = "memmap2-0.2.3",
    urls = ["https://static.crates.io/crates/memmap2/0.2.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "memmap2-0.2.3",
    srcs = [":memmap2-0.2.3.crate"],
    crate = "memmap2",
    crate_root = "memmap2-0.2.3.crate/src/lib.rs",
    edition = "2018",
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-riscv64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
    },
    visibility = [],
)

crate_download(
    name = "minifier-0.3.6.crate",
    sha256 = "14f1541610994bba178cb36757e102d06a52a2d9612aa6d34c64b3b377c5d943",
    strip_prefix = "minifier-0.3.6",
    urls = ["https://static.crates.io/crates/minifier/0.3.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "minifier-0.3.6",
    srcs = [":minifier-0.3.6.crate"],
    crate = "minifier",
    crate_root = "minifier-0.3.6.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
)

crate_download(
    name = "minimal-lexical-0.2.1.crate",
    sha256 = "68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a",
    strip_prefix = "minimal-lexical-0.2.1",
    urls = ["https://static.crates.io/crates/minimal-lexical/0.2.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "minimal-lexical-0.2.1",
    srcs = [":minimal-lexical-0.2.1.crate"],
    crate = "minimal_lexical",
    crate_root = "minimal-lexical-0.2.1.crate/src/lib.rs",
    edition = "2018",
    features = ["std"],
    visibility = [],
)

crate_download(
    name = "miniz_oxide-0.8.9.crate",
    sha256 = "1fa76a2c86f704bdb222d66965fb3d63269ce38518b83cb0575fca855ebb6316",
    strip_prefix = "miniz_oxide-0.8.9",
    urls = ["https://static.crates.io/crates/miniz_oxide/0.8.9/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "miniz_oxide-0.8.9",
    srcs = [":miniz_oxide-0.8.9.crate"],
    crate = "miniz_oxide",
    crate_root = "miniz_oxide-0.8.9.crate/src/lib.rs",
    edition = "2021",
    platform = {
        "linux-arm64-compiler": dict(
            features = ["with-alloc"],
        ),
        "linux-arm64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "linux-riscv64-compiler": dict(
            features = ["with-alloc"],
        ),
        "linux-riscv64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "linux-x86_64-compiler": dict(
            features = ["with-alloc"],
        ),
        "linux-x86_64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "macos-arm64-compiler": dict(
            features = ["with-alloc"],
        ),
        "macos-arm64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "macos-x86_64-compiler": dict(
            features = ["with-alloc"],
        ),
        "macos-x86_64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "windows-gnu-compiler": dict(
            features = ["with-alloc"],
        ),
        "windows-gnu-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "windows-msvc-compiler": dict(
            features = ["with-alloc"],
        ),
    },
    visibility = [],
    deps = [":adler2-2.0.1"],
)

crate_download(
    name = "nix-0.30.1.crate",
    sha256 = "74523f3a35e05aba87a1d978330aef40f67b0304ac79c1c00b294c9830543db6",
    strip_prefix = "nix-0.30.1",
    urls = ["https://static.crates.io/crates/nix/0.30.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "nix-0.30.1",
    srcs = [":nix-0.30.1.crate"],
    crate = "nix",
    crate_root = "nix-0.30.1.crate/src/lib.rs",
    edition = "2021",
    env = {
        "OUT_DIR": "$(location :nix-0.30.1-build-script-run[out_dir])",
    },
    features = [
        "fs",
        "process",
        "signal",
    ],
    rustc_flags = ["@$(location :nix-0.30.1-build-script-run[rustc_flags])"],
    visibility = [],
    deps = [
        ":bitflags-2.9.3",
        ":cfg-if-1.0.3",
        ":libc-0.2.175",
    ],
)

rust_bootstrap_binary(
    name = "nix-0.30.1-build-script-build",
    srcs = [":nix-0.30.1.crate"],
    crate = "build_script_build",
    crate_root = "nix-0.30.1.crate/build.rs",
    edition = "2021",
    features = [
        "fs",
        "process",
        "signal",
    ],
    visibility = [],
    deps = [":cfg_aliases-0.2.1"],
)

rust_bootstrap_buildscript_run(
    name = "nix-0.30.1-build-script-run",
    package_name = "nix",
    buildscript_rule = ":nix-0.30.1-build-script-build",
    features = [
        "fs",
        "process",
        "signal",
    ],
    version = "0.30.1",
)

crate_download(
    name = "nom-7.1.3.crate",
    sha256 = "d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a",
    strip_prefix = "nom-7.1.3",
    urls = ["https://static.crates.io/crates/nom/7.1.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "nom-7.1.3",
    srcs = [":nom-7.1.3.crate"],
    crate = "nom",
    crate_root = "nom-7.1.3.crate/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "default",
        "std",
    ],
    visibility = [],
    deps = [
        ":memchr-2.7.5",
        ":minimal-lexical-0.2.1",
    ],
)

crate_download(
    name = "nu-ansi-term-0.46.0.crate",
    sha256 = "77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84",
    strip_prefix = "nu-ansi-term-0.46.0",
    urls = ["https://static.crates.io/crates/nu-ansi-term/0.46.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "nu-ansi-term-0.46.0",
    srcs = [":nu-ansi-term-0.46.0.crate"],
    crate = "nu_ansi_term",
    crate_root = "nu-ansi-term-0.46.0.crate/src/lib.rs",
    edition = "2018",
    platform = {
        "windows-gnu-compiler": dict(
            deps = [":winapi-0.3.9"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":winapi-0.3.9"],
        ),
    },
    visibility = [],
    deps = [":overload-0.1.1"],
)

crate_download(
    name = "nu-ansi-term-0.50.1.crate",
    sha256 = "d4a28e057d01f97e61255210fcff094d74ed0466038633e95017f5beb68e4399",
    strip_prefix = "nu-ansi-term-0.50.1",
    urls = ["https://static.crates.io/crates/nu-ansi-term/0.50.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "nu-ansi-term-0.50.1",
    srcs = [":nu-ansi-term-0.50.1.crate"],
    crate = "nu_ansi_term",
    crate_root = "nu-ansi-term-0.50.1.crate/src/lib.rs",
    edition = "2021",
    platform = {
        "windows-gnu-compiler": dict(
            named_deps = {
                "windows": ":windows-sys-0.52.0",
            },
        ),
        "windows-msvc-compiler": dict(
            named_deps = {
                "windows": ":windows-sys-0.52.0",
            },
        ),
    },
    visibility = [],
)

crate_download(
    name = "num_cpus-1.17.0.crate",
    sha256 = "91df4bbde75afed763b708b7eee1e8e7651e02d97f6d5dd763e89367e957b23b",
    strip_prefix = "num_cpus-1.17.0",
    urls = ["https://static.crates.io/crates/num_cpus/1.17.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "num_cpus-1.17.0",
    srcs = [":num_cpus-1.17.0.crate"],
    crate = "num_cpus",
    crate_root = "num_cpus-1.17.0.crate/src/lib.rs",
    edition = "2015",
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-riscv64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
    },
    visibility = [],
)

crate_download(
    name = "object-0.36.7.crate",
    sha256 = "62948e14d923ea95ea2c7c86c71013138b66525b86bdc08d2dcc262bdb497b87",
    strip_prefix = "object-0.36.7",
    urls = ["https://static.crates.io/crates/object/0.36.7/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "object-0.36.7",
    srcs = [":object-0.36.7.crate"],
    crate = "object",
    crate_root = "object-0.36.7.crate/src/lib.rs",
    edition = "2018",
    env = {
        "OUT_DIR": "$(location :object-0.36.7-build-script-run[out_dir])",
    },
    features = [
        "archive",
        "coff",
        "compression",
        "elf",
        "macho",
        "pe",
        "read",
        "read_core",
        "std",
        "unaligned",
        "write",
        "write_core",
        "write_std",
        "xcoff",
    ],
    rustc_flags = ["@$(location :object-0.36.7-build-script-run[rustc_flags])"],
    visibility = [],
    deps = [
        ":crc32fast-1.5.0",
        ":flate2-1.1.2",
        ":hashbrown-0.15.5",
        ":indexmap-2.11.0",
        ":memchr-2.7.5",
        ":ruzstd-0.7.3",
    ],
)

rust_bootstrap_binary(
    name = "object-0.36.7-build-script-build",
    srcs = [":object-0.36.7.crate"],
    crate = "build_script_build",
    crate_root = "object-0.36.7.crate/build.rs",
    edition = "2018",
    features = [
        "archive",
        "coff",
        "compression",
        "elf",
        "macho",
        "pe",
        "read",
        "read_core",
        "std",
        "unaligned",
        "write",
        "write_core",
        "write_std",
        "xcoff",
    ],
    visibility = [],
)

rust_bootstrap_buildscript_run(
    name = "object-0.36.7-build-script-run",
    package_name = "object",
    buildscript_rule = ":object-0.36.7-build-script-build",
    features = [
        "archive",
        "coff",
        "compression",
        "elf",
        "macho",
        "pe",
        "read",
        "read_core",
        "std",
        "unaligned",
        "write",
        "write_core",
        "write_std",
        "xcoff",
    ],
    version = "0.36.7",
)

crate_download(
    name = "object-0.37.3.crate",
    sha256 = "ff76201f031d8863c38aa7f905eca4f53abbfa15f609db4277d44cd8938f33fe",
    strip_prefix = "object-0.37.3",
    urls = ["https://static.crates.io/crates/object/0.37.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "object-0.37.3",
    srcs = [":object-0.37.3.crate"],
    crate = "object",
    crate_root = "object-0.37.3.crate/src/lib.rs",
    edition = "2018",
    env = {
        "OUT_DIR": "$(location :object-0.37.3-build-script-run[out_dir])",
    },
    features = [
        "archive",
        "coff",
        "elf",
        "macho",
        "pe",
        "read_core",
        "unaligned",
    ],
    platform = {
        "linux-arm64-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
            deps = [
                ":crc32fast-1.5.0",
                ":hashbrown-0.15.5",
                ":indexmap-2.11.0",
                ":wasmparser-0.236.1",
            ],
        ),
        "linux-arm64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "linux-riscv64-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
            deps = [
                ":crc32fast-1.5.0",
                ":hashbrown-0.15.5",
                ":indexmap-2.11.0",
                ":wasmparser-0.236.1",
            ],
        ),
        "linux-riscv64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "linux-x86_64-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
            deps = [
                ":crc32fast-1.5.0",
                ":hashbrown-0.15.5",
                ":indexmap-2.11.0",
                ":wasmparser-0.236.1",
            ],
        ),
        "linux-x86_64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "macos-arm64-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
            deps = [
                ":crc32fast-1.5.0",
                ":hashbrown-0.15.5",
                ":indexmap-2.11.0",
                ":wasmparser-0.236.1",
            ],
        ),
        "macos-arm64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "macos-x86_64-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
            deps = [
                ":crc32fast-1.5.0",
                ":hashbrown-0.15.5",
                ":indexmap-2.11.0",
                ":wasmparser-0.236.1",
            ],
        ),
        "macos-x86_64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "windows-gnu-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
            deps = [
                ":crc32fast-1.5.0",
                ":hashbrown-0.15.5",
                ":indexmap-2.11.0",
                ":wasmparser-0.236.1",
            ],
        ),
        "windows-gnu-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "alloc": ":rustc-std-workspace-alloc-1.99.0",
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "windows-msvc-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
            deps = [
                ":crc32fast-1.5.0",
                ":hashbrown-0.15.5",
                ":indexmap-2.11.0",
                ":wasmparser-0.236.1",
            ],
        ),
    },
    rustc_flags = ["@$(location :object-0.37.3-build-script-run[rustc_flags])"],
    visibility = [],
    deps = [":memchr-2.7.5"],
)

rust_bootstrap_binary(
    name = "object-0.37.3-build-script-build",
    srcs = [":object-0.37.3.crate"],
    crate = "build_script_build",
    crate_root = "object-0.37.3.crate/build.rs",
    edition = "2018",
    features = [
        "archive",
        "coff",
        "elf",
        "macho",
        "pe",
        "read_core",
        "unaligned",
    ],
    platform = {
        "linux-arm64-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
        ),
        "linux-arm64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
        ),
        "linux-riscv64-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
        ),
        "linux-riscv64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
        ),
        "linux-x86_64-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
        ),
        "linux-x86_64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
        ),
        "macos-arm64-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
        ),
        "macos-arm64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
        ),
        "macos-x86_64-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
        ),
        "macos-x86_64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
        ),
        "windows-gnu-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
        ),
        "windows-gnu-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
        ),
        "windows-msvc-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
        ),
    },
    visibility = [],
)

rust_bootstrap_buildscript_run(
    name = "object-0.37.3-build-script-run",
    package_name = "object",
    buildscript_rule = ":object-0.37.3-build-script-build",
    features = [
        "archive",
        "coff",
        "elf",
        "macho",
        "pe",
        "read_core",
        "unaligned",
    ],
    platform = {
        "linux-arm64-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
        ),
        "linux-arm64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
        ),
        "linux-riscv64-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
        ),
        "linux-riscv64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
        ),
        "linux-x86_64-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
        ),
        "linux-x86_64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
        ),
        "macos-arm64-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
        ),
        "macos-arm64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
        ),
        "macos-x86_64-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
        ),
        "macos-x86_64-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
        ),
        "windows-gnu-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
        ),
        "windows-gnu-library": dict(
            features = [
                "alloc",
                "core",
                "rustc-dep-of-std",
            ],
        ),
        "windows-msvc-compiler": dict(
            features = [
                "read",
                "std",
                "wasm",
                "write",
                "write_core",
                "write_std",
                "xcoff",
            ],
        ),
    },
    version = "0.37.3",
)

crate_download(
    name = "odht-0.3.1.crate",
    sha256 = "5a518809ac14b25b569624d0268eba1e88498f71615893dca57982bed7621abb",
    strip_prefix = "odht-0.3.1",
    urls = ["https://static.crates.io/crates/odht/0.3.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "odht-0.3.1",
    srcs = [":odht-0.3.1.crate"],
    crate = "odht",
    crate_root = "odht-0.3.1.crate/src/lib.rs",
    edition = "2018",
    features = ["nightly"],
    visibility = [],
    deps = [":cfg-if-1.0.3"],
)

crate_download(
    name = "once_cell-1.21.3.crate",
    sha256 = "42f5e15c9953c5e4ccceeb2e7382a716482c34515315f7b03532b8b4e8393d2d",
    strip_prefix = "once_cell-1.21.3",
    urls = ["https://static.crates.io/crates/once_cell/1.21.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "once_cell-1.21.3",
    srcs = [":once_cell-1.21.3.crate"],
    crate = "once_cell",
    crate_root = "once_cell-1.21.3.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "default",
        "race",
        "std",
    ],
    visibility = [],
)

crate_download(
    name = "once_cell_polyfill-1.70.1.crate",
    sha256 = "a4895175b425cb1f87721b59f0f286c2092bd4af812243672510e1ac53e2e0ad",
    strip_prefix = "once_cell_polyfill-1.70.1",
    urls = ["https://static.crates.io/crates/once_cell_polyfill/1.70.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "once_cell_polyfill-1.70.1",
    srcs = [":once_cell_polyfill-1.70.1.crate"],
    crate = "once_cell_polyfill",
    crate_root = "once_cell_polyfill-1.70.1.crate/src/lib.rs",
    edition = "2021",
    features = ["default"],
    visibility = [],
)

crate_download(
    name = "overload-0.1.1.crate",
    sha256 = "b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39",
    strip_prefix = "overload-0.1.1",
    urls = ["https://static.crates.io/crates/overload/0.1.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "overload-0.1.1",
    srcs = [":overload-0.1.1.crate"],
    crate = "overload",
    crate_root = "overload-0.1.1.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
)

rust_bootstrap_alias(
    name = "panic_abort",
    actual = ":panic_abort-0.0.0",
    visibility = ["PUBLIC"],
)

rust_bootstrap_library(
    name = "panic_abort-0.0.0",
    srcs = [
        "rust/library/panic_abort/src/android.rs",
        "rust/library/panic_abort/src/lib.rs",
        "rust/library/panic_abort/src/zkvm.rs",
    ],
    crate = "panic_abort",
    crate_root = "rust/library/panic_abort/src/lib.rs",
    edition = "2024",
    rustc_flags = ["-Cpanic=abort"],
    visibility = [],
    deps = [
        ":compiler_builtins-0.1.160",
        ":core-0.0.0",
    ],
)

rust_bootstrap_alias(
    name = "panic_unwind",
    actual = ":panic_unwind-0.0.0",
    visibility = ["PUBLIC"],
)

rust_bootstrap_library(
    name = "panic_unwind-0.0.0",
    srcs = [
        "rust/library/panic_unwind/src/dummy.rs",
        "rust/library/panic_unwind/src/emcc.rs",
        "rust/library/panic_unwind/src/gcc.rs",
        "rust/library/panic_unwind/src/hermit.rs",
        "rust/library/panic_unwind/src/lib.rs",
        "rust/library/panic_unwind/src/miri.rs",
        "rust/library/panic_unwind/src/seh.rs",
    ],
    crate = "panic_unwind",
    crate_root = "rust/library/panic_unwind/src/lib.rs",
    edition = "2024",
    platform = {
        "linux-arm64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-riscv64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-x86_64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "windows-gnu-library": dict(
            deps = [":libc-0.2.175"],
        ),
    },
    visibility = [],
    deps = [
        ":alloc-0.0.0",
        ":cfg-if-1.0.3",
        ":compiler_builtins-0.1.160",
        ":core-0.0.0",
        ":unwind-0.0.0",
    ],
)

crate_download(
    name = "parking_lot-0.12.4.crate",
    sha256 = "70d58bf43669b5795d1576d0641cfb6fbb2057bf629506267a92807158584a13",
    strip_prefix = "parking_lot-0.12.4",
    urls = ["https://static.crates.io/crates/parking_lot/0.12.4/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "parking_lot-0.12.4",
    srcs = [":parking_lot-0.12.4.crate"],
    crate = "parking_lot",
    crate_root = "parking_lot-0.12.4.crate/src/lib.rs",
    edition = "2021",
    features = ["default"],
    visibility = [],
    deps = [
        ":lock_api-0.4.13",
        ":parking_lot_core-0.9.11",
    ],
)

crate_download(
    name = "parking_lot_core-0.9.11.crate",
    sha256 = "bc838d2a56b5b1a6c25f55575dfc605fabb63bb2365f6c2353ef9159aa69e4a5",
    strip_prefix = "parking_lot_core-0.9.11",
    urls = ["https://static.crates.io/crates/parking_lot_core/0.9.11/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "parking_lot_core-0.9.11",
    srcs = [":parking_lot_core-0.9.11.crate"],
    crate = "parking_lot_core",
    crate_root = "parking_lot_core-0.9.11.crate/src/lib.rs",
    edition = "2021",
    env = {
        "OUT_DIR": "$(location :parking_lot_core-0.9.11-build-script-run[out_dir])",
    },
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-riscv64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "windows-gnu-compiler": dict(
            deps = [":windows-targets-0.52.6"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":windows-targets-0.52.6"],
        ),
    },
    rustc_flags = ["@$(location :parking_lot_core-0.9.11-build-script-run[rustc_flags])"],
    visibility = [],
    deps = [
        ":cfg-if-1.0.3",
        ":smallvec-1.15.1",
    ],
)

rust_bootstrap_binary(
    name = "parking_lot_core-0.9.11-build-script-build",
    srcs = [":parking_lot_core-0.9.11.crate"],
    crate = "build_script_build",
    crate_root = "parking_lot_core-0.9.11.crate/build.rs",
    edition = "2021",
    visibility = [],
)

rust_bootstrap_buildscript_run(
    name = "parking_lot_core-0.9.11-build-script-run",
    package_name = "parking_lot_core",
    buildscript_rule = ":parking_lot_core-0.9.11-build-script-build",
    version = "0.9.11",
)

crate_download(
    name = "pathdiff-0.2.3.crate",
    sha256 = "df94ce210e5bc13cb6651479fa48d14f601d9858cfe0467f43ae157023b938d3",
    strip_prefix = "pathdiff-0.2.3",
    urls = ["https://static.crates.io/crates/pathdiff/0.2.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "pathdiff-0.2.3",
    srcs = [":pathdiff-0.2.3.crate"],
    crate = "pathdiff",
    crate_root = "pathdiff-0.2.3.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
)

crate_download(
    name = "percent-encoding-2.3.2.crate",
    sha256 = "9b4f627cb1b25917193a259e49bdad08f671f8d9708acfd5fe0a8c1455d87220",
    strip_prefix = "percent-encoding-2.3.2",
    urls = ["https://static.crates.io/crates/percent-encoding/2.3.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "percent-encoding-2.3.2",
    srcs = [":percent-encoding-2.3.2.crate"],
    crate = "percent_encoding",
    crate_root = "percent-encoding-2.3.2.crate/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "std",
    ],
    visibility = [],
)

crate_download(
    name = "perf-event-open-sys-3.0.0.crate",
    sha256 = "b29be2ba35c12c6939f6bc73187f728bba82c3c062ecdc5fa90ea739282a1f58",
    strip_prefix = "perf-event-open-sys-3.0.0",
    urls = ["https://static.crates.io/crates/perf-event-open-sys/3.0.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "perf-event-open-sys-3.0.0",
    srcs = [":perf-event-open-sys-3.0.0.crate"],
    crate = "perf_event_open_sys",
    crate_root = "perf-event-open-sys-3.0.0.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
    deps = [":libc-0.2.175"],
)

crate_download(
    name = "pin-project-lite-0.2.16.crate",
    sha256 = "3b3cff922bd51709b605d9ead9aa71031d81447142d828eb4a6eba76fe619f9b",
    strip_prefix = "pin-project-lite-0.2.16",
    urls = ["https://static.crates.io/crates/pin-project-lite/0.2.16/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "pin-project-lite-0.2.16",
    srcs = [":pin-project-lite-0.2.16.crate"],
    crate = "pin_project_lite",
    crate_root = "pin-project-lite-0.2.16.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
)

crate_download(
    name = "polonius-engine-0.13.0.crate",
    sha256 = "c4e8e505342045d397d0b6674dcb82d6faf5cf40484d30eeb88fc82ef14e903f",
    strip_prefix = "polonius-engine-0.13.0",
    urls = ["https://static.crates.io/crates/polonius-engine/0.13.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "polonius-engine-0.13.0",
    srcs = [":polonius-engine-0.13.0.crate"],
    crate = "polonius_engine",
    crate_root = "polonius-engine-0.13.0.crate/src/lib.rs",
    edition = "2015",
    visibility = [],
    deps = [
        ":datafrog-2.0.1",
        ":log-0.4.27",
        ":rustc-hash-1.1.0",
    ],
)

crate_download(
    name = "potential_utf-0.1.2.crate",
    sha256 = "e5a7c30837279ca13e7c867e9e40053bc68740f988cb07f7ca6df43cc734b585",
    strip_prefix = "potential_utf-0.1.2",
    urls = ["https://static.crates.io/crates/potential_utf/0.1.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "potential_utf-0.1.2",
    srcs = [":potential_utf-0.1.2.crate"],
    crate = "potential_utf",
    crate_root = "potential_utf-0.1.2.crate/src/lib.rs",
    edition = "2021",
    features = ["zerovec"],
    visibility = [],
    deps = [":zerovec-0.11.4"],
)

crate_download(
    name = "ppv-lite86-0.2.21.crate",
    sha256 = "85eae3c4ed2f50dcfe72643da4befc30deadb458a9b590d720cde2f2b1e97da9",
    strip_prefix = "ppv-lite86-0.2.21",
    urls = ["https://static.crates.io/crates/ppv-lite86/0.2.21/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "ppv-lite86-0.2.21",
    srcs = [":ppv-lite86-0.2.21.crate"],
    crate = "ppv_lite86",
    crate_root = "ppv-lite86-0.2.21.crate/src/lib.rs",
    edition = "2021",
    features = [
        "simd",
        "std",
    ],
    visibility = [],
    deps = [":zerocopy-0.8.26"],
)

crate_download(
    name = "proc-macro-hack-0.5.20+deprecated.crate",
    sha256 = "dc375e1527247fe1a97d8b7156678dfe7c1af2fc075c9a4db3690ecd2a148068",
    strip_prefix = "proc-macro-hack-0.5.20+deprecated",
    urls = ["https://static.crates.io/crates/proc-macro-hack/0.5.20+deprecated/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "proc-macro-hack-0.5.20+deprecated",
    srcs = [":proc-macro-hack-0.5.20+deprecated.crate"],
    crate = "proc_macro_hack",
    crate_root = "proc-macro-hack-0.5.20+deprecated.crate/src/lib.rs",
    edition = "2018",
    proc_macro = True,
    visibility = [],
)

crate_download(
    name = "proc-macro2-1.0.101.crate",
    sha256 = "89ae43fd86e4158d6db51ad8e2b80f313af9cc74f5c0e03ccb87de09998732de",
    strip_prefix = "proc-macro2-1.0.101",
    urls = ["https://static.crates.io/crates/proc-macro2/1.0.101/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "proc-macro2-1.0.101",
    srcs = [":proc-macro2-1.0.101.crate"],
    crate = "proc_macro2",
    crate_root = "proc-macro2-1.0.101.crate/src/lib.rs",
    edition = "2021",
    env = {
        "OUT_DIR": "$(location :proc-macro2-1.0.101-build-script-run[out_dir])",
    },
    features = [
        "default",
        "proc-macro",
    ],
    rustc_flags = ["@$(location :proc-macro2-1.0.101-build-script-run[rustc_flags])"],
    visibility = [],
    deps = [":unicode-ident-1.0.18"],
)

rust_bootstrap_binary(
    name = "proc-macro2-1.0.101-build-script-build",
    srcs = [":proc-macro2-1.0.101.crate"],
    crate = "build_script_build",
    crate_root = "proc-macro2-1.0.101.crate/build.rs",
    edition = "2021",
    features = [
        "default",
        "proc-macro",
    ],
    visibility = [],
)

rust_bootstrap_buildscript_run(
    name = "proc-macro2-1.0.101-build-script-run",
    package_name = "proc-macro2",
    buildscript_rule = ":proc-macro2-1.0.101-build-script-build",
    features = [
        "default",
        "proc-macro",
    ],
    version = "1.0.101",
)

rust_bootstrap_alias(
    name = "proc_macro",
    actual = ":proc_macro-0.0.0",
    visibility = ["PUBLIC"],
)

rust_bootstrap_library(
    name = "proc_macro-0.0.0",
    srcs = [
        "rust/library/proc_macro/src/bridge/arena.rs",
        "rust/library/proc_macro/src/bridge/buffer.rs",
        "rust/library/proc_macro/src/bridge/client.rs",
        "rust/library/proc_macro/src/bridge/closure.rs",
        "rust/library/proc_macro/src/bridge/fxhash.rs",
        "rust/library/proc_macro/src/bridge/handle.rs",
        "rust/library/proc_macro/src/bridge/mod.rs",
        "rust/library/proc_macro/src/bridge/rpc.rs",
        "rust/library/proc_macro/src/bridge/selfless_reify.rs",
        "rust/library/proc_macro/src/bridge/server.rs",
        "rust/library/proc_macro/src/bridge/symbol.rs",
        "rust/library/proc_macro/src/diagnostic.rs",
        "rust/library/proc_macro/src/escape.rs",
        "rust/library/proc_macro/src/lib.rs",
        "rust/library/proc_macro/src/quote.rs",
        "rust/library/proc_macro/src/to_tokens.rs",
    ],
    crate = "proc_macro",
    crate_root = "rust/library/proc_macro/src/lib.rs",
    edition = "2024",
    features = [
        "default",
        "rustc-dep-of-std",
    ],
    visibility = [],
    deps = [
        ":core-0.0.0",
        ":rustc-literal-escaper-0.0.2",
        ":std-0.0.0",
    ],
)

crate_download(
    name = "psm-0.1.26.crate",
    sha256 = "6e944464ec8536cd1beb0bbfd96987eb5e3b72f2ecdafdc5c769a37f1fa2ae1f",
    strip_prefix = "psm-0.1.26",
    sub_targets = [
        "src/arch/aarch_aapcs64.s",
        "src/arch/psm.h",
        "src/arch/x86_64.s",
        "src/arch/x86_64_msvc.asm",
        "src/arch/x86_64_windows_gnu.s",
    ],
    urls = ["https://static.crates.io/crates/psm/0.1.26/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "psm-0.1.26",
    srcs = [":psm-0.1.26.crate"],
    crate = "psm",
    crate_root = "psm-0.1.26.crate/src/lib.rs",
    edition = "2021",
    platform = {
        "linux-arm64-compiler": dict(
            rustc_flags = [
                "--cfg=asm",
                "--cfg=switchable_stack",
            ],
            deps = [":psm-0.1.26-psm_s-linux-aarch64"],
        ),
        "linux-x86_64-compiler": dict(
            rustc_flags = [
                "--cfg=asm",
                "--cfg=switchable_stack",
            ],
            deps = [":psm-0.1.26-psm_s-linux-x86_64"],
        ),
        "macos-arm64-compiler": dict(
            rustc_flags = [
                "--cfg=asm",
                "--cfg=switchable_stack",
            ],
            deps = [":psm-0.1.26-psm_s-macos-aarch64"],
        ),
        "macos-x86_64-compiler": dict(
            rustc_flags = [
                "--cfg=asm",
                "--cfg=switchable_stack",
            ],
            deps = [":psm-0.1.26-psm_s-macos-x86_64"],
        ),
        "windows-gnu-compiler": dict(
            rustc_flags = ["--cfg=asm"],
            deps = [":psm-0.1.26-psm_s-windows-x86_64-gnu"],
        ),
        "windows-msvc-compiler": dict(
            rustc_flags = ["--cfg=asm"],
            deps = [":psm-0.1.26-psm_s-windows-x86_64-msvc"],
        ),
    },
    visibility = [],
)

cxx_bootstrap_library(
    name = "psm-0.1.26-psm_s-linux-aarch64",
    srcs = [":psm-0.1.26.crate[src/arch/aarch_aapcs64.s]"],
    headers = [":psm-0.1.26.crate[src/arch/psm.h]"],
    compiler_flags = ["-xassembler-with-cpp"],
    visibility = [],
)

cxx_bootstrap_library(
    name = "psm-0.1.26-psm_s-linux-x86_64",
    srcs = [":psm-0.1.26.crate[src/arch/x86_64.s]"],
    headers = [":psm-0.1.26.crate[src/arch/psm.h]"],
    compiler_flags = ["-xassembler-with-cpp"],
    visibility = [],
)

cxx_bootstrap_library(
    name = "psm-0.1.26-psm_s-macos-aarch64",
    srcs = [":psm-0.1.26.crate[src/arch/aarch_aapcs64.s]"],
    headers = [":psm-0.1.26.crate[src/arch/psm.h]"],
    compiler_flags = ["-xassembler-with-cpp"],
    preprocessor_flags = ["-DCFG_TARGET_OS_macos"],
    visibility = [],
)

cxx_bootstrap_library(
    name = "psm-0.1.26-psm_s-macos-x86_64",
    srcs = [":psm-0.1.26.crate[src/arch/x86_64.s]"],
    headers = [":psm-0.1.26.crate[src/arch/psm.h]"],
    compiler_flags = ["-xassembler-with-cpp"],
    preprocessor_flags = ["-DCFG_TARGET_OS_macos"],
    visibility = [],
)

cxx_bootstrap_library(
    name = "psm-0.1.26-psm_s-windows-x86_64-gnu",
    srcs = [":psm-0.1.26.crate[src/arch/x86_64_windows_gnu.s]"],
    headers = [":psm-0.1.26.crate[src/arch/psm.h]"],
    compiler_flags = ["-xassembler-with-cpp"],
    visibility = [],
)

cxx_bootstrap_library(
    name = "psm-0.1.26-psm_s-windows-x86_64-msvc",
    srcs = [":psm-0.1.26.crate[src/arch/x86_64_msvc.asm]"],
    headers = [":psm-0.1.26.crate[src/arch/psm.h]"],
    visibility = [],
)

crate_download(
    name = "pulldown-cmark-0.11.3.crate",
    sha256 = "679341d22c78c6c649893cbd6c3278dcbe9fc4faa62fea3a9296ae2b50c14625",
    strip_prefix = "pulldown-cmark-0.11.3",
    urls = ["https://static.crates.io/crates/pulldown-cmark/0.11.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "pulldown-cmark-0.11.3",
    srcs = [":pulldown-cmark-0.11.3.crate"],
    crate = "pulldown_cmark",
    crate_root = "pulldown-cmark-0.11.3.crate/src/lib.rs",
    edition = "2021",
    features = [
        "html",
        "pulldown-cmark-escape",
    ],
    visibility = [],
    deps = [
        ":bitflags-2.9.3",
        ":memchr-2.7.5",
        ":pulldown-cmark-escape-0.11.0",
        ":unicase-2.8.1",
    ],
)

crate_download(
    name = "pulldown-cmark-escape-0.11.0.crate",
    sha256 = "007d8adb5ddab6f8e3f491ac63566a7d5002cc7ed73901f72057943fa71ae1ae",
    strip_prefix = "pulldown-cmark-escape-0.11.0",
    urls = ["https://static.crates.io/crates/pulldown-cmark-escape/0.11.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "pulldown-cmark-escape-0.11.0",
    srcs = [":pulldown-cmark-escape-0.11.0.crate"],
    crate = "pulldown_cmark_escape",
    crate_root = "pulldown-cmark-escape-0.11.0.crate/src/lib.rs",
    edition = "2021",
    features = ["simd"],
    visibility = [],
)

crate_download(
    name = "punycode-0.4.1.crate",
    sha256 = "e9e1dcb320d6839f6edb64f7a4a59d39b30480d4d1765b56873f7c858538a5fe",
    strip_prefix = "punycode-0.4.1",
    urls = ["https://static.crates.io/crates/punycode/0.4.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "punycode-0.4.1",
    srcs = [":punycode-0.4.1.crate"],
    crate = "punycode",
    crate_root = "punycode-0.4.1.crate/src/lib.rs",
    edition = "2015",
    features = ["default"],
    visibility = [],
)

crate_download(
    name = "quine-mc_cluskey-0.2.4.crate",
    sha256 = "07589615d719a60c8dd8a4622e7946465dfef20d1a428f969e3443e7386d5f45",
    strip_prefix = "quine-mc_cluskey-0.2.4",
    urls = ["https://static.crates.io/crates/quine-mc_cluskey/0.2.4/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "quine-mc_cluskey-0.2.4",
    srcs = [":quine-mc_cluskey-0.2.4.crate"],
    crate = "quine_mc_cluskey",
    crate_root = "quine-mc_cluskey-0.2.4.crate/src/lib.rs",
    edition = "2015",
    visibility = [],
)

crate_download(
    name = "quote-1.0.40.crate",
    sha256 = "1885c039570dc00dcb4ff087a89e185fd56bae234ddc7f056a945bf36467248d",
    strip_prefix = "quote-1.0.40",
    urls = ["https://static.crates.io/crates/quote/1.0.40/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "quote-1.0.40",
    srcs = [":quote-1.0.40.crate"],
    crate = "quote",
    crate_root = "quote-1.0.40.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "proc-macro",
    ],
    visibility = [],
    deps = [":proc-macro2-1.0.101"],
)

crate_download(
    name = "rand-0.8.5.crate",
    sha256 = "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404",
    strip_prefix = "rand-0.8.5",
    urls = ["https://static.crates.io/crates/rand/0.8.5/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "rand-0.8.5",
    srcs = [":rand-0.8.5.crate"],
    crate = "rand",
    crate_root = "rand-0.8.5.crate/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "default",
        "getrandom",
        "libc",
        "rand_chacha",
        "std",
        "std_rng",
    ],
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-riscv64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
    },
    visibility = [],
    deps = [
        ":rand_chacha-0.3.1",
        ":rand_core-0.6.4",
    ],
)

crate_download(
    name = "rand-0.9.2.crate",
    sha256 = "6db2770f06117d490610c7488547d543617b21bfa07796d7a12f6f1bd53850d1",
    strip_prefix = "rand-0.9.2",
    urls = ["https://static.crates.io/crates/rand/0.9.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "rand-0.9.2",
    srcs = [":rand-0.9.2.crate"],
    crate = "rand",
    crate_root = "rand-0.9.2.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "default",
        "os_rng",
        "small_rng",
        "std",
        "std_rng",
        "thread_rng",
    ],
    visibility = [],
    deps = [
        ":rand_chacha-0.9.0",
        ":rand_core-0.9.3",
    ],
)

crate_download(
    name = "rand_chacha-0.3.1.crate",
    sha256 = "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88",
    strip_prefix = "rand_chacha-0.3.1",
    urls = ["https://static.crates.io/crates/rand_chacha/0.3.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "rand_chacha-0.3.1",
    srcs = [":rand_chacha-0.3.1.crate"],
    crate = "rand_chacha",
    crate_root = "rand_chacha-0.3.1.crate/src/lib.rs",
    edition = "2018",
    features = ["std"],
    visibility = [],
    deps = [
        ":ppv-lite86-0.2.21",
        ":rand_core-0.6.4",
    ],
)

crate_download(
    name = "rand_chacha-0.9.0.crate",
    sha256 = "d3022b5f1df60f26e1ffddd6c66e8aa15de382ae63b3a0c1bfc0e4d3e3f325cb",
    strip_prefix = "rand_chacha-0.9.0",
    urls = ["https://static.crates.io/crates/rand_chacha/0.9.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "rand_chacha-0.9.0",
    srcs = [":rand_chacha-0.9.0.crate"],
    crate = "rand_chacha",
    crate_root = "rand_chacha-0.9.0.crate/src/lib.rs",
    edition = "2021",
    features = ["std"],
    visibility = [],
    deps = [
        ":ppv-lite86-0.2.21",
        ":rand_core-0.9.3",
    ],
)

crate_download(
    name = "rand_core-0.6.4.crate",
    sha256 = "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c",
    strip_prefix = "rand_core-0.6.4",
    urls = ["https://static.crates.io/crates/rand_core/0.6.4/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "rand_core-0.6.4",
    srcs = [":rand_core-0.6.4.crate"],
    crate = "rand_core",
    crate_root = "rand_core-0.6.4.crate/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "getrandom",
        "std",
    ],
    visibility = [],
    deps = [":getrandom-0.2.16"],
)

crate_download(
    name = "rand_core-0.9.3.crate",
    sha256 = "99d9a13982dcf210057a8a78572b2217b667c3beacbf3a0d8b454f6f82837d38",
    strip_prefix = "rand_core-0.9.3",
    urls = ["https://static.crates.io/crates/rand_core/0.9.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "rand_core-0.9.3",
    srcs = [":rand_core-0.9.3.crate"],
    crate = "rand_core",
    crate_root = "rand_core-0.9.3.crate/src/lib.rs",
    edition = "2021",
    features = [
        "os_rng",
        "std",
    ],
    visibility = [],
    deps = [":getrandom-0.3.3"],
)

crate_download(
    name = "rand_xoshiro-0.7.0.crate",
    sha256 = "f703f4665700daf5512dcca5f43afa6af89f09db47fb56be587f80636bda2d41",
    strip_prefix = "rand_xoshiro-0.7.0",
    urls = ["https://static.crates.io/crates/rand_xoshiro/0.7.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "rand_xoshiro-0.7.0",
    srcs = [":rand_xoshiro-0.7.0.crate"],
    crate = "rand_xoshiro",
    crate_root = "rand_xoshiro-0.7.0.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [":rand_core-0.9.3"],
)

crate_download(
    name = "regex-1.11.1.crate",
    sha256 = "b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191",
    strip_prefix = "regex-1.11.1",
    urls = ["https://static.crates.io/crates/regex/1.11.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "regex-1.11.1",
    srcs = [":regex-1.11.1.crate"],
    crate = "regex",
    crate_root = "regex-1.11.1.crate/src/lib.rs",
    edition = "2021",
    features = [
        "default",
        "perf",
        "perf-backtrack",
        "perf-cache",
        "perf-dfa",
        "perf-inline",
        "perf-literal",
        "perf-onepass",
        "std",
        "unicode",
        "unicode-age",
        "unicode-bool",
        "unicode-case",
        "unicode-gencat",
        "unicode-perl",
        "unicode-script",
        "unicode-segment",
    ],
    visibility = [],
    deps = [
        ":aho-corasick-1.1.3",
        ":memchr-2.7.5",
        ":regex-automata-0.4.9",
        ":regex-syntax-0.8.5",
    ],
)

crate_download(
    name = "regex-automata-0.1.10.crate",
    sha256 = "6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132",
    strip_prefix = "regex-automata-0.1.10",
    urls = ["https://static.crates.io/crates/regex-automata/0.1.10/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "regex-automata-0.1.10",
    srcs = [":regex-automata-0.1.10.crate"],
    crate = "regex_automata",
    crate_root = "regex-automata-0.1.10.crate/src/lib.rs",
    edition = "2015",
    features = [
        "default",
        "regex-syntax",
        "std",
    ],
    visibility = [],
    deps = [":regex-syntax-0.6.29"],
)

crate_download(
    name = "regex-automata-0.2.0.crate",
    sha256 = "e9368763f5a9b804326f3af749e16f9abf378d227bcdee7634b13d8f17793782",
    strip_prefix = "regex-automata-0.2.0",
    urls = ["https://static.crates.io/crates/regex-automata/0.2.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "regex-automata-0.2.0",
    srcs = [":regex-automata-0.2.0.crate"],
    crate = "regex_automata",
    crate_root = "regex-automata-0.2.0.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
    deps = [":memchr-2.7.5"],
)

crate_download(
    name = "regex-automata-0.4.9.crate",
    sha256 = "809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908",
    strip_prefix = "regex-automata-0.4.9",
    urls = ["https://static.crates.io/crates/regex-automata/0.4.9/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "regex-automata-0.4.9",
    srcs = [":regex-automata-0.4.9.crate"],
    crate = "regex_automata",
    crate_root = "regex-automata-0.4.9.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "dfa-onepass",
        "dfa-search",
        "hybrid",
        "meta",
        "nfa-backtrack",
        "nfa-pikevm",
        "nfa-thompson",
        "perf-inline",
        "perf-literal",
        "perf-literal-multisubstring",
        "perf-literal-substring",
        "std",
        "syntax",
        "unicode",
        "unicode-age",
        "unicode-bool",
        "unicode-case",
        "unicode-gencat",
        "unicode-perl",
        "unicode-script",
        "unicode-segment",
        "unicode-word-boundary",
    ],
    visibility = [],
    deps = [
        ":aho-corasick-1.1.3",
        ":memchr-2.7.5",
        ":regex-syntax-0.8.5",
    ],
)

crate_download(
    name = "regex-syntax-0.6.29.crate",
    sha256 = "f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1",
    strip_prefix = "regex-syntax-0.6.29",
    urls = ["https://static.crates.io/crates/regex-syntax/0.6.29/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "regex-syntax-0.6.29",
    srcs = [":regex-syntax-0.6.29.crate"],
    crate = "regex_syntax",
    crate_root = "regex-syntax-0.6.29.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "unicode",
        "unicode-age",
        "unicode-bool",
        "unicode-case",
        "unicode-gencat",
        "unicode-perl",
        "unicode-script",
        "unicode-segment",
    ],
    visibility = [],
)

crate_download(
    name = "regex-syntax-0.8.5.crate",
    sha256 = "2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c",
    strip_prefix = "regex-syntax-0.8.5",
    urls = ["https://static.crates.io/crates/regex-syntax/0.8.5/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "regex-syntax-0.8.5",
    srcs = [":regex-syntax-0.8.5.crate"],
    crate = "regex_syntax",
    crate_root = "regex-syntax-0.8.5.crate/src/lib.rs",
    edition = "2021",
    features = [
        "default",
        "std",
        "unicode",
        "unicode-age",
        "unicode-bool",
        "unicode-case",
        "unicode-gencat",
        "unicode-perl",
        "unicode-script",
        "unicode-segment",
    ],
    visibility = [],
)

crate_download(
    name = "rustc-demangle-0.1.26.crate",
    sha256 = "56f7d92ca342cea22a06f2121d944b4fd82af56988c270852495420f961d4ace",
    strip_prefix = "rustc-demangle-0.1.26",
    urls = ["https://static.crates.io/crates/rustc-demangle/0.1.26/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "rustc-demangle-0.1.26",
    srcs = [":rustc-demangle-0.1.26.crate"],
    crate = "rustc_demangle",
    crate_root = "rustc-demangle-0.1.26.crate/src/lib.rs",
    edition = "2015",
    platform = {
        "linux-arm64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "linux-riscv64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "linux-x86_64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "macos-arm64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "macos-x86_64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "windows-gnu-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
        "windows-msvc-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
            },
        ),
    },
    visibility = [],
)

crate_download(
    name = "rustc-hash-1.1.0.crate",
    sha256 = "08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2",
    strip_prefix = "rustc-hash-1.1.0",
    urls = ["https://static.crates.io/crates/rustc-hash/1.1.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "rustc-hash-1.1.0",
    srcs = [":rustc-hash-1.1.0.crate"],
    crate = "rustc_hash",
    crate_root = "rustc-hash-1.1.0.crate/src/lib.rs",
    edition = "2015",
    features = [
        "default",
        "std",
    ],
    visibility = [],
)

crate_download(
    name = "rustc-hash-2.1.1.crate",
    sha256 = "357703d41365b4b27c590e3ed91eabb1b663f07c4c084095e60cbed4362dff0d",
    strip_prefix = "rustc-hash-2.1.1",
    urls = ["https://static.crates.io/crates/rustc-hash/2.1.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "rustc-hash-2.1.1",
    srcs = [":rustc-hash-2.1.1.crate"],
    crate = "rustc_hash",
    crate_root = "rustc-hash-2.1.1.crate/src/lib.rs",
    edition = "2021",
    features = [
        "default",
        "std",
    ],
    visibility = [],
)

crate_download(
    name = "rustc-literal-escaper-0.0.2.crate",
    sha256 = "0041b6238913c41fe704213a4a9329e2f685a156d1781998128b4149c230ad04",
    strip_prefix = "rustc-literal-escaper-0.0.2",
    urls = ["https://static.crates.io/crates/rustc-literal-escaper/0.0.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "rustc-literal-escaper-0.0.2",
    srcs = [":rustc-literal-escaper-0.0.2.crate"],
    crate = "rustc_literal_escaper",
    crate_root = "rustc-literal-escaper-0.0.2.crate/src/lib.rs",
    edition = "2021",
    platform = {
        "linux-arm64-library": dict(
            features = ["rustc-dep-of-std"],
            named_deps = {
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "linux-riscv64-library": dict(
            features = ["rustc-dep-of-std"],
            named_deps = {
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "linux-x86_64-library": dict(
            features = ["rustc-dep-of-std"],
            named_deps = {
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "macos-arm64-library": dict(
            features = ["rustc-dep-of-std"],
            named_deps = {
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "macos-x86_64-library": dict(
            features = ["rustc-dep-of-std"],
            named_deps = {
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "windows-gnu-library": dict(
            features = ["rustc-dep-of-std"],
            named_deps = {
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "windows-msvc-library": dict(
            features = ["rustc-dep-of-std"],
            named_deps = {
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
    },
    visibility = [],
)

rust_bootstrap_alias(
    name = "rustc-main-rustc-main",
    actual = ":rustc-main-0.0.0-rustc-main",
    visibility = ["PUBLIC"],
)

rust_bootstrap_binary(
    name = "rustc-main-0.0.0-rustc-main",
    srcs = ["rust/compiler/rustc/src/main.rs"],
    crate = "rustc_main",
    crate_root = "rust/compiler/rustc/src/main.rs",
    edition = "2024",
    features = ["llvm"],
    linker_flags = ["-Wl,-rpath,$ORIGIN/../lib"],
    named_deps = {
        "rustc_driver": ":rustc_driver-0.0.0",
    },
    rustc_flags = ["-Zcrate-attr=allow(unfulfilled_lint_expectations)"],
    visibility = [],
)

crate_download(
    name = "rustc-stable-hash-0.1.2.crate",
    sha256 = "781442f29170c5c93b7185ad559492601acdc71d5bb0706f5868094f45cfcd08",
    strip_prefix = "rustc-stable-hash-0.1.2",
    urls = ["https://static.crates.io/crates/rustc-stable-hash/0.1.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "rustc-stable-hash-0.1.2",
    srcs = [":rustc-stable-hash-0.1.2.crate"],
    crate = "rustc_stable_hash",
    crate_root = "rustc-stable-hash-0.1.2.crate/src/lib.rs",
    edition = "2021",
    features = ["nightly"],
    visibility = [],
)

rust_bootstrap_library(
    name = "rustc-std-workspace-alloc-1.99.0",
    srcs = ["rust/library/rustc-std-workspace-alloc/lib.rs"],
    crate = "rustc_std_workspace_alloc",
    crate_root = "rust/library/rustc-std-workspace-alloc/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [":alloc-0.0.0"],
)

rust_bootstrap_library(
    name = "rustc-std-workspace-core-1.99.0",
    srcs = ["rust/library/rustc-std-workspace-core/lib.rs"],
    crate = "rustc_std_workspace_core",
    crate_root = "rust/library/rustc-std-workspace-core/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":compiler_builtins-0.1.160",
        ":core-0.0.0",
    ],
)

rust_bootstrap_library(
    name = "rustc-std-workspace-std-1.99.0",
    srcs = ["rust/library/rustc-std-workspace-std/lib.rs"],
    crate = "rustc_std_workspace_std",
    crate_root = "rust/library/rustc-std-workspace-std/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [":std-0.0.0"],
)

rust_bootstrap_library(
    name = "rustc_abi-0.0.0",
    srcs = [
        "rust/compiler/rustc_abi/src/callconv.rs",
        "rust/compiler/rustc_abi/src/callconv/reg.rs",
        "rust/compiler/rustc_abi/src/canon_abi.rs",
        "rust/compiler/rustc_abi/src/extern_abi.rs",
        "rust/compiler/rustc_abi/src/extern_abi/tests.rs",
        "rust/compiler/rustc_abi/src/layout.rs",
        "rust/compiler/rustc_abi/src/layout/coroutine.rs",
        "rust/compiler/rustc_abi/src/layout/simple.rs",
        "rust/compiler/rustc_abi/src/layout/ty.rs",
        "rust/compiler/rustc_abi/src/lib.rs",
        "rust/compiler/rustc_abi/src/tests.rs",
    ],
    crate = "rustc_abi",
    crate_root = "rust/compiler/rustc_abi/src/lib.rs",
    edition = "2024",
    features = [
        "default",
        "nightly",
        "randomize",
    ],
    visibility = [],
    deps = [
        ":bitflags-2.9.3",
        ":rand-0.9.2",
        ":rand_xoshiro-0.7.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_hashes-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_span-0.0.0",
        ":tracing-0.1.37",
    ],
)

crate_download(
    name = "rustc_apfloat-0.2.3+llvm-462a31f5a5ab.crate",
    sha256 = "486c2179b4796f65bfe2ee33679acf0927ac83ecf583ad6c91c3b4570911b9ad",
    strip_prefix = "rustc_apfloat-0.2.3+llvm-462a31f5a5ab",
    urls = ["https://static.crates.io/crates/rustc_apfloat/0.2.3+llvm-462a31f5a5ab/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "rustc_apfloat-0.2.3+llvm-462a31f5a5ab",
    srcs = [":rustc_apfloat-0.2.3+llvm-462a31f5a5ab.crate"],
    crate = "rustc_apfloat",
    crate_root = "rustc_apfloat-0.2.3+llvm-462a31f5a5ab.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [
        ":bitflags-2.9.3",
        ":smallvec-1.15.1",
    ],
)

rust_bootstrap_library(
    name = "rustc_arena-0.0.0",
    srcs = [
        "rust/compiler/rustc_arena/src/lib.rs",
        "rust/compiler/rustc_arena/src/tests.rs",
    ],
    crate = "rustc_arena",
    crate_root = "rust/compiler/rustc_arena/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [":smallvec-1.15.1"],
)

rust_bootstrap_library(
    name = "rustc_ast-0.0.0",
    srcs = [
        "rust/compiler/rustc_ast/src/ast.rs",
        "rust/compiler/rustc_ast/src/ast_traits.rs",
        "rust/compiler/rustc_ast/src/attr/mod.rs",
        "rust/compiler/rustc_ast/src/entry.rs",
        "rust/compiler/rustc_ast/src/expand/allocator.rs",
        "rust/compiler/rustc_ast/src/expand/autodiff_attrs.rs",
        "rust/compiler/rustc_ast/src/expand/mod.rs",
        "rust/compiler/rustc_ast/src/expand/typetree.rs",
        "rust/compiler/rustc_ast/src/format.rs",
        "rust/compiler/rustc_ast/src/lib.rs",
        "rust/compiler/rustc_ast/src/mut_visit.rs",
        "rust/compiler/rustc_ast/src/node_id.rs",
        "rust/compiler/rustc_ast/src/ptr.rs",
        "rust/compiler/rustc_ast/src/token.rs",
        "rust/compiler/rustc_ast/src/tokenstream.rs",
        "rust/compiler/rustc_ast/src/util/case.rs",
        "rust/compiler/rustc_ast/src/util/classify.rs",
        "rust/compiler/rustc_ast/src/util/comments.rs",
        "rust/compiler/rustc_ast/src/util/comments/tests.rs",
        "rust/compiler/rustc_ast/src/util/literal.rs",
        "rust/compiler/rustc_ast/src/util/parser.rs",
        "rust/compiler/rustc_ast/src/util/unicode.rs",
        "rust/compiler/rustc_ast/src/visit.rs",
    ],
    crate = "rustc_ast",
    crate_root = "rust/compiler/rustc_ast/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":bitflags-2.9.3",
        ":memchr-2.7.5",
        ":rustc-literal-escaper-0.0.2",
        ":rustc_ast_ir-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_span-0.0.0",
        ":smallvec-1.15.1",
        ":thin-vec-0.2.14",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_ast_ir-0.0.0",
    srcs = [
        "rust/compiler/rustc_ast_ir/src/lib.rs",
        "rust/compiler/rustc_ast_ir/src/visit.rs",
    ],
    crate = "rustc_ast_ir",
    crate_root = "rust/compiler/rustc_ast_ir/src/lib.rs",
    edition = "2024",
    features = [
        "default",
        "nightly",
    ],
    visibility = [],
    deps = [
        ":rustc_data_structures-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_serialize-0.0.0",
    ],
)

rust_bootstrap_library(
    name = "rustc_ast_lowering-0.0.0",
    srcs = [
        "rust/compiler/rustc_ast_lowering/src/asm.rs",
        "rust/compiler/rustc_ast_lowering/src/block.rs",
        "rust/compiler/rustc_ast_lowering/src/delegation.rs",
        "rust/compiler/rustc_ast_lowering/src/errors.rs",
        "rust/compiler/rustc_ast_lowering/src/expr.rs",
        "rust/compiler/rustc_ast_lowering/src/format.rs",
        "rust/compiler/rustc_ast_lowering/src/index.rs",
        "rust/compiler/rustc_ast_lowering/src/item.rs",
        "rust/compiler/rustc_ast_lowering/src/lib.rs",
        "rust/compiler/rustc_ast_lowering/src/pat.rs",
        "rust/compiler/rustc_ast_lowering/src/path.rs",
        "rust/compiler/rustc_ast_lowering/src/stability.rs",
    ],
    crate = "rustc_ast_lowering",
    crate_root = "rust/compiler/rustc_ast_lowering/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_ast_pretty-0.0.0",
        ":rustc_attr_parsing-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":smallvec-1.15.1",
        ":thin-vec-0.2.14",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_ast_passes-0.0.0",
    srcs = [
        "rust/compiler/rustc_ast_passes/src/ast_validation.rs",
        "rust/compiler/rustc_ast_passes/src/errors.rs",
        "rust/compiler/rustc_ast_passes/src/feature_gate.rs",
        "rust/compiler/rustc_ast_passes/src/lib.rs",
    ],
    crate = "rustc_ast_passes",
    crate_root = "rust/compiler/rustc_ast_passes/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":itertools-0.12.1",
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_ast_pretty-0.0.0",
        ":rustc_attr_parsing-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_parse-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":thin-vec-0.2.14",
    ],
)

rust_bootstrap_library(
    name = "rustc_ast_pretty-0.0.0",
    srcs = [
        "rust/compiler/rustc_ast_pretty/src/helpers.rs",
        "rust/compiler/rustc_ast_pretty/src/lib.rs",
        "rust/compiler/rustc_ast_pretty/src/pp.rs",
        "rust/compiler/rustc_ast_pretty/src/pp/convenience.rs",
        "rust/compiler/rustc_ast_pretty/src/pp/ring.rs",
        "rust/compiler/rustc_ast_pretty/src/pprust/mod.rs",
        "rust/compiler/rustc_ast_pretty/src/pprust/state.rs",
        "rust/compiler/rustc_ast_pretty/src/pprust/state/expr.rs",
        "rust/compiler/rustc_ast_pretty/src/pprust/state/fixup.rs",
        "rust/compiler/rustc_ast_pretty/src/pprust/state/item.rs",
        "rust/compiler/rustc_ast_pretty/src/pprust/tests.rs",
    ],
    crate = "rustc_ast_pretty",
    crate_root = "rust/compiler/rustc_ast_pretty/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":itertools-0.12.1",
        ":rustc_ast-0.0.0",
        ":rustc_lexer-0.0.0",
        ":rustc_span-0.0.0",
    ],
)

rust_bootstrap_library(
    name = "rustc_attr_data_structures-0.0.0",
    srcs = [
        "rust/compiler/rustc_attr_data_structures/src/attributes.rs",
        "rust/compiler/rustc_attr_data_structures/src/lib.rs",
        "rust/compiler/rustc_attr_data_structures/src/lints.rs",
        "rust/compiler/rustc_attr_data_structures/src/stability.rs",
        "rust/compiler/rustc_attr_data_structures/src/version.rs",
    ],
    crate = "rustc_attr_data_structures",
    crate_root = "rust/compiler/rustc_attr_data_structures/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_ast_pretty-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_span-0.0.0",
        ":thin-vec-0.2.14",
    ],
)

rust_bootstrap_library(
    name = "rustc_attr_parsing-0.0.0",
    srcs = [
        "rust/compiler/rustc_attr_parsing/src/attributes/allow_unstable.rs",
        "rust/compiler/rustc_attr_parsing/src/attributes/cfg.rs",
        "rust/compiler/rustc_attr_parsing/src/attributes/codegen_attrs.rs",
        "rust/compiler/rustc_attr_parsing/src/attributes/confusables.rs",
        "rust/compiler/rustc_attr_parsing/src/attributes/deprecation.rs",
        "rust/compiler/rustc_attr_parsing/src/attributes/inline.rs",
        "rust/compiler/rustc_attr_parsing/src/attributes/lint_helpers.rs",
        "rust/compiler/rustc_attr_parsing/src/attributes/mod.rs",
        "rust/compiler/rustc_attr_parsing/src/attributes/must_use.rs",
        "rust/compiler/rustc_attr_parsing/src/attributes/repr.rs",
        "rust/compiler/rustc_attr_parsing/src/attributes/semantics.rs",
        "rust/compiler/rustc_attr_parsing/src/attributes/stability.rs",
        "rust/compiler/rustc_attr_parsing/src/attributes/transparency.rs",
        "rust/compiler/rustc_attr_parsing/src/attributes/util.rs",
        "rust/compiler/rustc_attr_parsing/src/context.rs",
        "rust/compiler/rustc_attr_parsing/src/lib.rs",
        "rust/compiler/rustc_attr_parsing/src/lints.rs",
        "rust/compiler/rustc_attr_parsing/src/parser.rs",
        "rust/compiler/rustc_attr_parsing/src/session_diagnostics.rs",
    ],
    crate = "rustc_attr_parsing",
    crate_root = "rust/compiler/rustc_attr_parsing/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_ast_pretty-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_lexer-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":thin-vec-0.2.14",
    ],
)

rust_bootstrap_library(
    name = "rustc_baked_icu_data-0.0.0",
    srcs = [
        "rust/compiler/rustc_baked_icu_data/src/data/any.rs",
        "rust/compiler/rustc_baked_icu_data/src/data/macros.rs",
        "rust/compiler/rustc_baked_icu_data/src/data/macros/fallback_likelysubtags_v1.data.rs",
        "rust/compiler/rustc_baked_icu_data/src/data/macros/fallback_parents_v1.data.rs",
        "rust/compiler/rustc_baked_icu_data/src/data/macros/fallback_supplement_co_v1.data.rs",
        "rust/compiler/rustc_baked_icu_data/src/data/macros/list_and_v1.data.rs",
        "rust/compiler/rustc_baked_icu_data/src/data/mod.rs",
        "rust/compiler/rustc_baked_icu_data/src/lib.rs",
    ],
    crate = "rustc_baked_icu_data",
    crate_root = "rust/compiler/rustc_baked_icu_data/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":icu_list-1.5.0",
        ":icu_locid-1.5.0",
        ":icu_locid_transform-1.5.0",
        ":icu_provider-1.5.0",
        ":zerovec-0.10.4",
    ],
)

rust_bootstrap_library(
    name = "rustc_borrowck-0.0.0",
    srcs = [
        "rust/compiler/rustc_borrowck/src/borrow_set.rs",
        "rust/compiler/rustc_borrowck/src/borrowck_errors.rs",
        "rust/compiler/rustc_borrowck/src/constraints/graph.rs",
        "rust/compiler/rustc_borrowck/src/constraints/mod.rs",
        "rust/compiler/rustc_borrowck/src/consumers.rs",
        "rust/compiler/rustc_borrowck/src/dataflow.rs",
        "rust/compiler/rustc_borrowck/src/def_use.rs",
        "rust/compiler/rustc_borrowck/src/diagnostics/bound_region_errors.rs",
        "rust/compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs",
        "rust/compiler/rustc_borrowck/src/diagnostics/explain_borrow.rs",
        "rust/compiler/rustc_borrowck/src/diagnostics/find_all_local_uses.rs",
        "rust/compiler/rustc_borrowck/src/diagnostics/find_use.rs",
        "rust/compiler/rustc_borrowck/src/diagnostics/mod.rs",
        "rust/compiler/rustc_borrowck/src/diagnostics/move_errors.rs",
        "rust/compiler/rustc_borrowck/src/diagnostics/mutability_errors.rs",
        "rust/compiler/rustc_borrowck/src/diagnostics/opaque_suggestions.rs",
        "rust/compiler/rustc_borrowck/src/diagnostics/outlives_suggestion.rs",
        "rust/compiler/rustc_borrowck/src/diagnostics/region_errors.rs",
        "rust/compiler/rustc_borrowck/src/diagnostics/region_name.rs",
        "rust/compiler/rustc_borrowck/src/diagnostics/var_name.rs",
        "rust/compiler/rustc_borrowck/src/handle_placeholders.rs",
        "rust/compiler/rustc_borrowck/src/lib.rs",
        "rust/compiler/rustc_borrowck/src/member_constraints.rs",
        "rust/compiler/rustc_borrowck/src/nll.rs",
        "rust/compiler/rustc_borrowck/src/path_utils.rs",
        "rust/compiler/rustc_borrowck/src/place_ext.rs",
        "rust/compiler/rustc_borrowck/src/places_conflict.rs",
        "rust/compiler/rustc_borrowck/src/polonius/constraints.rs",
        "rust/compiler/rustc_borrowck/src/polonius/dump.rs",
        "rust/compiler/rustc_borrowck/src/polonius/legacy/accesses.rs",
        "rust/compiler/rustc_borrowck/src/polonius/legacy/facts.rs",
        "rust/compiler/rustc_borrowck/src/polonius/legacy/loan_invalidations.rs",
        "rust/compiler/rustc_borrowck/src/polonius/legacy/loan_kills.rs",
        "rust/compiler/rustc_borrowck/src/polonius/legacy/location.rs",
        "rust/compiler/rustc_borrowck/src/polonius/legacy/mod.rs",
        "rust/compiler/rustc_borrowck/src/polonius/liveness_constraints.rs",
        "rust/compiler/rustc_borrowck/src/polonius/loan_liveness.rs",
        "rust/compiler/rustc_borrowck/src/polonius/mod.rs",
        "rust/compiler/rustc_borrowck/src/polonius/typeck_constraints.rs",
        "rust/compiler/rustc_borrowck/src/prefixes.rs",
        "rust/compiler/rustc_borrowck/src/region_infer/dump_mir.rs",
        "rust/compiler/rustc_borrowck/src/region_infer/graphviz.rs",
        "rust/compiler/rustc_borrowck/src/region_infer/mod.rs",
        "rust/compiler/rustc_borrowck/src/region_infer/opaque_types.rs",
        "rust/compiler/rustc_borrowck/src/region_infer/reverse_sccs.rs",
        "rust/compiler/rustc_borrowck/src/region_infer/values.rs",
        "rust/compiler/rustc_borrowck/src/renumber.rs",
        "rust/compiler/rustc_borrowck/src/root_cx.rs",
        "rust/compiler/rustc_borrowck/src/session_diagnostics.rs",
        "rust/compiler/rustc_borrowck/src/type_check/canonical.rs",
        "rust/compiler/rustc_borrowck/src/type_check/constraint_conversion.rs",
        "rust/compiler/rustc_borrowck/src/type_check/free_region_relations.rs",
        "rust/compiler/rustc_borrowck/src/type_check/input_output.rs",
        "rust/compiler/rustc_borrowck/src/type_check/liveness/local_use_map.rs",
        "rust/compiler/rustc_borrowck/src/type_check/liveness/mod.rs",
        "rust/compiler/rustc_borrowck/src/type_check/liveness/trace.rs",
        "rust/compiler/rustc_borrowck/src/type_check/mod.rs",
        "rust/compiler/rustc_borrowck/src/type_check/opaque_types.rs",
        "rust/compiler/rustc_borrowck/src/type_check/relate_tys.rs",
        "rust/compiler/rustc_borrowck/src/universal_regions.rs",
        "rust/compiler/rustc_borrowck/src/used_muts.rs",
    ],
    crate = "rustc_borrowck",
    crate_root = "rust/compiler/rustc_borrowck/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":either-1.15.0",
        ":itertools-0.12.1",
        ":polonius-engine-0.13.0",
        ":rustc_abi-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_graphviz-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_infer-0.0.0",
        ":rustc_lexer-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_mir_dataflow-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":rustc_traits-0.0.0",
        ":smallvec-1.15.1",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_builtin_macros-0.0.0",
    srcs = [
        "rust/compiler/rustc_builtin_macros/src/alloc_error_handler.rs",
        "rust/compiler/rustc_builtin_macros/src/asm.rs",
        "rust/compiler/rustc_builtin_macros/src/assert.rs",
        "rust/compiler/rustc_builtin_macros/src/assert/context.rs",
        "rust/compiler/rustc_builtin_macros/src/autodiff.rs",
        "rust/compiler/rustc_builtin_macros/src/cfg.rs",
        "rust/compiler/rustc_builtin_macros/src/cfg_accessible.rs",
        "rust/compiler/rustc_builtin_macros/src/cfg_eval.rs",
        "rust/compiler/rustc_builtin_macros/src/cmdline_attrs.rs",
        "rust/compiler/rustc_builtin_macros/src/compile_error.rs",
        "rust/compiler/rustc_builtin_macros/src/concat.rs",
        "rust/compiler/rustc_builtin_macros/src/concat_bytes.rs",
        "rust/compiler/rustc_builtin_macros/src/concat_idents.rs",
        "rust/compiler/rustc_builtin_macros/src/contracts.rs",
        "rust/compiler/rustc_builtin_macros/src/define_opaque.rs",
        "rust/compiler/rustc_builtin_macros/src/derive.rs",
        "rust/compiler/rustc_builtin_macros/src/deriving/bounds.rs",
        "rust/compiler/rustc_builtin_macros/src/deriving/clone.rs",
        "rust/compiler/rustc_builtin_macros/src/deriving/cmp/eq.rs",
        "rust/compiler/rustc_builtin_macros/src/deriving/cmp/ord.rs",
        "rust/compiler/rustc_builtin_macros/src/deriving/cmp/partial_eq.rs",
        "rust/compiler/rustc_builtin_macros/src/deriving/cmp/partial_ord.rs",
        "rust/compiler/rustc_builtin_macros/src/deriving/coerce_pointee.rs",
        "rust/compiler/rustc_builtin_macros/src/deriving/debug.rs",
        "rust/compiler/rustc_builtin_macros/src/deriving/default.rs",
        "rust/compiler/rustc_builtin_macros/src/deriving/generic/mod.rs",
        "rust/compiler/rustc_builtin_macros/src/deriving/generic/ty.rs",
        "rust/compiler/rustc_builtin_macros/src/deriving/hash.rs",
        "rust/compiler/rustc_builtin_macros/src/deriving/mod.rs",
        "rust/compiler/rustc_builtin_macros/src/edition_panic.rs",
        "rust/compiler/rustc_builtin_macros/src/env.rs",
        "rust/compiler/rustc_builtin_macros/src/errors.rs",
        "rust/compiler/rustc_builtin_macros/src/format.rs",
        "rust/compiler/rustc_builtin_macros/src/format_foreign.rs",
        "rust/compiler/rustc_builtin_macros/src/format_foreign/printf/tests.rs",
        "rust/compiler/rustc_builtin_macros/src/format_foreign/shell/tests.rs",
        "rust/compiler/rustc_builtin_macros/src/global_allocator.rs",
        "rust/compiler/rustc_builtin_macros/src/iter.rs",
        "rust/compiler/rustc_builtin_macros/src/lib.rs",
        "rust/compiler/rustc_builtin_macros/src/log_syntax.rs",
        "rust/compiler/rustc_builtin_macros/src/pattern_type.rs",
        "rust/compiler/rustc_builtin_macros/src/proc_macro_harness.rs",
        "rust/compiler/rustc_builtin_macros/src/source_util.rs",
        "rust/compiler/rustc_builtin_macros/src/standard_library_imports.rs",
        "rust/compiler/rustc_builtin_macros/src/test.rs",
        "rust/compiler/rustc_builtin_macros/src/test_harness.rs",
        "rust/compiler/rustc_builtin_macros/src/trace_macros.rs",
        "rust/compiler/rustc_builtin_macros/src/util.rs",
    ],
    crate = "rustc_builtin_macros",
    crate_root = "rust/compiler/rustc_builtin_macros/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rustc_ast-0.0.0",
        ":rustc_ast_pretty-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_attr_parsing-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_expand-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_lexer-0.0.0",
        ":rustc_lint_defs-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_parse-0.0.0",
        ":rustc_parse_format-0.0.0",
        ":rustc_proc_macro-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":smallvec-1.15.1",
        ":thin-vec-0.2.14",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_codegen_llvm-0.0.0",
    srcs = [
        "rust/compiler/rustc_codegen_llvm/src/abi.rs",
        "rust/compiler/rustc_codegen_llvm/src/allocator.rs",
        "rust/compiler/rustc_codegen_llvm/src/asm.rs",
        "rust/compiler/rustc_codegen_llvm/src/attributes.rs",
        "rust/compiler/rustc_codegen_llvm/src/back/archive.rs",
        "rust/compiler/rustc_codegen_llvm/src/back/lto.rs",
        "rust/compiler/rustc_codegen_llvm/src/back/owned_target_machine.rs",
        "rust/compiler/rustc_codegen_llvm/src/back/profiling.rs",
        "rust/compiler/rustc_codegen_llvm/src/back/write.rs",
        "rust/compiler/rustc_codegen_llvm/src/base.rs",
        "rust/compiler/rustc_codegen_llvm/src/builder.rs",
        "rust/compiler/rustc_codegen_llvm/src/builder/autodiff.rs",
        "rust/compiler/rustc_codegen_llvm/src/callee.rs",
        "rust/compiler/rustc_codegen_llvm/src/common.rs",
        "rust/compiler/rustc_codegen_llvm/src/consts.rs",
        "rust/compiler/rustc_codegen_llvm/src/context.rs",
        "rust/compiler/rustc_codegen_llvm/src/coverageinfo/ffi.rs",
        "rust/compiler/rustc_codegen_llvm/src/coverageinfo/llvm_cov.rs",
        "rust/compiler/rustc_codegen_llvm/src/coverageinfo/mapgen.rs",
        "rust/compiler/rustc_codegen_llvm/src/coverageinfo/mapgen/covfun.rs",
        "rust/compiler/rustc_codegen_llvm/src/coverageinfo/mapgen/spans.rs",
        "rust/compiler/rustc_codegen_llvm/src/coverageinfo/mapgen/unused.rs",
        "rust/compiler/rustc_codegen_llvm/src/coverageinfo/mod.rs",
        "rust/compiler/rustc_codegen_llvm/src/debuginfo/create_scope_map.rs",
        "rust/compiler/rustc_codegen_llvm/src/debuginfo/doc.md",
        "rust/compiler/rustc_codegen_llvm/src/debuginfo/dwarf_const.rs",
        "rust/compiler/rustc_codegen_llvm/src/debuginfo/gdb.rs",
        "rust/compiler/rustc_codegen_llvm/src/debuginfo/metadata.rs",
        "rust/compiler/rustc_codegen_llvm/src/debuginfo/metadata/enums/cpp_like.rs",
        "rust/compiler/rustc_codegen_llvm/src/debuginfo/metadata/enums/mod.rs",
        "rust/compiler/rustc_codegen_llvm/src/debuginfo/metadata/enums/native.rs",
        "rust/compiler/rustc_codegen_llvm/src/debuginfo/metadata/type_map.rs",
        "rust/compiler/rustc_codegen_llvm/src/debuginfo/mod.rs",
        "rust/compiler/rustc_codegen_llvm/src/debuginfo/namespace.rs",
        "rust/compiler/rustc_codegen_llvm/src/debuginfo/utils.rs",
        "rust/compiler/rustc_codegen_llvm/src/declare.rs",
        "rust/compiler/rustc_codegen_llvm/src/errors.rs",
        "rust/compiler/rustc_codegen_llvm/src/intrinsic.rs",
        "rust/compiler/rustc_codegen_llvm/src/lib.rs",
        "rust/compiler/rustc_codegen_llvm/src/llvm/archive_ro.rs",
        "rust/compiler/rustc_codegen_llvm/src/llvm/diagnostic.rs",
        "rust/compiler/rustc_codegen_llvm/src/llvm/enzyme_ffi.rs",
        "rust/compiler/rustc_codegen_llvm/src/llvm/ffi.rs",
        "rust/compiler/rustc_codegen_llvm/src/llvm/mod.rs",
        "rust/compiler/rustc_codegen_llvm/src/llvm_util.rs",
        "rust/compiler/rustc_codegen_llvm/src/mono_item.rs",
        "rust/compiler/rustc_codegen_llvm/src/type_.rs",
        "rust/compiler/rustc_codegen_llvm/src/type_of.rs",
        "rust/compiler/rustc_codegen_llvm/src/va_arg.rs",
        "rust/compiler/rustc_codegen_llvm/src/value.rs",
    ],
    crate = "rustc_codegen_llvm",
    crate_root = "rust/compiler/rustc_codegen_llvm/src/lib.rs",
    edition = "2024",
    rustc_flags = ["-Zlink-directives=no"],
    visibility = [],
    deps = [
        ":bitflags-2.9.3",
        ":gimli-0.31.1",
        ":itertools-0.12.1",
        ":libc-0.2.175",
        ":measureme-12.0.3",
        ":object-0.37.3",
        ":rustc-demangle-0.1.26",
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_codegen_ssa-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_fs_util-0.0.0",
        ":rustc_hashes-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_llvm-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_metadata-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_query_system-0.0.0",
        ":rustc_sanitizers-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_symbol_mangling-0.0.0",
        ":rustc_target-0.0.0",
        ":serde-1.0.219",
        ":serde_json-1.0.143",
        ":smallvec-1.15.1",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_codegen_ssa-0.0.0",
    srcs = [
        "rust/compiler/rustc_codegen_ssa/src/assert_module_sources.rs",
        "rust/compiler/rustc_codegen_ssa/src/back/apple.rs",
        "rust/compiler/rustc_codegen_ssa/src/back/apple/tests.rs",
        "rust/compiler/rustc_codegen_ssa/src/back/archive.rs",
        "rust/compiler/rustc_codegen_ssa/src/back/command.rs",
        "rust/compiler/rustc_codegen_ssa/src/back/link.rs",
        "rust/compiler/rustc_codegen_ssa/src/back/link/raw_dylib.rs",
        "rust/compiler/rustc_codegen_ssa/src/back/linker.rs",
        "rust/compiler/rustc_codegen_ssa/src/back/linker/tests.rs",
        "rust/compiler/rustc_codegen_ssa/src/back/lto.rs",
        "rust/compiler/rustc_codegen_ssa/src/back/metadata.rs",
        "rust/compiler/rustc_codegen_ssa/src/back/mod.rs",
        "rust/compiler/rustc_codegen_ssa/src/back/rpath.rs",
        "rust/compiler/rustc_codegen_ssa/src/back/rpath/tests.rs",
        "rust/compiler/rustc_codegen_ssa/src/back/symbol_export.rs",
        "rust/compiler/rustc_codegen_ssa/src/back/write.rs",
        "rust/compiler/rustc_codegen_ssa/src/base.rs",
        "rust/compiler/rustc_codegen_ssa/src/codegen_attrs.rs",
        "rust/compiler/rustc_codegen_ssa/src/common.rs",
        "rust/compiler/rustc_codegen_ssa/src/debuginfo/mod.rs",
        "rust/compiler/rustc_codegen_ssa/src/debuginfo/type_names.rs",
        "rust/compiler/rustc_codegen_ssa/src/errors.rs",
        "rust/compiler/rustc_codegen_ssa/src/lib.rs",
        "rust/compiler/rustc_codegen_ssa/src/meth.rs",
        "rust/compiler/rustc_codegen_ssa/src/mir/analyze.rs",
        "rust/compiler/rustc_codegen_ssa/src/mir/block.rs",
        "rust/compiler/rustc_codegen_ssa/src/mir/constant.rs",
        "rust/compiler/rustc_codegen_ssa/src/mir/coverageinfo.rs",
        "rust/compiler/rustc_codegen_ssa/src/mir/debuginfo.rs",
        "rust/compiler/rustc_codegen_ssa/src/mir/intrinsic.rs",
        "rust/compiler/rustc_codegen_ssa/src/mir/locals.rs",
        "rust/compiler/rustc_codegen_ssa/src/mir/mod.rs",
        "rust/compiler/rustc_codegen_ssa/src/mir/naked_asm.rs",
        "rust/compiler/rustc_codegen_ssa/src/mir/operand.rs",
        "rust/compiler/rustc_codegen_ssa/src/mir/place.rs",
        "rust/compiler/rustc_codegen_ssa/src/mir/rvalue.rs",
        "rust/compiler/rustc_codegen_ssa/src/mir/statement.rs",
        "rust/compiler/rustc_codegen_ssa/src/mono_item.rs",
        "rust/compiler/rustc_codegen_ssa/src/size_of_val.rs",
        "rust/compiler/rustc_codegen_ssa/src/target_features.rs",
        "rust/compiler/rustc_codegen_ssa/src/traits/abi.rs",
        "rust/compiler/rustc_codegen_ssa/src/traits/asm.rs",
        "rust/compiler/rustc_codegen_ssa/src/traits/backend.rs",
        "rust/compiler/rustc_codegen_ssa/src/traits/builder.rs",
        "rust/compiler/rustc_codegen_ssa/src/traits/consts.rs",
        "rust/compiler/rustc_codegen_ssa/src/traits/coverageinfo.rs",
        "rust/compiler/rustc_codegen_ssa/src/traits/debuginfo.rs",
        "rust/compiler/rustc_codegen_ssa/src/traits/declare.rs",
        "rust/compiler/rustc_codegen_ssa/src/traits/intrinsic.rs",
        "rust/compiler/rustc_codegen_ssa/src/traits/misc.rs",
        "rust/compiler/rustc_codegen_ssa/src/traits/mod.rs",
        "rust/compiler/rustc_codegen_ssa/src/traits/statics.rs",
        "rust/compiler/rustc_codegen_ssa/src/traits/type_.rs",
        "rust/compiler/rustc_codegen_ssa/src/traits/write.rs",
    ],
    crate = "rustc_codegen_ssa",
    crate_root = "rust/compiler/rustc_codegen_ssa/src/lib.rs",
    edition = "2024",
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-riscv64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "windows-gnu-compiler": dict(
            deps = [":windows-0.61.3"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":windows-0.61.3"],
        ),
    },
    visibility = [],
    deps = [
        ":ar_archive_writer-0.4.2",
        ":bitflags-2.9.3",
        ":bstr-1.12.0",
        ":cc-1.2.16",
        ":itertools-0.12.1",
        ":object-0.37.3",
        ":pathdiff-0.2.3",
        ":regex-1.11.1",
        ":rustc_abi-0.0.0",
        ":rustc_arena-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_attr_parsing-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_fs_util-0.0.0",
        ":rustc_hashes-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_incremental-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_metadata-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_query_system-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_symbol_mangling-0.0.0",
        ":rustc_target-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":serde_json-1.0.143",
        ":smallvec-1.15.1",
        ":tempfile-3.21.0",
        ":thin-vec-0.2.14",
        ":thorin-dwp-0.9.0",
        ":tracing-0.1.37",
        ":wasm-encoder-0.219.2",
    ],
)

rust_bootstrap_library(
    name = "rustc_const_eval-0.0.0",
    srcs = [
        "rust/compiler/rustc_const_eval/src/check_consts/check.rs",
        "rust/compiler/rustc_const_eval/src/check_consts/mod.rs",
        "rust/compiler/rustc_const_eval/src/check_consts/ops.rs",
        "rust/compiler/rustc_const_eval/src/check_consts/post_drop_elaboration.rs",
        "rust/compiler/rustc_const_eval/src/check_consts/qualifs.rs",
        "rust/compiler/rustc_const_eval/src/check_consts/resolver.rs",
        "rust/compiler/rustc_const_eval/src/const_eval/dummy_machine.rs",
        "rust/compiler/rustc_const_eval/src/const_eval/error.rs",
        "rust/compiler/rustc_const_eval/src/const_eval/eval_queries.rs",
        "rust/compiler/rustc_const_eval/src/const_eval/fn_queries.rs",
        "rust/compiler/rustc_const_eval/src/const_eval/machine.rs",
        "rust/compiler/rustc_const_eval/src/const_eval/mod.rs",
        "rust/compiler/rustc_const_eval/src/const_eval/valtrees.rs",
        "rust/compiler/rustc_const_eval/src/errors.rs",
        "rust/compiler/rustc_const_eval/src/interpret/call.rs",
        "rust/compiler/rustc_const_eval/src/interpret/cast.rs",
        "rust/compiler/rustc_const_eval/src/interpret/discriminant.rs",
        "rust/compiler/rustc_const_eval/src/interpret/eval_context.rs",
        "rust/compiler/rustc_const_eval/src/interpret/intern.rs",
        "rust/compiler/rustc_const_eval/src/interpret/intrinsics.rs",
        "rust/compiler/rustc_const_eval/src/interpret/machine.rs",
        "rust/compiler/rustc_const_eval/src/interpret/memory.rs",
        "rust/compiler/rustc_const_eval/src/interpret/mod.rs",
        "rust/compiler/rustc_const_eval/src/interpret/operand.rs",
        "rust/compiler/rustc_const_eval/src/interpret/operator.rs",
        "rust/compiler/rustc_const_eval/src/interpret/place.rs",
        "rust/compiler/rustc_const_eval/src/interpret/projection.rs",
        "rust/compiler/rustc_const_eval/src/interpret/stack.rs",
        "rust/compiler/rustc_const_eval/src/interpret/step.rs",
        "rust/compiler/rustc_const_eval/src/interpret/traits.rs",
        "rust/compiler/rustc_const_eval/src/interpret/util.rs",
        "rust/compiler/rustc_const_eval/src/interpret/validity.rs",
        "rust/compiler/rustc_const_eval/src/interpret/visitor.rs",
        "rust/compiler/rustc_const_eval/src/lib.rs",
        "rust/compiler/rustc_const_eval/src/util/alignment.rs",
        "rust/compiler/rustc_const_eval/src/util/caller_location.rs",
        "rust/compiler/rustc_const_eval/src/util/check_validity_requirement.rs",
        "rust/compiler/rustc_const_eval/src/util/compare_types.rs",
        "rust/compiler/rustc_const_eval/src/util/mod.rs",
        "rust/compiler/rustc_const_eval/src/util/type_name.rs",
    ],
    crate = "rustc_const_eval",
    crate_root = "rust/compiler/rustc_const_eval/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":either-1.15.0",
        ":rustc_abi-0.0.0",
        ":rustc_apfloat-0.2.3+llvm-462a31f5a5ab",
        ":rustc_ast-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_infer-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_mir_dataflow-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_data_structures-0.0.0",
    srcs = [
        "rust/compiler/rustc_data_structures/src/aligned.rs",
        "rust/compiler/rustc_data_structures/src/atomic_ref.rs",
        "rust/compiler/rustc_data_structures/src/base_n.rs",
        "rust/compiler/rustc_data_structures/src/base_n/tests.rs",
        "rust/compiler/rustc_data_structures/src/binary_search_util/mod.rs",
        "rust/compiler/rustc_data_structures/src/binary_search_util/tests.rs",
        "rust/compiler/rustc_data_structures/src/fingerprint.rs",
        "rust/compiler/rustc_data_structures/src/fingerprint/tests.rs",
        "rust/compiler/rustc_data_structures/src/flat_map_in_place.rs",
        "rust/compiler/rustc_data_structures/src/flock.rs",
        "rust/compiler/rustc_data_structures/src/flock/linux.rs",
        "rust/compiler/rustc_data_structures/src/flock/unix.rs",
        "rust/compiler/rustc_data_structures/src/flock/unsupported.rs",
        "rust/compiler/rustc_data_structures/src/flock/windows.rs",
        "rust/compiler/rustc_data_structures/src/frozen.rs",
        "rust/compiler/rustc_data_structures/src/fx.rs",
        "rust/compiler/rustc_data_structures/src/graph/dominators/mod.rs",
        "rust/compiler/rustc_data_structures/src/graph/dominators/tests.rs",
        "rust/compiler/rustc_data_structures/src/graph/iterate/mod.rs",
        "rust/compiler/rustc_data_structures/src/graph/iterate/tests.rs",
        "rust/compiler/rustc_data_structures/src/graph/linked_graph/mod.rs",
        "rust/compiler/rustc_data_structures/src/graph/linked_graph/tests.rs",
        "rust/compiler/rustc_data_structures/src/graph/mod.rs",
        "rust/compiler/rustc_data_structures/src/graph/reference.rs",
        "rust/compiler/rustc_data_structures/src/graph/reversed.rs",
        "rust/compiler/rustc_data_structures/src/graph/scc/mod.rs",
        "rust/compiler/rustc_data_structures/src/graph/scc/tests.rs",
        "rust/compiler/rustc_data_structures/src/graph/tests.rs",
        "rust/compiler/rustc_data_structures/src/graph/vec_graph/mod.rs",
        "rust/compiler/rustc_data_structures/src/graph/vec_graph/tests.rs",
        "rust/compiler/rustc_data_structures/src/intern.rs",
        "rust/compiler/rustc_data_structures/src/intern/tests.rs",
        "rust/compiler/rustc_data_structures/src/jobserver.rs",
        "rust/compiler/rustc_data_structures/src/lib.rs",
        "rust/compiler/rustc_data_structures/src/marker.rs",
        "rust/compiler/rustc_data_structures/src/memmap.rs",
        "rust/compiler/rustc_data_structures/src/obligation_forest/graphviz.rs",
        "rust/compiler/rustc_data_structures/src/obligation_forest/mod.rs",
        "rust/compiler/rustc_data_structures/src/obligation_forest/tests.rs",
        "rust/compiler/rustc_data_structures/src/owned_slice.rs",
        "rust/compiler/rustc_data_structures/src/owned_slice/tests.rs",
        "rust/compiler/rustc_data_structures/src/packed.rs",
        "rust/compiler/rustc_data_structures/src/profiling.rs",
        "rust/compiler/rustc_data_structures/src/profiling/tests.rs",
        "rust/compiler/rustc_data_structures/src/sharded.rs",
        "rust/compiler/rustc_data_structures/src/small_c_str.rs",
        "rust/compiler/rustc_data_structures/src/small_c_str/tests.rs",
        "rust/compiler/rustc_data_structures/src/snapshot_map/mod.rs",
        "rust/compiler/rustc_data_structures/src/snapshot_map/tests.rs",
        "rust/compiler/rustc_data_structures/src/sorted_map.rs",
        "rust/compiler/rustc_data_structures/src/sorted_map/index_map.rs",
        "rust/compiler/rustc_data_structures/src/sorted_map/tests.rs",
        "rust/compiler/rustc_data_structures/src/sso/map.rs",
        "rust/compiler/rustc_data_structures/src/sso/mod.rs",
        "rust/compiler/rustc_data_structures/src/sso/set.rs",
        "rust/compiler/rustc_data_structures/src/stable_hasher.rs",
        "rust/compiler/rustc_data_structures/src/stable_hasher/tests.rs",
        "rust/compiler/rustc_data_structures/src/stack.rs",
        "rust/compiler/rustc_data_structures/src/steal.rs",
        "rust/compiler/rustc_data_structures/src/svh.rs",
        "rust/compiler/rustc_data_structures/src/sync.rs",
        "rust/compiler/rustc_data_structures/src/sync/freeze.rs",
        "rust/compiler/rustc_data_structures/src/sync/lock.rs",
        "rust/compiler/rustc_data_structures/src/sync/parallel.rs",
        "rust/compiler/rustc_data_structures/src/sync/vec.rs",
        "rust/compiler/rustc_data_structures/src/sync/worker_local.rs",
        "rust/compiler/rustc_data_structures/src/tagged_ptr.rs",
        "rust/compiler/rustc_data_structures/src/tagged_ptr/tests.rs",
        "rust/compiler/rustc_data_structures/src/temp_dir.rs",
        "rust/compiler/rustc_data_structures/src/thinvec.rs",
        "rust/compiler/rustc_data_structures/src/thousands/mod.rs",
        "rust/compiler/rustc_data_structures/src/thousands/tests.rs",
        "rust/compiler/rustc_data_structures/src/transitive_relation.rs",
        "rust/compiler/rustc_data_structures/src/transitive_relation/tests.rs",
        "rust/compiler/rustc_data_structures/src/unhash.rs",
        "rust/compiler/rustc_data_structures/src/unord.rs",
        "rust/compiler/rustc_data_structures/src/vec_cache.rs",
        "rust/compiler/rustc_data_structures/src/vec_cache/tests.rs",
        "rust/compiler/rustc_data_structures/src/work_queue.rs",
    ],
    crate = "rustc_data_structures",
    crate_root = "rust/compiler/rustc_data_structures/src/lib.rs",
    edition = "2024",
    named_deps = {
        "jobserver_crate": ":jobserver-0.1.34",
    },
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-riscv64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "windows-gnu-compiler": dict(
            deps = [":windows-0.61.3"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":windows-0.61.3"],
        ),
    },
    visibility = [],
    deps = [
        ":arrayvec-0.7.6",
        ":bitflags-2.9.3",
        ":either-1.15.0",
        ":elsa-1.11.2",
        ":ena-0.14.3",
        ":hashbrown-0.15.5",
        ":indexmap-2.11.0",
        ":measureme-12.0.3",
        ":memmap2-0.2.3",
        ":parking_lot-0.12.4",
        ":rustc-hash-2.1.1",
        ":rustc-stable-hash-0.1.2",
        ":rustc_arena-0.0.0",
        ":rustc_graphviz-0.0.0",
        ":rustc_hashes-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_thread_pool-0.0.0",
        ":smallvec-1.15.1",
        ":stacker-0.1.21",
        ":tempfile-3.21.0",
        ":thin-vec-0.2.14",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_alias(
    name = "rustc_driver_impl",
    actual = ":rustc_driver_impl-0.0.0",
    visibility = ["PUBLIC"],
)

rust_bootstrap_library(
    name = "rustc_driver_impl-0.0.0",
    srcs = [
        "rust/compiler/rustc_driver_impl/src/args.rs",
        "rust/compiler/rustc_driver_impl/src/lib.rs",
        "rust/compiler/rustc_driver_impl/src/pretty.rs",
        "rust/compiler/rustc_driver_impl/src/print.rs",
        "rust/compiler/rustc_driver_impl/src/session_diagnostics.rs",
        "rust/compiler/rustc_driver_impl/src/signal_handler.rs",
    ],
    crate = "rustc_driver_impl",
    crate_root = "rust/compiler/rustc_driver_impl/src/lib.rs",
    edition = "2024",
    features = ["llvm"],
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-riscv64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "windows-gnu-compiler": dict(
            deps = [":windows-0.61.3"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":windows-0.61.3"],
        ),
    },
    visibility = [],
    deps = [
        ":ctrlc-3.4.7",
        ":jiff-0.2.15",
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_ast_lowering-0.0.0",
        ":rustc_ast_passes-0.0.0",
        ":rustc_ast_pretty-0.0.0",
        ":rustc_attr_parsing-0.0.0",
        ":rustc_borrowck-0.0.0",
        ":rustc_builtin_macros-0.0.0",
        ":rustc_codegen_ssa-0.0.0",
        ":rustc_const_eval-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_expand-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir_analysis-0.0.0",
        ":rustc_hir_pretty-0.0.0",
        ":rustc_hir_typeck-0.0.0",
        ":rustc_incremental-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_infer-0.0.0",
        ":rustc_interface-0.0.0",
        ":rustc_lint-0.0.0",
        ":rustc_log-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_metadata-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_mir_build-0.0.0",
        ":rustc_mir_dataflow-0.0.0",
        ":rustc_mir_transform-0.0.0",
        ":rustc_monomorphize-0.0.0",
        ":rustc_parse-0.0.0",
        ":rustc_passes-0.0.0",
        ":rustc_pattern_analysis-0.0.0",
        ":rustc_privacy-0.0.0",
        ":rustc_query_system-0.0.0",
        ":rustc_resolve-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":rustc_ty_utils-0.0.0",
        ":serde_json-1.0.143",
        ":shlex-1.3.0",
        ":stable_mir-0.1.0-preview",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_error_codes-0.0.0",
    srcs = ["rust/compiler/rustc_error_codes/src/lib.rs"],
    crate = "rustc_error_codes",
    crate_root = "rust/compiler/rustc_error_codes/src/lib.rs",
    edition = "2024",
    visibility = [],
)

rust_bootstrap_library(
    name = "rustc_error_messages-0.0.0",
    srcs = ["rust/compiler/rustc_error_messages/src/lib.rs"],
    crate = "rustc_error_messages",
    crate_root = "rust/compiler/rustc_error_messages/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":fluent-bundle-0.16.0",
        ":fluent-syntax-0.12.0",
        ":icu_list-1.5.0",
        ":icu_locid-1.5.0",
        ":icu_provider_adapters-1.5.0",
        ":intl-memoizer-0.5.3",
        ":rustc_baked_icu_data-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_span-0.0.0",
        ":smallvec-1.15.1",
        ":tracing-0.1.37",
        ":unic-langid-0.9.6",
    ],
)

rust_bootstrap_library(
    name = "rustc_errors-0.0.0",
    srcs = [
        "rust/compiler/rustc_error_codes/src/error_codes/E0001.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0002.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0004.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0005.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0007.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0009.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0010.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0013.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0014.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0015.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0023.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0025.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0026.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0027.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0029.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0030.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0033.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0034.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0038.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0040.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0044.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0045.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0046.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0049.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0050.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0053.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0054.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0055.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0057.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0059.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0060.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0061.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0062.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0063.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0067.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0069.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0070.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0071.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0072.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0073.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0074.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0075.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0076.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0077.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0080.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0081.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0084.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0087.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0088.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0089.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0090.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0091.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0092.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0093.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0094.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0106.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0107.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0109.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0110.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0116.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0117.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0118.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0119.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0120.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0121.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0124.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0128.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0130.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0131.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0132.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0133.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0136.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0137.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0138.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0139.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0152.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0154.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0158.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0161.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0162.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0164.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0165.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0170.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0178.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0183.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0184.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0185.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0186.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0191.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0192.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0193.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0195.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0197.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0198.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0199.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0200.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0201.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0203.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0204.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0205.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0206.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0207.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0208.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0210.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0211.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0212.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0214.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0220.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0221.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0222.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0223.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0224.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0225.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0226.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0227.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0228.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0229.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0230.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0231.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0232.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0243.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0244.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0251.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0252.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0253.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0254.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0255.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0256.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0259.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0260.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0261.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0262.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0263.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0264.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0267.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0268.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0271.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0275.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0276.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0277.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0281.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0282.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0283.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0284.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0297.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0301.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0302.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0303.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0307.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0308.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0309.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0310.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0311.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0312.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0316.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0317.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0320.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0321.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0322.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0323.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0324.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0325.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0326.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0328.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0329.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0364.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0365.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0366.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0367.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0368.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0369.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0370.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0371.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0373.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0374.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0375.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0376.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0377.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0378.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0379.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0380.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0381.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0382.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0383.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0384.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0386.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0387.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0388.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0389.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0390.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0391.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0392.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0393.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0398.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0399.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0401.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0403.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0404.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0405.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0407.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0408.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0409.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0411.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0412.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0415.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0416.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0422.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0423.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0424.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0425.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0426.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0428.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0429.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0430.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0431.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0432.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0433.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0434.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0435.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0436.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0437.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0438.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0439.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0445.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0446.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0447.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0448.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0449.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0451.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0452.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0453.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0454.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0455.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0457.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0458.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0459.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0460.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0461.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0462.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0463.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0464.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0466.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0468.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0469.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0472.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0476.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0477.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0478.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0482.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0491.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0492.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0493.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0495.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0496.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0497.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0498.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0499.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0500.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0501.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0502.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0503.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0504.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0505.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0506.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0507.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0508.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0509.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0510.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0511.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0512.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0514.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0515.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0516.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0517.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0518.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0519.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0520.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0521.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0522.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0523.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0524.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0525.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0527.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0528.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0529.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0530.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0531.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0532.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0533.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0534.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0535.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0536.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0537.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0538.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0539.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0541.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0542.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0543.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0544.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0545.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0546.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0547.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0549.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0550.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0551.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0552.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0554.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0556.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0557.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0559.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0560.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0561.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0562.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0565.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0566.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0567.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0568.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0569.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0570.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0571.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0572.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0573.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0574.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0575.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0576.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0577.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0578.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0579.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0580.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0581.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0582.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0583.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0584.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0585.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0586.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0587.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0588.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0589.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0590.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0591.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0592.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0593.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0594.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0595.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0596.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0597.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0599.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0600.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0601.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0602.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0603.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0604.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0605.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0606.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0607.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0608.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0609.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0610.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0614.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0615.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0616.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0617.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0618.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0619.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0620.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0621.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0622.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0623.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0624.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0625.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0626.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0627.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0628.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0631.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0632.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0633.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0634.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0635.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0636.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0637.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0638.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0639.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0640.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0641.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0642.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0643.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0644.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0646.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0647.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0648.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0657.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0658.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0659.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0660.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0661.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0662.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0663.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0664.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0665.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0666.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0667.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0668.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0669.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0670.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0671.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0687.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0688.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0689.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0690.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0691.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0692.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0693.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0695.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0696.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0697.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0698.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0699.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0700.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0701.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0703.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0704.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0705.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0706.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0708.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0710.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0711.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0712.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0713.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0714.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0715.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0716.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0717.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0718.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0719.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0720.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0722.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0724.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0725.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0726.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0727.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0728.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0729.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0730.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0731.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0732.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0733.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0734.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0735.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0736.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0737.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0739.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0740.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0741.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0742.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0743.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0744.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0745.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0746.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0747.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0748.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0749.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0750.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0751.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0752.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0753.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0754.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0755.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0756.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0757.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0758.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0759.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0760.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0761.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0762.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0763.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0764.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0765.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0766.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0767.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0768.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0769.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0770.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0771.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0772.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0773.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0774.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0775.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0776.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0777.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0778.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0779.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0780.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0781.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0782.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0783.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0784.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0785.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0786.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0787.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0788.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0789.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0790.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0791.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0792.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0793.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0794.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0795.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0796.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0797.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0798.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0799.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0800.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0801.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0802.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0803.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0804.md",
        "rust/compiler/rustc_error_codes/src/error_codes/E0805.md",
        "rust/compiler/rustc_errors/src/annotate_snippet_emitter_writer.rs",
        "rust/compiler/rustc_errors/src/codes.rs",
        "rust/compiler/rustc_errors/src/diagnostic.rs",
        "rust/compiler/rustc_errors/src/diagnostic_impls.rs",
        "rust/compiler/rustc_errors/src/emitter.rs",
        "rust/compiler/rustc_errors/src/error.rs",
        "rust/compiler/rustc_errors/src/json.rs",
        "rust/compiler/rustc_errors/src/json/tests.rs",
        "rust/compiler/rustc_errors/src/lib.rs",
        "rust/compiler/rustc_errors/src/lock.rs",
        "rust/compiler/rustc_errors/src/markdown/mod.rs",
        "rust/compiler/rustc_errors/src/markdown/parse.rs",
        "rust/compiler/rustc_errors/src/markdown/term.rs",
        "rust/compiler/rustc_errors/src/markdown/tests/parse.rs",
        "rust/compiler/rustc_errors/src/markdown/tests/term.rs",
        "rust/compiler/rustc_errors/src/registry.rs",
        "rust/compiler/rustc_errors/src/snippet.rs",
        "rust/compiler/rustc_errors/src/styled_buffer.rs",
        "rust/compiler/rustc_errors/src/tests.rs",
        "rust/compiler/rustc_errors/src/timings.rs",
        "rust/compiler/rustc_errors/src/translation.rs",
    ],
    crate = "rustc_errors",
    crate_root = "rust/compiler/rustc_errors/src/lib.rs",
    edition = "2024",
    platform = {
        "windows-gnu-compiler": dict(
            deps = [":windows-0.61.3"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":windows-0.61.3"],
        ),
    },
    visibility = [],
    deps = [
        ":annotate-snippets-0.11.5",
        ":derive_setters-0.1.8",
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_ast_pretty-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_error_codes-0.0.0",
        ":rustc_error_messages-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hashes-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_lexer-0.0.0",
        ":rustc_lint_defs-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":rustc_type_ir-0.0.0",
        ":serde-1.0.219",
        ":serde_json-1.0.143",
        ":termcolor-1.4.1",
        ":termize-0.1.1",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_expand-0.0.0",
    srcs = [
        "rust/compiler/rustc_expand/src/base.rs",
        "rust/compiler/rustc_expand/src/build.rs",
        "rust/compiler/rustc_expand/src/config.rs",
        "rust/compiler/rustc_expand/src/errors.rs",
        "rust/compiler/rustc_expand/src/expand.rs",
        "rust/compiler/rustc_expand/src/lib.rs",
        "rust/compiler/rustc_expand/src/mbe.rs",
        "rust/compiler/rustc_expand/src/mbe/diagnostics.rs",
        "rust/compiler/rustc_expand/src/mbe/macro_check.rs",
        "rust/compiler/rustc_expand/src/mbe/macro_parser.rs",
        "rust/compiler/rustc_expand/src/mbe/macro_rules.rs",
        "rust/compiler/rustc_expand/src/mbe/metavar_expr.rs",
        "rust/compiler/rustc_expand/src/mbe/quoted.rs",
        "rust/compiler/rustc_expand/src/mbe/transcribe.rs",
        "rust/compiler/rustc_expand/src/module.rs",
        "rust/compiler/rustc_expand/src/placeholders.rs",
        "rust/compiler/rustc_expand/src/proc_macro.rs",
        "rust/compiler/rustc_expand/src/proc_macro_server.rs",
        "rust/compiler/rustc_expand/src/stats.rs",
    ],
    crate = "rustc_expand",
    crate_root = "rust/compiler/rustc_expand/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rustc_ast-0.0.0",
        ":rustc_ast_passes-0.0.0",
        ":rustc_ast_pretty-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_attr_parsing-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_lexer-0.0.0",
        ":rustc_lint_defs-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_parse-0.0.0",
        ":rustc_proc_macro-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":smallvec-1.15.1",
        ":thin-vec-0.2.14",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_feature-0.0.0",
    srcs = [
        "rust/compiler/rustc_feature/src/accepted.rs",
        "rust/compiler/rustc_feature/src/builtin_attrs.rs",
        "rust/compiler/rustc_feature/src/lib.rs",
        "rust/compiler/rustc_feature/src/removed.rs",
        "rust/compiler/rustc_feature/src/tests.rs",
        "rust/compiler/rustc_feature/src/unstable.rs",
    ],
    crate = "rustc_feature",
    crate_root = "rust/compiler/rustc_feature/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rustc_data_structures-0.0.0",
        ":rustc_span-0.0.0",
        ":serde-1.0.219",
        ":serde_json-1.0.143",
    ],
)

rust_bootstrap_library(
    name = "rustc_fluent_macro-0.0.0",
    srcs = [
        "rust/compiler/rustc_fluent_macro/src/fluent.rs",
        "rust/compiler/rustc_fluent_macro/src/lib.rs",
    ],
    crate = "rustc_fluent_macro",
    crate_root = "rust/compiler/rustc_fluent_macro/src/lib.rs",
    edition = "2024",
    proc_macro = True,
    visibility = [],
    deps = [
        ":annotate-snippets-0.11.5",
        ":fluent-bundle-0.16.0",
        ":fluent-syntax-0.12.0",
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
        ":unic-langid-0.9.6",
    ],
)

rust_bootstrap_library(
    name = "rustc_fs_util-0.0.0",
    srcs = ["rust/compiler/rustc_fs_util/src/lib.rs"],
    crate = "rustc_fs_util",
    crate_root = "rust/compiler/rustc_fs_util/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [":tempfile-3.21.0"],
)

rust_bootstrap_library(
    name = "rustc_graphviz-0.0.0",
    srcs = [
        "rust/compiler/rustc_graphviz/src/lib.rs",
        "rust/compiler/rustc_graphviz/src/tests.rs",
    ],
    crate = "rustc_graphviz",
    crate_root = "rust/compiler/rustc_graphviz/src/lib.rs",
    edition = "2024",
    visibility = [],
)

rust_bootstrap_library(
    name = "rustc_hashes-0.0.0",
    srcs = ["rust/compiler/rustc_hashes/src/lib.rs"],
    crate = "rustc_hashes",
    crate_root = "rust/compiler/rustc_hashes/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [":rustc-stable-hash-0.1.2"],
)

rust_bootstrap_library(
    name = "rustc_hir-0.0.0",
    srcs = [
        "rust/compiler/rustc_hir/src/arena.rs",
        "rust/compiler/rustc_hir/src/def.rs",
        "rust/compiler/rustc_hir/src/def_path_hash_map.rs",
        "rust/compiler/rustc_hir/src/definitions.rs",
        "rust/compiler/rustc_hir/src/diagnostic_items.rs",
        "rust/compiler/rustc_hir/src/hir.rs",
        "rust/compiler/rustc_hir/src/hir/tests.rs",
        "rust/compiler/rustc_hir/src/hir_id.rs",
        "rust/compiler/rustc_hir/src/intravisit.rs",
        "rust/compiler/rustc_hir/src/lang_items.rs",
        "rust/compiler/rustc_hir/src/lib.rs",
        "rust/compiler/rustc_hir/src/lints.rs",
        "rust/compiler/rustc_hir/src/pat_util.rs",
        "rust/compiler/rustc_hir/src/stable_hash_impls.rs",
        "rust/compiler/rustc_hir/src/target.rs",
        "rust/compiler/rustc_hir/src/tests.rs",
        "rust/compiler/rustc_hir/src/weak_lang_items.rs",
    ],
    crate = "rustc_hir",
    crate_root = "rust/compiler/rustc_hir/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":odht-0.3.1",
        ":rustc_abi-0.0.0",
        ":rustc_arena-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_hashes-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":smallvec-1.15.1",
        ":thin-vec-0.2.14",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_hir_analysis-0.0.0",
    srcs = [
        "rust/compiler/rustc_hir_analysis/src/autoderef.rs",
        "rust/compiler/rustc_hir_analysis/src/check/always_applicable.rs",
        "rust/compiler/rustc_hir_analysis/src/check/check.rs",
        "rust/compiler/rustc_hir_analysis/src/check/compare_impl_item.rs",
        "rust/compiler/rustc_hir_analysis/src/check/compare_impl_item/refine.rs",
        "rust/compiler/rustc_hir_analysis/src/check/entry.rs",
        "rust/compiler/rustc_hir_analysis/src/check/intrinsic.rs",
        "rust/compiler/rustc_hir_analysis/src/check/mod.rs",
        "rust/compiler/rustc_hir_analysis/src/check/region.rs",
        "rust/compiler/rustc_hir_analysis/src/check/wfcheck.rs",
        "rust/compiler/rustc_hir_analysis/src/check_unused.rs",
        "rust/compiler/rustc_hir_analysis/src/coherence/builtin.rs",
        "rust/compiler/rustc_hir_analysis/src/coherence/inherent_impls.rs",
        "rust/compiler/rustc_hir_analysis/src/coherence/inherent_impls_overlap.rs",
        "rust/compiler/rustc_hir_analysis/src/coherence/mod.rs",
        "rust/compiler/rustc_hir_analysis/src/coherence/orphan.rs",
        "rust/compiler/rustc_hir_analysis/src/coherence/unsafety.rs",
        "rust/compiler/rustc_hir_analysis/src/collect.rs",
        "rust/compiler/rustc_hir_analysis/src/collect/dump.rs",
        "rust/compiler/rustc_hir_analysis/src/collect/generics_of.rs",
        "rust/compiler/rustc_hir_analysis/src/collect/item_bounds.rs",
        "rust/compiler/rustc_hir_analysis/src/collect/predicates_of.rs",
        "rust/compiler/rustc_hir_analysis/src/collect/resolve_bound_vars.rs",
        "rust/compiler/rustc_hir_analysis/src/collect/type_of.rs",
        "rust/compiler/rustc_hir_analysis/src/collect/type_of/opaque.rs",
        "rust/compiler/rustc_hir_analysis/src/constrained_generic_params.rs",
        "rust/compiler/rustc_hir_analysis/src/delegation.rs",
        "rust/compiler/rustc_hir_analysis/src/errors.rs",
        "rust/compiler/rustc_hir_analysis/src/errors/precise_captures.rs",
        "rust/compiler/rustc_hir_analysis/src/errors/wrong_number_of_generic_args.rs",
        "rust/compiler/rustc_hir_analysis/src/hir_ty_lowering/bounds.rs",
        "rust/compiler/rustc_hir_analysis/src/hir_ty_lowering/cmse.rs",
        "rust/compiler/rustc_hir_analysis/src/hir_ty_lowering/dyn_compatibility.rs",
        "rust/compiler/rustc_hir_analysis/src/hir_ty_lowering/errors.rs",
        "rust/compiler/rustc_hir_analysis/src/hir_ty_lowering/generics.rs",
        "rust/compiler/rustc_hir_analysis/src/hir_ty_lowering/lint.rs",
        "rust/compiler/rustc_hir_analysis/src/hir_ty_lowering/mod.rs",
        "rust/compiler/rustc_hir_analysis/src/hir_wf_check.rs",
        "rust/compiler/rustc_hir_analysis/src/impl_wf_check.rs",
        "rust/compiler/rustc_hir_analysis/src/impl_wf_check/min_specialization.rs",
        "rust/compiler/rustc_hir_analysis/src/lib.rs",
        "rust/compiler/rustc_hir_analysis/src/outlives/dump.rs",
        "rust/compiler/rustc_hir_analysis/src/outlives/explicit.rs",
        "rust/compiler/rustc_hir_analysis/src/outlives/implicit_infer.rs",
        "rust/compiler/rustc_hir_analysis/src/outlives/mod.rs",
        "rust/compiler/rustc_hir_analysis/src/outlives/utils.rs",
        "rust/compiler/rustc_hir_analysis/src/variance/constraints.rs",
        "rust/compiler/rustc_hir_analysis/src/variance/dump.rs",
        "rust/compiler/rustc_hir_analysis/src/variance/mod.rs",
        "rust/compiler/rustc_hir_analysis/src/variance/solve.rs",
        "rust/compiler/rustc_hir_analysis/src/variance/terms.rs",
    ],
    crate = "rustc_hir_analysis",
    crate_root = "rust/compiler/rustc_hir_analysis/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":itertools-0.12.1",
        ":rustc_abi-0.0.0",
        ":rustc_arena-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_attr_parsing-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_infer-0.0.0",
        ":rustc_lint_defs-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":smallvec-1.15.1",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_hir_pretty-0.0.0",
    srcs = ["rust/compiler/rustc_hir_pretty/src/lib.rs"],
    crate = "rustc_hir_pretty",
    crate_root = "rust/compiler/rustc_hir_pretty/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_ast_pretty-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_span-0.0.0",
    ],
)

rust_bootstrap_library(
    name = "rustc_hir_typeck-0.0.0",
    srcs = [
        "rust/compiler/rustc_hir_typeck/src/_match.rs",
        "rust/compiler/rustc_hir_typeck/src/autoderef.rs",
        "rust/compiler/rustc_hir_typeck/src/callee.rs",
        "rust/compiler/rustc_hir_typeck/src/cast.rs",
        "rust/compiler/rustc_hir_typeck/src/check.rs",
        "rust/compiler/rustc_hir_typeck/src/closure.rs",
        "rust/compiler/rustc_hir_typeck/src/coercion.rs",
        "rust/compiler/rustc_hir_typeck/src/demand.rs",
        "rust/compiler/rustc_hir_typeck/src/diverges.rs",
        "rust/compiler/rustc_hir_typeck/src/errors.rs",
        "rust/compiler/rustc_hir_typeck/src/expectation.rs",
        "rust/compiler/rustc_hir_typeck/src/expr.rs",
        "rust/compiler/rustc_hir_typeck/src/expr_use_visitor.rs",
        "rust/compiler/rustc_hir_typeck/src/fallback.rs",
        "rust/compiler/rustc_hir_typeck/src/fn_ctxt/_impl.rs",
        "rust/compiler/rustc_hir_typeck/src/fn_ctxt/adjust_fulfillment_errors.rs",
        "rust/compiler/rustc_hir_typeck/src/fn_ctxt/arg_matrix.rs",
        "rust/compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs",
        "rust/compiler/rustc_hir_typeck/src/fn_ctxt/inspect_obligations.rs",
        "rust/compiler/rustc_hir_typeck/src/fn_ctxt/mod.rs",
        "rust/compiler/rustc_hir_typeck/src/fn_ctxt/suggestions.rs",
        "rust/compiler/rustc_hir_typeck/src/gather_locals.rs",
        "rust/compiler/rustc_hir_typeck/src/inline_asm.rs",
        "rust/compiler/rustc_hir_typeck/src/intrinsicck.rs",
        "rust/compiler/rustc_hir_typeck/src/lib.rs",
        "rust/compiler/rustc_hir_typeck/src/loops.rs",
        "rust/compiler/rustc_hir_typeck/src/method/confirm.rs",
        "rust/compiler/rustc_hir_typeck/src/method/mod.rs",
        "rust/compiler/rustc_hir_typeck/src/method/prelude_edition_lints.rs",
        "rust/compiler/rustc_hir_typeck/src/method/probe.rs",
        "rust/compiler/rustc_hir_typeck/src/method/suggest.rs",
        "rust/compiler/rustc_hir_typeck/src/naked_functions.rs",
        "rust/compiler/rustc_hir_typeck/src/op.rs",
        "rust/compiler/rustc_hir_typeck/src/opaque_types.rs",
        "rust/compiler/rustc_hir_typeck/src/pat.rs",
        "rust/compiler/rustc_hir_typeck/src/place_op.rs",
        "rust/compiler/rustc_hir_typeck/src/rvalue_scopes.rs",
        "rust/compiler/rustc_hir_typeck/src/typeck_root_ctxt.rs",
        "rust/compiler/rustc_hir_typeck/src/upvar.rs",
        "rust/compiler/rustc_hir_typeck/src/writeback.rs",
    ],
    crate = "rustc_hir_typeck",
    crate_root = "rust/compiler/rustc_hir_typeck/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":itertools-0.12.1",
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_attr_parsing-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_hir_analysis-0.0.0",
        ":rustc_hir_pretty-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_infer-0.0.0",
        ":rustc_lint-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":smallvec-1.15.1",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_incremental-0.0.0",
    srcs = [
        "rust/compiler/rustc_incremental/src/assert_dep_graph.rs",
        "rust/compiler/rustc_incremental/src/errors.rs",
        "rust/compiler/rustc_incremental/src/lib.rs",
        "rust/compiler/rustc_incremental/src/persist/data.rs",
        "rust/compiler/rustc_incremental/src/persist/dirty_clean.rs",
        "rust/compiler/rustc_incremental/src/persist/file_format.rs",
        "rust/compiler/rustc_incremental/src/persist/fs.rs",
        "rust/compiler/rustc_incremental/src/persist/fs/tests.rs",
        "rust/compiler/rustc_incremental/src/persist/load.rs",
        "rust/compiler/rustc_incremental/src/persist/mod.rs",
        "rust/compiler/rustc_incremental/src/persist/save.rs",
        "rust/compiler/rustc_incremental/src/persist/work_product.rs",
    ],
    crate = "rustc_incremental",
    crate_root = "rust/compiler/rustc_incremental/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rand-0.9.2",
        ":rustc_ast-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_fs_util-0.0.0",
        ":rustc_graphviz-0.0.0",
        ":rustc_hashes-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":thin-vec-0.2.14",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_index-0.0.0",
    srcs = [
        "rust/compiler/rustc_index/src/bit_set.rs",
        "rust/compiler/rustc_index/src/bit_set/tests.rs",
        "rust/compiler/rustc_index/src/idx.rs",
        "rust/compiler/rustc_index/src/interval.rs",
        "rust/compiler/rustc_index/src/interval/tests.rs",
        "rust/compiler/rustc_index/src/lib.rs",
        "rust/compiler/rustc_index/src/slice.rs",
        "rust/compiler/rustc_index/src/vec.rs",
        "rust/compiler/rustc_index/src/vec/tests.rs",
    ],
    crate = "rustc_index",
    crate_root = "rust/compiler/rustc_index/src/lib.rs",
    edition = "2024",
    features = [
        "default",
        "nightly",
    ],
    visibility = [],
    deps = [
        ":rustc_index_macros-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_serialize-0.0.0",
        ":smallvec-1.15.1",
    ],
)

rust_bootstrap_library(
    name = "rustc_index_macros-0.0.0",
    srcs = [
        "rust/compiler/rustc_index_macros/src/lib.rs",
        "rust/compiler/rustc_index_macros/src/newtype.rs",
    ],
    crate = "rustc_index_macros",
    crate_root = "rust/compiler/rustc_index_macros/src/lib.rs",
    edition = "2024",
    features = ["nightly"],
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
    ],
)

rust_bootstrap_library(
    name = "rustc_infer-0.0.0",
    srcs = [
        "rust/compiler/rustc_infer/src/errors.rs",
        "rust/compiler/rustc_infer/src/infer/at.rs",
        "rust/compiler/rustc_infer/src/infer/canonical/canonicalizer.rs",
        "rust/compiler/rustc_infer/src/infer/canonical/instantiate.rs",
        "rust/compiler/rustc_infer/src/infer/canonical/mod.rs",
        "rust/compiler/rustc_infer/src/infer/canonical/query_response.rs",
        "rust/compiler/rustc_infer/src/infer/context.rs",
        "rust/compiler/rustc_infer/src/infer/free_regions.rs",
        "rust/compiler/rustc_infer/src/infer/freshen.rs",
        "rust/compiler/rustc_infer/src/infer/lexical_region_resolve/mod.rs",
        "rust/compiler/rustc_infer/src/infer/mod.rs",
        "rust/compiler/rustc_infer/src/infer/opaque_types/mod.rs",
        "rust/compiler/rustc_infer/src/infer/opaque_types/table.rs",
        "rust/compiler/rustc_infer/src/infer/outlives/env.rs",
        "rust/compiler/rustc_infer/src/infer/outlives/for_liveness.rs",
        "rust/compiler/rustc_infer/src/infer/outlives/mod.rs",
        "rust/compiler/rustc_infer/src/infer/outlives/obligations.rs",
        "rust/compiler/rustc_infer/src/infer/outlives/test_type_match.rs",
        "rust/compiler/rustc_infer/src/infer/outlives/verify.rs",
        "rust/compiler/rustc_infer/src/infer/projection.rs",
        "rust/compiler/rustc_infer/src/infer/region_constraints/leak_check.rs",
        "rust/compiler/rustc_infer/src/infer/region_constraints/mod.rs",
        "rust/compiler/rustc_infer/src/infer/relate/generalize.rs",
        "rust/compiler/rustc_infer/src/infer/relate/higher_ranked.rs",
        "rust/compiler/rustc_infer/src/infer/relate/lattice.rs",
        "rust/compiler/rustc_infer/src/infer/relate/mod.rs",
        "rust/compiler/rustc_infer/src/infer/relate/type_relating.rs",
        "rust/compiler/rustc_infer/src/infer/resolve.rs",
        "rust/compiler/rustc_infer/src/infer/snapshot/fudge.rs",
        "rust/compiler/rustc_infer/src/infer/snapshot/mod.rs",
        "rust/compiler/rustc_infer/src/infer/snapshot/undo_log.rs",
        "rust/compiler/rustc_infer/src/infer/type_variable.rs",
        "rust/compiler/rustc_infer/src/infer/unify_key.rs",
        "rust/compiler/rustc_infer/src/lib.rs",
        "rust/compiler/rustc_infer/src/traits/engine.rs",
        "rust/compiler/rustc_infer/src/traits/mod.rs",
        "rust/compiler/rustc_infer/src/traits/project.rs",
        "rust/compiler/rustc_infer/src/traits/structural_impls.rs",
        "rust/compiler/rustc_infer/src/traits/util.rs",
    ],
    crate = "rustc_infer",
    crate_root = "rust/compiler/rustc_infer/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_type_ir-0.0.0",
        ":smallvec-1.15.1",
        ":thin-vec-0.2.14",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_interface-0.0.0",
    srcs = [
        "rust/compiler/rustc_interface/src/callbacks.rs",
        "rust/compiler/rustc_interface/src/errors.rs",
        "rust/compiler/rustc_interface/src/interface.rs",
        "rust/compiler/rustc_interface/src/lib.rs",
        "rust/compiler/rustc_interface/src/limits.rs",
        "rust/compiler/rustc_interface/src/passes.rs",
        "rust/compiler/rustc_interface/src/proc_macro_decls.rs",
        "rust/compiler/rustc_interface/src/queries.rs",
        "rust/compiler/rustc_interface/src/tests.rs",
        "rust/compiler/rustc_interface/src/util.rs",
    ],
    crate = "rustc_interface",
    crate_root = "rust/compiler/rustc_interface/src/lib.rs",
    edition = "2024",
    env = {
        "RUSTC_INSTALL_BINDIR": "bin",
    },
    features = ["llvm"],
    visibility = [],
    deps = [
        ":rustc_ast-0.0.0",
        ":rustc_ast_lowering-0.0.0",
        ":rustc_ast_passes-0.0.0",
        ":rustc_ast_pretty-0.0.0",
        ":rustc_attr_parsing-0.0.0",
        ":rustc_borrowck-0.0.0",
        ":rustc_builtin_macros-0.0.0",
        ":rustc_codegen_llvm-0.0.0",
        ":rustc_codegen_ssa-0.0.0",
        ":rustc_const_eval-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_expand-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_fs_util-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_hir_analysis-0.0.0",
        ":rustc_hir_typeck-0.0.0",
        ":rustc_incremental-0.0.0",
        ":rustc_lint-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_metadata-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_mir_build-0.0.0",
        ":rustc_mir_transform-0.0.0",
        ":rustc_monomorphize-0.0.0",
        ":rustc_parse-0.0.0",
        ":rustc_passes-0.0.0",
        ":rustc_privacy-0.0.0",
        ":rustc_query_impl-0.0.0",
        ":rustc_query_system-0.0.0",
        ":rustc_resolve-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_symbol_mangling-0.0.0",
        ":rustc_target-0.0.0",
        ":rustc_thread_pool-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":rustc_traits-0.0.0",
        ":rustc_ty_utils-0.0.0",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_lexer-0.0.0",
    srcs = [
        "rust/compiler/rustc_lexer/src/cursor.rs",
        "rust/compiler/rustc_lexer/src/lib.rs",
        "rust/compiler/rustc_lexer/src/tests.rs",
    ],
    crate = "rustc_lexer",
    crate_root = "rust/compiler/rustc_lexer/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":memchr-2.7.5",
        ":unicode-properties-0.1.3",
        ":unicode-xid-0.2.6",
    ],
)

rust_bootstrap_library(
    name = "rustc_lint-0.0.0",
    srcs = [
        "rust/compiler/rustc_lint/src/async_closures.rs",
        "rust/compiler/rustc_lint/src/async_fn_in_trait.rs",
        "rust/compiler/rustc_lint/src/autorefs.rs",
        "rust/compiler/rustc_lint/src/builtin.rs",
        "rust/compiler/rustc_lint/src/context.rs",
        "rust/compiler/rustc_lint/src/dangling.rs",
        "rust/compiler/rustc_lint/src/default_could_be_derived.rs",
        "rust/compiler/rustc_lint/src/deref_into_dyn_supertrait.rs",
        "rust/compiler/rustc_lint/src/drop_forget_useless.rs",
        "rust/compiler/rustc_lint/src/early.rs",
        "rust/compiler/rustc_lint/src/early/diagnostics.rs",
        "rust/compiler/rustc_lint/src/early/diagnostics/check_cfg.rs",
        "rust/compiler/rustc_lint/src/enum_intrinsics_non_enums.rs",
        "rust/compiler/rustc_lint/src/errors.rs",
        "rust/compiler/rustc_lint/src/expect.rs",
        "rust/compiler/rustc_lint/src/for_loops_over_fallibles.rs",
        "rust/compiler/rustc_lint/src/foreign_modules.rs",
        "rust/compiler/rustc_lint/src/if_let_rescope.rs",
        "rust/compiler/rustc_lint/src/impl_trait_overcaptures.rs",
        "rust/compiler/rustc_lint/src/internal.rs",
        "rust/compiler/rustc_lint/src/invalid_from_utf8.rs",
        "rust/compiler/rustc_lint/src/late.rs",
        "rust/compiler/rustc_lint/src/let_underscore.rs",
        "rust/compiler/rustc_lint/src/levels.rs",
        "rust/compiler/rustc_lint/src/lib.rs",
        "rust/compiler/rustc_lint/src/lifetime_syntax.rs",
        "rust/compiler/rustc_lint/src/lints.rs",
        "rust/compiler/rustc_lint/src/macro_expr_fragment_specifier_2024_migration.rs",
        "rust/compiler/rustc_lint/src/map_unit_fn.rs",
        "rust/compiler/rustc_lint/src/multiple_supertrait_upcastable.rs",
        "rust/compiler/rustc_lint/src/non_ascii_idents.rs",
        "rust/compiler/rustc_lint/src/non_fmt_panic.rs",
        "rust/compiler/rustc_lint/src/non_local_def.rs",
        "rust/compiler/rustc_lint/src/nonstandard_style.rs",
        "rust/compiler/rustc_lint/src/nonstandard_style/tests.rs",
        "rust/compiler/rustc_lint/src/noop_method_call.rs",
        "rust/compiler/rustc_lint/src/opaque_hidden_inferred_bound.rs",
        "rust/compiler/rustc_lint/src/pass_by_value.rs",
        "rust/compiler/rustc_lint/src/passes.rs",
        "rust/compiler/rustc_lint/src/precedence.rs",
        "rust/compiler/rustc_lint/src/ptr_nulls.rs",
        "rust/compiler/rustc_lint/src/redundant_semicolon.rs",
        "rust/compiler/rustc_lint/src/reference_casting.rs",
        "rust/compiler/rustc_lint/src/shadowed_into_iter.rs",
        "rust/compiler/rustc_lint/src/static_mut_refs.rs",
        "rust/compiler/rustc_lint/src/tests.rs",
        "rust/compiler/rustc_lint/src/traits.rs",
        "rust/compiler/rustc_lint/src/transmute.rs",
        "rust/compiler/rustc_lint/src/types.rs",
        "rust/compiler/rustc_lint/src/types/improper_ctypes.rs",
        "rust/compiler/rustc_lint/src/types/literal.rs",
        "rust/compiler/rustc_lint/src/unit_bindings.rs",
        "rust/compiler/rustc_lint/src/unqualified_local_imports.rs",
        "rust/compiler/rustc_lint/src/unused.rs",
        "rust/compiler/rustc_lint/src/utils.rs",
    ],
    crate = "rustc_lint",
    crate_root = "rust/compiler/rustc_lint/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_ast_pretty-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_attr_parsing-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_infer-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_parse_format-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":smallvec-1.15.1",
        ":tracing-0.1.37",
        ":unicode-security-0.1.2",
    ],
)

rust_bootstrap_library(
    name = "rustc_lint_defs-0.0.0",
    srcs = [
        "rust/compiler/rustc_lint_defs/src/builtin.rs",
        "rust/compiler/rustc_lint_defs/src/lib.rs",
    ],
    crate = "rustc_lint_defs",
    crate_root = "rust/compiler/rustc_lint_defs/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_error_messages-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_span-0.0.0",
        ":serde-1.0.219",
    ],
)

rust_bootstrap_library(
    name = "rustc_llvm-0.0.0",
    srcs = ["rust/compiler/rustc_llvm/src/lib.rs"],
    crate = "rustc_llvm",
    crate_root = "rust/compiler/rustc_llvm/src/lib.rs",
    edition = "2024",
    rustc_flags = ["@$(location //fixups/rustc_llvm:rustc-flags)"],
    visibility = [],
    deps = [
        ":libc-0.2.175",
        ":rustc_llvm-0.0.0-llvm-wrapper",
    ],
)

cxx_bootstrap_library(
    name = "rustc_llvm-0.0.0-llvm-wrapper",
    srcs = [
        "rust/compiler/rustc_llvm/llvm-wrapper/ArchiveWrapper.cpp",
        "rust/compiler/rustc_llvm/llvm-wrapper/CoverageMappingWrapper.cpp",
        "rust/compiler/rustc_llvm/llvm-wrapper/Linker.cpp",
        "rust/compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp",
        "rust/compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp",
        "rust/compiler/rustc_llvm/llvm-wrapper/SymbolWrapper.cpp",
    ],
    headers = [
        "rust/compiler/rustc_llvm/llvm-wrapper/LLVMWrapper.h",
        "rust/compiler/rustc_llvm/llvm-wrapper/SuppressLLVMWarnings.h",
    ],
    compiler_flags = ["--config=$(location //fixups/rustc_llvm:cxx-flags)"],
    preferred_linkage = "static",
    preprocessor_flags = [
        "-I$(location //stage0:ci_llvm)/include",
        "--config=$(location //fixups/rustc_llvm:preprocessor-flags)",
    ],
    visibility = [],
    deps = ["//fixups/rustc_llvm:llvm"],
)

rust_bootstrap_library(
    name = "rustc_log-0.0.0",
    srcs = ["rust/compiler/rustc_log/src/lib.rs"],
    crate = "rustc_log",
    crate_root = "rust/compiler/rustc_log/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":tracing-0.1.37",
        ":tracing-core-0.1.30",
        ":tracing-subscriber-0.3.18",
        ":tracing-tree-0.3.1",
    ],
)

rust_bootstrap_library(
    name = "rustc_macros-0.0.0",
    srcs = [
        "rust/compiler/rustc_macros/src/current_version.rs",
        "rust/compiler/rustc_macros/src/diagnostics/diagnostic.rs",
        "rust/compiler/rustc_macros/src/diagnostics/diagnostic_builder.rs",
        "rust/compiler/rustc_macros/src/diagnostics/error.rs",
        "rust/compiler/rustc_macros/src/diagnostics/mod.rs",
        "rust/compiler/rustc_macros/src/diagnostics/subdiagnostic.rs",
        "rust/compiler/rustc_macros/src/diagnostics/utils.rs",
        "rust/compiler/rustc_macros/src/extension.rs",
        "rust/compiler/rustc_macros/src/hash_stable.rs",
        "rust/compiler/rustc_macros/src/lib.rs",
        "rust/compiler/rustc_macros/src/lift.rs",
        "rust/compiler/rustc_macros/src/print_attribute.rs",
        "rust/compiler/rustc_macros/src/query.rs",
        "rust/compiler/rustc_macros/src/serialize.rs",
        "rust/compiler/rustc_macros/src/symbols.rs",
        "rust/compiler/rustc_macros/src/symbols/tests.rs",
        "rust/compiler/rustc_macros/src/try_from.rs",
        "rust/compiler/rustc_macros/src/type_foldable.rs",
        "rust/compiler/rustc_macros/src/type_visitable.rs",
    ],
    crate = "rustc_macros",
    crate_root = "rust/compiler/rustc_macros/src/lib.rs",
    edition = "2024",
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
        ":synstructure-0.13.2",
    ],
)

rust_bootstrap_library(
    name = "rustc_metadata-0.0.0",
    srcs = [
        "rust/compiler/rustc_metadata/src/creader.rs",
        "rust/compiler/rustc_metadata/src/dependency_format.rs",
        "rust/compiler/rustc_metadata/src/errors.rs",
        "rust/compiler/rustc_metadata/src/foreign_modules.rs",
        "rust/compiler/rustc_metadata/src/fs.rs",
        "rust/compiler/rustc_metadata/src/lib.rs",
        "rust/compiler/rustc_metadata/src/locator.rs",
        "rust/compiler/rustc_metadata/src/native_libs.rs",
        "rust/compiler/rustc_metadata/src/rmeta/decoder.rs",
        "rust/compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs",
        "rust/compiler/rustc_metadata/src/rmeta/def_path_hash_map.rs",
        "rust/compiler/rustc_metadata/src/rmeta/encoder.rs",
        "rust/compiler/rustc_metadata/src/rmeta/mod.rs",
        "rust/compiler/rustc_metadata/src/rmeta/table.rs",
    ],
    crate = "rustc_metadata",
    crate_root = "rust/compiler/rustc_metadata/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":bitflags-2.9.3",
        ":libloading-0.8.8",
        ":odht-0.3.1",
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_attr_parsing-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_expand-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_fs_util-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_hir_pretty-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_proc_macro-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":tempfile-3.21.0",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_middle-0.0.0",
    srcs = [
        "rust/compiler/rustc_middle/src/arena.rs",
        "rust/compiler/rustc_middle/src/dep_graph/dep_node.rs",
        "rust/compiler/rustc_middle/src/dep_graph/mod.rs",
        "rust/compiler/rustc_middle/src/error.rs",
        "rust/compiler/rustc_middle/src/hir/map.rs",
        "rust/compiler/rustc_middle/src/hir/mod.rs",
        "rust/compiler/rustc_middle/src/hir/nested_filter.rs",
        "rust/compiler/rustc_middle/src/hir/place.rs",
        "rust/compiler/rustc_middle/src/hooks/mod.rs",
        "rust/compiler/rustc_middle/src/infer/canonical.rs",
        "rust/compiler/rustc_middle/src/infer/mod.rs",
        "rust/compiler/rustc_middle/src/lib.rs",
        "rust/compiler/rustc_middle/src/lint.rs",
        "rust/compiler/rustc_middle/src/macros.rs",
        "rust/compiler/rustc_middle/src/metadata.rs",
        "rust/compiler/rustc_middle/src/middle/codegen_fn_attrs.rs",
        "rust/compiler/rustc_middle/src/middle/debugger_visualizer.rs",
        "rust/compiler/rustc_middle/src/middle/dependency_format.rs",
        "rust/compiler/rustc_middle/src/middle/exported_symbols.rs",
        "rust/compiler/rustc_middle/src/middle/lang_items.rs",
        "rust/compiler/rustc_middle/src/middle/mod.rs",
        "rust/compiler/rustc_middle/src/middle/privacy.rs",
        "rust/compiler/rustc_middle/src/middle/region.rs",
        "rust/compiler/rustc_middle/src/middle/resolve_bound_vars.rs",
        "rust/compiler/rustc_middle/src/middle/stability.rs",
        "rust/compiler/rustc_middle/src/mir/basic_blocks.rs",
        "rust/compiler/rustc_middle/src/mir/consts.rs",
        "rust/compiler/rustc_middle/src/mir/coverage.rs",
        "rust/compiler/rustc_middle/src/mir/generic_graph.rs",
        "rust/compiler/rustc_middle/src/mir/generic_graphviz.rs",
        "rust/compiler/rustc_middle/src/mir/graphviz.rs",
        "rust/compiler/rustc_middle/src/mir/interpret/allocation.rs",
        "rust/compiler/rustc_middle/src/mir/interpret/allocation/init_mask.rs",
        "rust/compiler/rustc_middle/src/mir/interpret/allocation/init_mask/tests.rs",
        "rust/compiler/rustc_middle/src/mir/interpret/allocation/provenance_map.rs",
        "rust/compiler/rustc_middle/src/mir/interpret/error.rs",
        "rust/compiler/rustc_middle/src/mir/interpret/mod.rs",
        "rust/compiler/rustc_middle/src/mir/interpret/pointer.rs",
        "rust/compiler/rustc_middle/src/mir/interpret/queries.rs",
        "rust/compiler/rustc_middle/src/mir/interpret/value.rs",
        "rust/compiler/rustc_middle/src/mir/mod.rs",
        "rust/compiler/rustc_middle/src/mir/mono.rs",
        "rust/compiler/rustc_middle/src/mir/pretty.rs",
        "rust/compiler/rustc_middle/src/mir/query.rs",
        "rust/compiler/rustc_middle/src/mir/statement.rs",
        "rust/compiler/rustc_middle/src/mir/syntax.rs",
        "rust/compiler/rustc_middle/src/mir/terminator.rs",
        "rust/compiler/rustc_middle/src/mir/traversal.rs",
        "rust/compiler/rustc_middle/src/mir/visit.rs",
        "rust/compiler/rustc_middle/src/query/arena_cached.rs",
        "rust/compiler/rustc_middle/src/query/erase.rs",
        "rust/compiler/rustc_middle/src/query/keys.rs",
        "rust/compiler/rustc_middle/src/query/mod.rs",
        "rust/compiler/rustc_middle/src/query/on_disk_cache.rs",
        "rust/compiler/rustc_middle/src/query/plumbing.rs",
        "rust/compiler/rustc_middle/src/tests.rs",
        "rust/compiler/rustc_middle/src/thir.rs",
        "rust/compiler/rustc_middle/src/thir/visit.rs",
        "rust/compiler/rustc_middle/src/traits/mod.rs",
        "rust/compiler/rustc_middle/src/traits/query.rs",
        "rust/compiler/rustc_middle/src/traits/select.rs",
        "rust/compiler/rustc_middle/src/traits/solve.rs",
        "rust/compiler/rustc_middle/src/traits/specialization_graph.rs",
        "rust/compiler/rustc_middle/src/traits/structural_impls.rs",
        "rust/compiler/rustc_middle/src/ty/abstract_const.rs",
        "rust/compiler/rustc_middle/src/ty/adjustment.rs",
        "rust/compiler/rustc_middle/src/ty/adt.rs",
        "rust/compiler/rustc_middle/src/ty/assoc.rs",
        "rust/compiler/rustc_middle/src/ty/cast.rs",
        "rust/compiler/rustc_middle/src/ty/closure.rs",
        "rust/compiler/rustc_middle/src/ty/codec.rs",
        "rust/compiler/rustc_middle/src/ty/consts.rs",
        "rust/compiler/rustc_middle/src/ty/consts/int.rs",
        "rust/compiler/rustc_middle/src/ty/consts/kind.rs",
        "rust/compiler/rustc_middle/src/ty/consts/valtree.rs",
        "rust/compiler/rustc_middle/src/ty/context.rs",
        "rust/compiler/rustc_middle/src/ty/context/tls.rs",
        "rust/compiler/rustc_middle/src/ty/diagnostics.rs",
        "rust/compiler/rustc_middle/src/ty/elaborate_impl.rs",
        "rust/compiler/rustc_middle/src/ty/erase_regions.rs",
        "rust/compiler/rustc_middle/src/ty/error.rs",
        "rust/compiler/rustc_middle/src/ty/fast_reject.rs",
        "rust/compiler/rustc_middle/src/ty/fold.rs",
        "rust/compiler/rustc_middle/src/ty/generic_args.rs",
        "rust/compiler/rustc_middle/src/ty/generics.rs",
        "rust/compiler/rustc_middle/src/ty/impls_ty.rs",
        "rust/compiler/rustc_middle/src/ty/inhabitedness/inhabited_predicate.rs",
        "rust/compiler/rustc_middle/src/ty/inhabitedness/mod.rs",
        "rust/compiler/rustc_middle/src/ty/instance.rs",
        "rust/compiler/rustc_middle/src/ty/intrinsic.rs",
        "rust/compiler/rustc_middle/src/ty/layout.rs",
        "rust/compiler/rustc_middle/src/ty/list.rs",
        "rust/compiler/rustc_middle/src/ty/mod.rs",
        "rust/compiler/rustc_middle/src/ty/normalize_erasing_regions.rs",
        "rust/compiler/rustc_middle/src/ty/opaque_types.rs",
        "rust/compiler/rustc_middle/src/ty/parameterized.rs",
        "rust/compiler/rustc_middle/src/ty/pattern.rs",
        "rust/compiler/rustc_middle/src/ty/predicate.rs",
        "rust/compiler/rustc_middle/src/ty/print/mod.rs",
        "rust/compiler/rustc_middle/src/ty/print/pretty.rs",
        "rust/compiler/rustc_middle/src/ty/region.rs",
        "rust/compiler/rustc_middle/src/ty/relate.rs",
        "rust/compiler/rustc_middle/src/ty/rvalue_scopes.rs",
        "rust/compiler/rustc_middle/src/ty/significant_drop_order.rs",
        "rust/compiler/rustc_middle/src/ty/structural_impls.rs",
        "rust/compiler/rustc_middle/src/ty/sty.rs",
        "rust/compiler/rustc_middle/src/ty/trait_def.rs",
        "rust/compiler/rustc_middle/src/ty/typeck_results.rs",
        "rust/compiler/rustc_middle/src/ty/util.rs",
        "rust/compiler/rustc_middle/src/ty/visit.rs",
        "rust/compiler/rustc_middle/src/ty/vtable.rs",
        "rust/compiler/rustc_middle/src/util/bug.rs",
        "rust/compiler/rustc_middle/src/util/mod.rs",
        "rust/compiler/rustc_middle/src/values.rs",
    ],
    crate = "rustc_middle",
    crate_root = "rust/compiler/rustc_middle/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":bitflags-2.9.3",
        ":either-1.15.0",
        ":gsgdt-0.1.2",
        ":polonius-engine-0.13.0",
        ":rustc_abi-0.0.0",
        ":rustc_apfloat-0.2.3+llvm-462a31f5a5ab",
        ":rustc_arena-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_ast_ir-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_error_messages-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_graphviz-0.0.0",
        ":rustc_hashes-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_hir_pretty-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_lint_defs-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_query_system-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":rustc_thread_pool-0.0.0",
        ":rustc_type_ir-0.0.0",
        ":smallvec-1.15.1",
        ":thin-vec-0.2.14",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_mir_build-0.0.0",
    srcs = [
        "rust/compiler/rustc_mir_build/src/builder/block.rs",
        "rust/compiler/rustc_mir_build/src/builder/cfg.rs",
        "rust/compiler/rustc_mir_build/src/builder/coverageinfo.rs",
        "rust/compiler/rustc_mir_build/src/builder/coverageinfo/mcdc.rs",
        "rust/compiler/rustc_mir_build/src/builder/custom/mod.rs",
        "rust/compiler/rustc_mir_build/src/builder/custom/parse.rs",
        "rust/compiler/rustc_mir_build/src/builder/custom/parse/instruction.rs",
        "rust/compiler/rustc_mir_build/src/builder/expr/as_constant.rs",
        "rust/compiler/rustc_mir_build/src/builder/expr/as_operand.rs",
        "rust/compiler/rustc_mir_build/src/builder/expr/as_place.rs",
        "rust/compiler/rustc_mir_build/src/builder/expr/as_rvalue.rs",
        "rust/compiler/rustc_mir_build/src/builder/expr/as_temp.rs",
        "rust/compiler/rustc_mir_build/src/builder/expr/category.rs",
        "rust/compiler/rustc_mir_build/src/builder/expr/into.rs",
        "rust/compiler/rustc_mir_build/src/builder/expr/mod.rs",
        "rust/compiler/rustc_mir_build/src/builder/expr/stmt.rs",
        "rust/compiler/rustc_mir_build/src/builder/matches/match_pair.rs",
        "rust/compiler/rustc_mir_build/src/builder/matches/mod.rs",
        "rust/compiler/rustc_mir_build/src/builder/matches/test.rs",
        "rust/compiler/rustc_mir_build/src/builder/matches/user_ty.rs",
        "rust/compiler/rustc_mir_build/src/builder/matches/util.rs",
        "rust/compiler/rustc_mir_build/src/builder/misc.rs",
        "rust/compiler/rustc_mir_build/src/builder/mod.rs",
        "rust/compiler/rustc_mir_build/src/builder/scope.rs",
        "rust/compiler/rustc_mir_build/src/check_tail_calls.rs",
        "rust/compiler/rustc_mir_build/src/check_unsafety.rs",
        "rust/compiler/rustc_mir_build/src/errors.rs",
        "rust/compiler/rustc_mir_build/src/lib.rs",
        "rust/compiler/rustc_mir_build/src/thir/constant.rs",
        "rust/compiler/rustc_mir_build/src/thir/cx/block.rs",
        "rust/compiler/rustc_mir_build/src/thir/cx/expr.rs",
        "rust/compiler/rustc_mir_build/src/thir/cx/mod.rs",
        "rust/compiler/rustc_mir_build/src/thir/mod.rs",
        "rust/compiler/rustc_mir_build/src/thir/pattern/check_match.rs",
        "rust/compiler/rustc_mir_build/src/thir/pattern/const_to_pat.rs",
        "rust/compiler/rustc_mir_build/src/thir/pattern/migration.rs",
        "rust/compiler/rustc_mir_build/src/thir/pattern/mod.rs",
        "rust/compiler/rustc_mir_build/src/thir/print.rs",
        "rust/compiler/rustc_mir_build/src/thir/util.rs",
    ],
    crate = "rustc_mir_build",
    crate_root = "rust/compiler/rustc_mir_build/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":itertools-0.12.1",
        ":rustc_abi-0.0.0",
        ":rustc_apfloat-0.2.3+llvm-462a31f5a5ab",
        ":rustc_arena-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_infer-0.0.0",
        ":rustc_lint-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_pattern_analysis-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_mir_dataflow-0.0.0",
    srcs = [
        "rust/compiler/rustc_mir_dataflow/src/debuginfo.rs",
        "rust/compiler/rustc_mir_dataflow/src/drop_flag_effects.rs",
        "rust/compiler/rustc_mir_dataflow/src/errors.rs",
        "rust/compiler/rustc_mir_dataflow/src/framework/cursor.rs",
        "rust/compiler/rustc_mir_dataflow/src/framework/direction.rs",
        "rust/compiler/rustc_mir_dataflow/src/framework/fmt.rs",
        "rust/compiler/rustc_mir_dataflow/src/framework/graphviz.rs",
        "rust/compiler/rustc_mir_dataflow/src/framework/lattice.rs",
        "rust/compiler/rustc_mir_dataflow/src/framework/mod.rs",
        "rust/compiler/rustc_mir_dataflow/src/framework/results.rs",
        "rust/compiler/rustc_mir_dataflow/src/framework/tests.rs",
        "rust/compiler/rustc_mir_dataflow/src/framework/visitor.rs",
        "rust/compiler/rustc_mir_dataflow/src/impls/borrowed_locals.rs",
        "rust/compiler/rustc_mir_dataflow/src/impls/initialized.rs",
        "rust/compiler/rustc_mir_dataflow/src/impls/liveness.rs",
        "rust/compiler/rustc_mir_dataflow/src/impls/mod.rs",
        "rust/compiler/rustc_mir_dataflow/src/impls/storage_liveness.rs",
        "rust/compiler/rustc_mir_dataflow/src/lib.rs",
        "rust/compiler/rustc_mir_dataflow/src/move_paths/abs_domain.rs",
        "rust/compiler/rustc_mir_dataflow/src/move_paths/builder.rs",
        "rust/compiler/rustc_mir_dataflow/src/move_paths/mod.rs",
        "rust/compiler/rustc_mir_dataflow/src/points.rs",
        "rust/compiler/rustc_mir_dataflow/src/rustc_peek.rs",
        "rust/compiler/rustc_mir_dataflow/src/un_derefer.rs",
        "rust/compiler/rustc_mir_dataflow/src/value_analysis.rs",
    ],
    crate = "rustc_mir_dataflow",
    crate_root = "rust/compiler/rustc_mir_dataflow/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":polonius-engine-0.13.0",
        ":regex-1.11.1",
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_graphviz-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_span-0.0.0",
        ":smallvec-1.15.1",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_mir_transform-0.0.0",
    srcs = [
        "rust/compiler/rustc_mir_transform/src/abort_unwinding_calls.rs",
        "rust/compiler/rustc_mir_transform/src/add_call_guards.rs",
        "rust/compiler/rustc_mir_transform/src/add_moves_for_packed_drops.rs",
        "rust/compiler/rustc_mir_transform/src/add_retag.rs",
        "rust/compiler/rustc_mir_transform/src/add_subtyping_projections.rs",
        "rust/compiler/rustc_mir_transform/src/check_alignment.rs",
        "rust/compiler/rustc_mir_transform/src/check_call_recursion.rs",
        "rust/compiler/rustc_mir_transform/src/check_const_item_mutation.rs",
        "rust/compiler/rustc_mir_transform/src/check_inline.rs",
        "rust/compiler/rustc_mir_transform/src/check_null.rs",
        "rust/compiler/rustc_mir_transform/src/check_packed_ref.rs",
        "rust/compiler/rustc_mir_transform/src/check_pointers.rs",
        "rust/compiler/rustc_mir_transform/src/cleanup_post_borrowck.rs",
        "rust/compiler/rustc_mir_transform/src/copy_prop.rs",
        "rust/compiler/rustc_mir_transform/src/coroutine.rs",
        "rust/compiler/rustc_mir_transform/src/coroutine/by_move_body.rs",
        "rust/compiler/rustc_mir_transform/src/coroutine/drop.rs",
        "rust/compiler/rustc_mir_transform/src/cost_checker.rs",
        "rust/compiler/rustc_mir_transform/src/coverage/counters.rs",
        "rust/compiler/rustc_mir_transform/src/coverage/counters/balanced_flow.rs",
        "rust/compiler/rustc_mir_transform/src/coverage/counters/node_flow.rs",
        "rust/compiler/rustc_mir_transform/src/coverage/counters/node_flow/tests.rs",
        "rust/compiler/rustc_mir_transform/src/coverage/counters/union_find.rs",
        "rust/compiler/rustc_mir_transform/src/coverage/counters/union_find/tests.rs",
        "rust/compiler/rustc_mir_transform/src/coverage/graph.rs",
        "rust/compiler/rustc_mir_transform/src/coverage/mappings.rs",
        "rust/compiler/rustc_mir_transform/src/coverage/mod.rs",
        "rust/compiler/rustc_mir_transform/src/coverage/query.rs",
        "rust/compiler/rustc_mir_transform/src/coverage/spans.rs",
        "rust/compiler/rustc_mir_transform/src/coverage/spans/from_mir.rs",
        "rust/compiler/rustc_mir_transform/src/coverage/tests.rs",
        "rust/compiler/rustc_mir_transform/src/coverage/unexpand.rs",
        "rust/compiler/rustc_mir_transform/src/cross_crate_inline.rs",
        "rust/compiler/rustc_mir_transform/src/ctfe_limit.rs",
        "rust/compiler/rustc_mir_transform/src/dataflow_const_prop.rs",
        "rust/compiler/rustc_mir_transform/src/dead_store_elimination.rs",
        "rust/compiler/rustc_mir_transform/src/deduce_param_attrs.rs",
        "rust/compiler/rustc_mir_transform/src/deref_separator.rs",
        "rust/compiler/rustc_mir_transform/src/dest_prop.rs",
        "rust/compiler/rustc_mir_transform/src/dump_mir.rs",
        "rust/compiler/rustc_mir_transform/src/early_otherwise_branch.rs",
        "rust/compiler/rustc_mir_transform/src/elaborate_box_derefs.rs",
        "rust/compiler/rustc_mir_transform/src/elaborate_drop.rs",
        "rust/compiler/rustc_mir_transform/src/elaborate_drops.rs",
        "rust/compiler/rustc_mir_transform/src/errors.rs",
        "rust/compiler/rustc_mir_transform/src/ffi_unwind_calls.rs",
        "rust/compiler/rustc_mir_transform/src/function_item_references.rs",
        "rust/compiler/rustc_mir_transform/src/gvn.rs",
        "rust/compiler/rustc_mir_transform/src/impossible_predicates.rs",
        "rust/compiler/rustc_mir_transform/src/inline.rs",
        "rust/compiler/rustc_mir_transform/src/inline/cycle.rs",
        "rust/compiler/rustc_mir_transform/src/instsimplify.rs",
        "rust/compiler/rustc_mir_transform/src/jump_threading.rs",
        "rust/compiler/rustc_mir_transform/src/known_panics_lint.rs",
        "rust/compiler/rustc_mir_transform/src/large_enums.rs",
        "rust/compiler/rustc_mir_transform/src/lib.rs",
        "rust/compiler/rustc_mir_transform/src/lint.rs",
        "rust/compiler/rustc_mir_transform/src/lint_tail_expr_drop_order.rs",
        "rust/compiler/rustc_mir_transform/src/lower_intrinsics.rs",
        "rust/compiler/rustc_mir_transform/src/lower_slice_len.rs",
        "rust/compiler/rustc_mir_transform/src/match_branches.rs",
        "rust/compiler/rustc_mir_transform/src/mentioned_items.rs",
        "rust/compiler/rustc_mir_transform/src/multiple_return_terminators.rs",
        "rust/compiler/rustc_mir_transform/src/nrvo.rs",
        "rust/compiler/rustc_mir_transform/src/pass_manager.rs",
        "rust/compiler/rustc_mir_transform/src/patch.rs",
        "rust/compiler/rustc_mir_transform/src/post_analysis_normalize.rs",
        "rust/compiler/rustc_mir_transform/src/post_drop_elaboration.rs",
        "rust/compiler/rustc_mir_transform/src/prettify.rs",
        "rust/compiler/rustc_mir_transform/src/promote_consts.rs",
        "rust/compiler/rustc_mir_transform/src/ref_prop.rs",
        "rust/compiler/rustc_mir_transform/src/remove_noop_landing_pads.rs",
        "rust/compiler/rustc_mir_transform/src/remove_place_mention.rs",
        "rust/compiler/rustc_mir_transform/src/remove_storage_markers.rs",
        "rust/compiler/rustc_mir_transform/src/remove_uninit_drops.rs",
        "rust/compiler/rustc_mir_transform/src/remove_unneeded_drops.rs",
        "rust/compiler/rustc_mir_transform/src/remove_zsts.rs",
        "rust/compiler/rustc_mir_transform/src/required_consts.rs",
        "rust/compiler/rustc_mir_transform/src/sanity_check.rs",
        "rust/compiler/rustc_mir_transform/src/shim.rs",
        "rust/compiler/rustc_mir_transform/src/shim/async_destructor_ctor.rs",
        "rust/compiler/rustc_mir_transform/src/simplify.rs",
        "rust/compiler/rustc_mir_transform/src/simplify_branches.rs",
        "rust/compiler/rustc_mir_transform/src/simplify_comparison_integral.rs",
        "rust/compiler/rustc_mir_transform/src/single_use_consts.rs",
        "rust/compiler/rustc_mir_transform/src/sroa.rs",
        "rust/compiler/rustc_mir_transform/src/ssa.rs",
        "rust/compiler/rustc_mir_transform/src/strip_debuginfo.rs",
        "rust/compiler/rustc_mir_transform/src/unreachable_enum_branching.rs",
        "rust/compiler/rustc_mir_transform/src/unreachable_prop.rs",
        "rust/compiler/rustc_mir_transform/src/validate.rs",
    ],
    crate = "rustc_mir_transform",
    crate_root = "rust/compiler/rustc_mir_transform/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":either-1.15.0",
        ":itertools-0.12.1",
        ":rustc_abi-0.0.0",
        ":rustc_arena-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_const_eval-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_infer-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_mir_build-0.0.0",
        ":rustc_mir_dataflow-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":smallvec-1.15.1",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_monomorphize-0.0.0",
    srcs = [
        "rust/compiler/rustc_monomorphize/src/collector.rs",
        "rust/compiler/rustc_monomorphize/src/errors.rs",
        "rust/compiler/rustc_monomorphize/src/lib.rs",
        "rust/compiler/rustc_monomorphize/src/mono_checks/abi_check.rs",
        "rust/compiler/rustc_monomorphize/src/mono_checks/mod.rs",
        "rust/compiler/rustc_monomorphize/src/mono_checks/move_check.rs",
        "rust/compiler/rustc_monomorphize/src/partitioning.rs",
        "rust/compiler/rustc_monomorphize/src/partitioning/autodiff.rs",
        "rust/compiler/rustc_monomorphize/src/util.rs",
    ],
    crate = "rustc_monomorphize",
    crate_root = "rust/compiler/rustc_monomorphize/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_symbol_mangling-0.0.0",
        ":rustc_target-0.0.0",
        ":serde-1.0.219",
        ":serde_json-1.0.143",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_next_trait_solver-0.0.0",
    srcs = [
        "rust/compiler/rustc_next_trait_solver/src/canonicalizer.rs",
        "rust/compiler/rustc_next_trait_solver/src/coherence.rs",
        "rust/compiler/rustc_next_trait_solver/src/delegate.rs",
        "rust/compiler/rustc_next_trait_solver/src/lib.rs",
        "rust/compiler/rustc_next_trait_solver/src/placeholder.rs",
        "rust/compiler/rustc_next_trait_solver/src/resolve.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/alias_relate.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/assembly/mod.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/assembly/structural_traits.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/effect_goals.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/eval_ctxt/canonical.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/eval_ctxt/mod.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/eval_ctxt/probe.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/inspect/build.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/inspect/mod.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/mod.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/normalizes_to/anon_const.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/normalizes_to/free_alias.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/normalizes_to/inherent.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/normalizes_to/mod.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/normalizes_to/opaque_types.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/project_goals.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/search_graph.rs",
        "rust/compiler/rustc_next_trait_solver/src/solve/trait_goals.rs",
    ],
    crate = "rustc_next_trait_solver",
    crate_root = "rust/compiler/rustc_next_trait_solver/src/lib.rs",
    edition = "2024",
    features = [
        "default",
        "nightly",
    ],
    visibility = [],
    deps = [
        ":derive-where-1.6.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_type_ir-0.0.0",
        ":rustc_type_ir_macros-0.0.0",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_parse-0.0.0",
    srcs = [
        "rust/compiler/rustc_parse/src/errors.rs",
        "rust/compiler/rustc_parse/src/lexer/diagnostics.rs",
        "rust/compiler/rustc_parse/src/lexer/mod.rs",
        "rust/compiler/rustc_parse/src/lexer/tokentrees.rs",
        "rust/compiler/rustc_parse/src/lexer/unescape_error_reporting.rs",
        "rust/compiler/rustc_parse/src/lexer/unicode_chars.rs",
        "rust/compiler/rustc_parse/src/lib.rs",
        "rust/compiler/rustc_parse/src/parser/asm.rs",
        "rust/compiler/rustc_parse/src/parser/attr.rs",
        "rust/compiler/rustc_parse/src/parser/attr_wrapper.rs",
        "rust/compiler/rustc_parse/src/parser/diagnostics.rs",
        "rust/compiler/rustc_parse/src/parser/expr.rs",
        "rust/compiler/rustc_parse/src/parser/generics.rs",
        "rust/compiler/rustc_parse/src/parser/item.rs",
        "rust/compiler/rustc_parse/src/parser/mod.rs",
        "rust/compiler/rustc_parse/src/parser/nonterminal.rs",
        "rust/compiler/rustc_parse/src/parser/pat.rs",
        "rust/compiler/rustc_parse/src/parser/path.rs",
        "rust/compiler/rustc_parse/src/parser/stmt.rs",
        "rust/compiler/rustc_parse/src/parser/tests.rs",
        "rust/compiler/rustc_parse/src/parser/token_type.rs",
        "rust/compiler/rustc_parse/src/parser/tokenstream/tests.rs",
        "rust/compiler/rustc_parse/src/parser/ty.rs",
        "rust/compiler/rustc_parse/src/validate_attr.rs",
    ],
    crate = "rustc_parse",
    crate_root = "rust/compiler/rustc_parse/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":bitflags-2.9.3",
        ":rustc-literal-escaper-0.0.2",
        ":rustc_ast-0.0.0",
        ":rustc_ast_pretty-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_lexer-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":thin-vec-0.2.14",
        ":tracing-0.1.37",
        ":unicode-normalization-0.1.24",
        ":unicode-width-0.2.1",
    ],
)

rust_bootstrap_library(
    name = "rustc_parse_format-0.0.0",
    srcs = [
        "rust/compiler/rustc_parse_format/src/lib.rs",
        "rust/compiler/rustc_parse_format/src/tests.rs",
    ],
    crate = "rustc_parse_format",
    crate_root = "rust/compiler/rustc_parse_format/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rustc-literal-escaper-0.0.2",
        ":rustc_lexer-0.0.0",
    ],
)

rust_bootstrap_library(
    name = "rustc_passes-0.0.0",
    srcs = [
        "rust/compiler/rustc_passes/src/abi_test.rs",
        "rust/compiler/rustc_passes/src/check_attr.rs",
        "rust/compiler/rustc_passes/src/check_export.rs",
        "rust/compiler/rustc_passes/src/dead.rs",
        "rust/compiler/rustc_passes/src/debugger_visualizer.rs",
        "rust/compiler/rustc_passes/src/diagnostic_items.rs",
        "rust/compiler/rustc_passes/src/entry.rs",
        "rust/compiler/rustc_passes/src/errors.rs",
        "rust/compiler/rustc_passes/src/hir_id_validator.rs",
        "rust/compiler/rustc_passes/src/input_stats.rs",
        "rust/compiler/rustc_passes/src/lang_items.rs",
        "rust/compiler/rustc_passes/src/layout_test.rs",
        "rust/compiler/rustc_passes/src/lib.rs",
        "rust/compiler/rustc_passes/src/lib_features.rs",
        "rust/compiler/rustc_passes/src/liveness.rs",
        "rust/compiler/rustc_passes/src/liveness/rwu_table.rs",
        "rust/compiler/rustc_passes/src/reachable.rs",
        "rust/compiler/rustc_passes/src/stability.rs",
        "rust/compiler/rustc_passes/src/upvars.rs",
        "rust/compiler/rustc_passes/src/weak_lang_items.rs",
    ],
    crate = "rustc_passes",
    crate_root = "rust/compiler/rustc_passes/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_ast_lowering-0.0.0",
        ":rustc_ast_pretty-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_expand-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_privacy-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_pattern_analysis-0.0.0",
    srcs = [
        "rust/compiler/rustc_pattern_analysis/src/constructor.rs",
        "rust/compiler/rustc_pattern_analysis/src/errors.rs",
        "rust/compiler/rustc_pattern_analysis/src/lib.rs",
        "rust/compiler/rustc_pattern_analysis/src/lints.rs",
        "rust/compiler/rustc_pattern_analysis/src/pat.rs",
        "rust/compiler/rustc_pattern_analysis/src/pat_column.rs",
        "rust/compiler/rustc_pattern_analysis/src/rustc.rs",
        "rust/compiler/rustc_pattern_analysis/src/rustc/print.rs",
        "rust/compiler/rustc_pattern_analysis/src/usefulness.rs",
    ],
    crate = "rustc_pattern_analysis",
    crate_root = "rust/compiler/rustc_pattern_analysis/src/lib.rs",
    edition = "2024",
    features = [
        "default",
        "rustc",
    ],
    visibility = [],
    deps = [
        ":rustc-hash-2.1.1",
        ":rustc_abi-0.0.0",
        ":rustc_apfloat-0.2.3+llvm-462a31f5a5ab",
        ":rustc_arena-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":smallvec-1.15.1",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_privacy-0.0.0",
    srcs = [
        "rust/compiler/rustc_privacy/src/errors.rs",
        "rust/compiler/rustc_privacy/src/lib.rs",
    ],
    crate = "rustc_privacy",
    crate_root = "rust/compiler/rustc_privacy/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rustc_ast-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_ty_utils-0.0.0",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_proc_macro-0.0.0",
    srcs = [
        "rust/library/proc_macro/src/bridge/arena.rs",
        "rust/library/proc_macro/src/bridge/buffer.rs",
        "rust/library/proc_macro/src/bridge/client.rs",
        "rust/library/proc_macro/src/bridge/closure.rs",
        "rust/library/proc_macro/src/bridge/fxhash.rs",
        "rust/library/proc_macro/src/bridge/handle.rs",
        "rust/library/proc_macro/src/bridge/mod.rs",
        "rust/library/proc_macro/src/bridge/rpc.rs",
        "rust/library/proc_macro/src/bridge/selfless_reify.rs",
        "rust/library/proc_macro/src/bridge/server.rs",
        "rust/library/proc_macro/src/bridge/symbol.rs",
        "rust/library/proc_macro/src/diagnostic.rs",
        "rust/library/proc_macro/src/escape.rs",
        "rust/library/proc_macro/src/lib.rs",
        "rust/library/proc_macro/src/quote.rs",
        "rust/library/proc_macro/src/to_tokens.rs",
    ],
    crate = "rustc_proc_macro",
    crate_root = "rust/library/proc_macro/src/lib.rs",
    edition = "2024",
    target_compatible_with = ["//constraints:compiler"],
    visibility = [],
    deps = [":rustc-literal-escaper-0.0.2"],
)

rust_bootstrap_library(
    name = "rustc_query_impl-0.0.0",
    srcs = [
        "rust/compiler/rustc_query_impl/src/lib.rs",
        "rust/compiler/rustc_query_impl/src/plumbing.rs",
        "rust/compiler/rustc_query_impl/src/profiling_support.rs",
    ],
    crate = "rustc_query_impl",
    crate_root = "rust/compiler/rustc_query_impl/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":measureme-12.0.3",
        ":rustc_data_structures-0.0.0",
        ":rustc_hashes-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_query_system-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_query_system-0.0.0",
    srcs = [
        "rust/compiler/rustc_query_system/src/cache.rs",
        "rust/compiler/rustc_query_system/src/dep_graph/debug.rs",
        "rust/compiler/rustc_query_system/src/dep_graph/dep_node.rs",
        "rust/compiler/rustc_query_system/src/dep_graph/edges.rs",
        "rust/compiler/rustc_query_system/src/dep_graph/graph.rs",
        "rust/compiler/rustc_query_system/src/dep_graph/mod.rs",
        "rust/compiler/rustc_query_system/src/dep_graph/query.rs",
        "rust/compiler/rustc_query_system/src/dep_graph/serialized.rs",
        "rust/compiler/rustc_query_system/src/error.rs",
        "rust/compiler/rustc_query_system/src/ich/hcx.rs",
        "rust/compiler/rustc_query_system/src/ich/impls_syntax.rs",
        "rust/compiler/rustc_query_system/src/ich/mod.rs",
        "rust/compiler/rustc_query_system/src/lib.rs",
        "rust/compiler/rustc_query_system/src/query/caches.rs",
        "rust/compiler/rustc_query_system/src/query/config.rs",
        "rust/compiler/rustc_query_system/src/query/job.rs",
        "rust/compiler/rustc_query_system/src/query/mod.rs",
        "rust/compiler/rustc_query_system/src/query/plumbing.rs",
        "rust/compiler/rustc_query_system/src/values.rs",
    ],
    crate = "rustc_query_system",
    crate_root = "rust/compiler/rustc_query_system/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":hashbrown-0.15.5",
        ":parking_lot-0.12.4",
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hashes-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_thread_pool-0.0.0",
        ":smallvec-1.15.1",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_resolve-0.0.0",
    srcs = [
        "rust/compiler/rustc_resolve/src/build_reduced_graph.rs",
        "rust/compiler/rustc_resolve/src/check_unused.rs",
        "rust/compiler/rustc_resolve/src/def_collector.rs",
        "rust/compiler/rustc_resolve/src/diagnostics.rs",
        "rust/compiler/rustc_resolve/src/effective_visibilities.rs",
        "rust/compiler/rustc_resolve/src/errors.rs",
        "rust/compiler/rustc_resolve/src/ident.rs",
        "rust/compiler/rustc_resolve/src/imports.rs",
        "rust/compiler/rustc_resolve/src/late.rs",
        "rust/compiler/rustc_resolve/src/late/diagnostics.rs",
        "rust/compiler/rustc_resolve/src/lib.rs",
        "rust/compiler/rustc_resolve/src/macros.rs",
        "rust/compiler/rustc_resolve/src/rustdoc.rs",
        "rust/compiler/rustc_resolve/src/rustdoc/tests.rs",
    ],
    crate = "rustc_resolve",
    crate_root = "rust/compiler/rustc_resolve/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":bitflags-2.9.3",
        ":itertools-0.12.1",
        ":pulldown-cmark-0.11.3",
        ":rustc_arena-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_ast_pretty-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_attr_parsing-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_expand-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_metadata-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_query_system-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":smallvec-1.15.1",
        ":thin-vec-0.2.14",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_sanitizers-0.0.0",
    srcs = [
        "rust/compiler/rustc_sanitizers/src/cfi/mod.rs",
        "rust/compiler/rustc_sanitizers/src/cfi/typeid/itanium_cxx_abi/encode.rs",
        "rust/compiler/rustc_sanitizers/src/cfi/typeid/itanium_cxx_abi/mod.rs",
        "rust/compiler/rustc_sanitizers/src/cfi/typeid/itanium_cxx_abi/transform.rs",
        "rust/compiler/rustc_sanitizers/src/cfi/typeid/mod.rs",
        "rust/compiler/rustc_sanitizers/src/kcfi/mod.rs",
        "rust/compiler/rustc_sanitizers/src/kcfi/typeid/mod.rs",
        "rust/compiler/rustc_sanitizers/src/lib.rs",
    ],
    crate = "rustc_sanitizers",
    crate_root = "rust/compiler/rustc_sanitizers/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":bitflags-2.9.3",
        ":rustc_abi-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":tracing-0.1.37",
        ":twox-hash-1.6.3",
    ],
)

rust_bootstrap_library(
    name = "rustc_serialize-0.0.0",
    srcs = [
        "rust/compiler/rustc_serialize/src/int_overflow.rs",
        "rust/compiler/rustc_serialize/src/leb128.rs",
        "rust/compiler/rustc_serialize/src/leb128/tests.rs",
        "rust/compiler/rustc_serialize/src/lib.rs",
        "rust/compiler/rustc_serialize/src/opaque.rs",
        "rust/compiler/rustc_serialize/src/opaque/mem_encoder.rs",
        "rust/compiler/rustc_serialize/src/opaque/tests.rs",
        "rust/compiler/rustc_serialize/src/serialize.rs",
    ],
    crate = "rustc_serialize",
    crate_root = "rust/compiler/rustc_serialize/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":indexmap-2.11.0",
        ":rustc_hashes-0.0.0",
        ":smallvec-1.15.1",
        ":thin-vec-0.2.14",
    ],
)

rust_bootstrap_library(
    name = "rustc_session-0.0.0",
    srcs = [
        "rust/compiler/rustc_session/src/code_stats.rs",
        "rust/compiler/rustc_session/src/config.rs",
        "rust/compiler/rustc_session/src/config/cfg.rs",
        "rust/compiler/rustc_session/src/config/externs.rs",
        "rust/compiler/rustc_session/src/config/externs/tests.rs",
        "rust/compiler/rustc_session/src/config/native_libs.rs",
        "rust/compiler/rustc_session/src/config/native_libs/tests.rs",
        "rust/compiler/rustc_session/src/config/sigpipe.rs",
        "rust/compiler/rustc_session/src/cstore.rs",
        "rust/compiler/rustc_session/src/errors.rs",
        "rust/compiler/rustc_session/src/filesearch.rs",
        "rust/compiler/rustc_session/src/lib.rs",
        "rust/compiler/rustc_session/src/options.rs",
        "rust/compiler/rustc_session/src/output.rs",
        "rust/compiler/rustc_session/src/parse.rs",
        "rust/compiler/rustc_session/src/search_paths.rs",
        "rust/compiler/rustc_session/src/session.rs",
        "rust/compiler/rustc_session/src/utils.rs",
    ],
    crate = "rustc_session",
    crate_root = "rust/compiler/rustc_session/src/lib.rs",
    edition = "2024",
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-riscv64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "windows-gnu-compiler": dict(
            deps = [":windows-0.61.3"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":windows-0.61.3"],
        ),
    },
    visibility = [],
    deps = [
        ":bitflags-2.9.3",
        ":getopts-0.2.23",
        ":rand-0.9.2",
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_fs_util-0.0.0",
        ":rustc_hashes-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_lint_defs-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":smallvec-1.15.1",
        ":termize-0.1.1",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_smir-0.0.0",
    srcs = [
        "rust/compiler/rustc_smir/src/lib.rs",
        "rust/compiler/rustc_smir/src/rustc_internal/internal.rs",
        "rust/compiler/rustc_smir/src/rustc_internal/mod.rs",
        "rust/compiler/rustc_smir/src/rustc_internal/pretty.rs",
        "rust/compiler/rustc_smir/src/rustc_smir/alloc.rs",
        "rust/compiler/rustc_smir/src/rustc_smir/builder.rs",
        "rust/compiler/rustc_smir/src/rustc_smir/context.rs",
        "rust/compiler/rustc_smir/src/rustc_smir/convert/abi.rs",
        "rust/compiler/rustc_smir/src/rustc_smir/convert/error.rs",
        "rust/compiler/rustc_smir/src/rustc_smir/convert/mir.rs",
        "rust/compiler/rustc_smir/src/rustc_smir/convert/mod.rs",
        "rust/compiler/rustc_smir/src/rustc_smir/convert/ty.rs",
        "rust/compiler/rustc_smir/src/rustc_smir/mod.rs",
        "rust/compiler/rustc_smir/src/stable_mir/abi.rs",
        "rust/compiler/rustc_smir/src/stable_mir/compiler_interface.rs",
        "rust/compiler/rustc_smir/src/stable_mir/crate_def.rs",
        "rust/compiler/rustc_smir/src/stable_mir/error.rs",
        "rust/compiler/rustc_smir/src/stable_mir/mir.rs",
        "rust/compiler/rustc_smir/src/stable_mir/mir/alloc.rs",
        "rust/compiler/rustc_smir/src/stable_mir/mir/body.rs",
        "rust/compiler/rustc_smir/src/stable_mir/mir/mono.rs",
        "rust/compiler/rustc_smir/src/stable_mir/mir/pretty.rs",
        "rust/compiler/rustc_smir/src/stable_mir/mir/visit.rs",
        "rust/compiler/rustc_smir/src/stable_mir/mod.rs",
        "rust/compiler/rustc_smir/src/stable_mir/target.rs",
        "rust/compiler/rustc_smir/src/stable_mir/ty.rs",
        "rust/compiler/rustc_smir/src/stable_mir/visitor.rs",
    ],
    crate = "rustc_smir",
    crate_root = "rust/compiler/rustc_smir/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rustc_abi-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_hir_pretty-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":scoped-tls-1.0.1",
        ":serde-1.0.219",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_span-0.0.0",
    srcs = [
        "rust/compiler/rustc_span/src/analyze_source_file.rs",
        "rust/compiler/rustc_span/src/analyze_source_file/tests.rs",
        "rust/compiler/rustc_span/src/caching_source_map_view.rs",
        "rust/compiler/rustc_span/src/def_id.rs",
        "rust/compiler/rustc_span/src/edit_distance.rs",
        "rust/compiler/rustc_span/src/edit_distance/tests.rs",
        "rust/compiler/rustc_span/src/edition.rs",
        "rust/compiler/rustc_span/src/fatal_error.rs",
        "rust/compiler/rustc_span/src/hygiene.rs",
        "rust/compiler/rustc_span/src/lib.rs",
        "rust/compiler/rustc_span/src/profiling.rs",
        "rust/compiler/rustc_span/src/source_map.rs",
        "rust/compiler/rustc_span/src/source_map/tests.rs",
        "rust/compiler/rustc_span/src/span_encoding.rs",
        "rust/compiler/rustc_span/src/symbol.rs",
        "rust/compiler/rustc_span/src/symbol/tests.rs",
        "rust/compiler/rustc_span/src/tests.rs",
    ],
    crate = "rustc_span",
    crate_root = "rust/compiler/rustc_span/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":blake3-1.8.2",
        ":derive-where-1.6.0",
        ":indexmap-2.11.0",
        ":itoa-1.0.15",
        ":md-5-0.10.6",
        ":rustc_arena-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_hashes-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_serialize-0.0.0",
        ":scoped-tls-1.0.1",
        ":sha1-0.10.6",
        ":sha2-0.10.9",
        ":tracing-0.1.37",
        ":unicode-width-0.2.1",
    ],
)

rust_bootstrap_library(
    name = "rustc_symbol_mangling-0.0.0",
    srcs = [
        "rust/compiler/rustc_symbol_mangling/src/errors.rs",
        "rust/compiler/rustc_symbol_mangling/src/export.rs",
        "rust/compiler/rustc_symbol_mangling/src/hashed.rs",
        "rust/compiler/rustc_symbol_mangling/src/legacy.rs",
        "rust/compiler/rustc_symbol_mangling/src/lib.rs",
        "rust/compiler/rustc_symbol_mangling/src/test.rs",
        "rust/compiler/rustc_symbol_mangling/src/v0.rs",
    ],
    crate = "rustc_symbol_mangling",
    crate_root = "rust/compiler/rustc_symbol_mangling/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":punycode-0.4.1",
        ":rustc-demangle-0.1.26",
        ":rustc_abi-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_hashes-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_target-0.0.0",
    srcs = [
        "rust/compiler/rustc_target/src/asm/aarch64.rs",
        "rust/compiler/rustc_target/src/asm/arm.rs",
        "rust/compiler/rustc_target/src/asm/avr.rs",
        "rust/compiler/rustc_target/src/asm/bpf.rs",
        "rust/compiler/rustc_target/src/asm/csky.rs",
        "rust/compiler/rustc_target/src/asm/hexagon.rs",
        "rust/compiler/rustc_target/src/asm/loongarch.rs",
        "rust/compiler/rustc_target/src/asm/m68k.rs",
        "rust/compiler/rustc_target/src/asm/mips.rs",
        "rust/compiler/rustc_target/src/asm/mod.rs",
        "rust/compiler/rustc_target/src/asm/msp430.rs",
        "rust/compiler/rustc_target/src/asm/nvptx.rs",
        "rust/compiler/rustc_target/src/asm/powerpc.rs",
        "rust/compiler/rustc_target/src/asm/riscv.rs",
        "rust/compiler/rustc_target/src/asm/s390x.rs",
        "rust/compiler/rustc_target/src/asm/sparc.rs",
        "rust/compiler/rustc_target/src/asm/spirv.rs",
        "rust/compiler/rustc_target/src/asm/wasm.rs",
        "rust/compiler/rustc_target/src/asm/x86.rs",
        "rust/compiler/rustc_target/src/callconv/aarch64.rs",
        "rust/compiler/rustc_target/src/callconv/amdgpu.rs",
        "rust/compiler/rustc_target/src/callconv/arm.rs",
        "rust/compiler/rustc_target/src/callconv/avr.rs",
        "rust/compiler/rustc_target/src/callconv/bpf.rs",
        "rust/compiler/rustc_target/src/callconv/csky.rs",
        "rust/compiler/rustc_target/src/callconv/hexagon.rs",
        "rust/compiler/rustc_target/src/callconv/loongarch.rs",
        "rust/compiler/rustc_target/src/callconv/m68k.rs",
        "rust/compiler/rustc_target/src/callconv/mips.rs",
        "rust/compiler/rustc_target/src/callconv/mips64.rs",
        "rust/compiler/rustc_target/src/callconv/mod.rs",
        "rust/compiler/rustc_target/src/callconv/msp430.rs",
        "rust/compiler/rustc_target/src/callconv/nvptx64.rs",
        "rust/compiler/rustc_target/src/callconv/powerpc.rs",
        "rust/compiler/rustc_target/src/callconv/powerpc64.rs",
        "rust/compiler/rustc_target/src/callconv/riscv.rs",
        "rust/compiler/rustc_target/src/callconv/s390x.rs",
        "rust/compiler/rustc_target/src/callconv/sparc.rs",
        "rust/compiler/rustc_target/src/callconv/sparc64.rs",
        "rust/compiler/rustc_target/src/callconv/wasm.rs",
        "rust/compiler/rustc_target/src/callconv/x86.rs",
        "rust/compiler/rustc_target/src/callconv/x86_64.rs",
        "rust/compiler/rustc_target/src/callconv/x86_win32.rs",
        "rust/compiler/rustc_target/src/callconv/x86_win64.rs",
        "rust/compiler/rustc_target/src/callconv/xtensa.rs",
        "rust/compiler/rustc_target/src/json.rs",
        "rust/compiler/rustc_target/src/lib.rs",
        "rust/compiler/rustc_target/src/spec/abi_map.rs",
        "rust/compiler/rustc_target/src/spec/base/aix.rs",
        "rust/compiler/rustc_target/src/spec/base/android.rs",
        "rust/compiler/rustc_target/src/spec/base/apple/mod.rs",
        "rust/compiler/rustc_target/src/spec/base/apple/tests.rs",
        "rust/compiler/rustc_target/src/spec/base/avr.rs",
        "rust/compiler/rustc_target/src/spec/base/bpf.rs",
        "rust/compiler/rustc_target/src/spec/base/cygwin.rs",
        "rust/compiler/rustc_target/src/spec/base/dragonfly.rs",
        "rust/compiler/rustc_target/src/spec/base/freebsd.rs",
        "rust/compiler/rustc_target/src/spec/base/fuchsia.rs",
        "rust/compiler/rustc_target/src/spec/base/haiku.rs",
        "rust/compiler/rustc_target/src/spec/base/hermit.rs",
        "rust/compiler/rustc_target/src/spec/base/hurd.rs",
        "rust/compiler/rustc_target/src/spec/base/hurd_gnu.rs",
        "rust/compiler/rustc_target/src/spec/base/illumos.rs",
        "rust/compiler/rustc_target/src/spec/base/l4re.rs",
        "rust/compiler/rustc_target/src/spec/base/linux.rs",
        "rust/compiler/rustc_target/src/spec/base/linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/base/linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/base/linux_ohos.rs",
        "rust/compiler/rustc_target/src/spec/base/linux_uclibc.rs",
        "rust/compiler/rustc_target/src/spec/base/linux_wasm.rs",
        "rust/compiler/rustc_target/src/spec/base/lynxos178.rs",
        "rust/compiler/rustc_target/src/spec/base/mod.rs",
        "rust/compiler/rustc_target/src/spec/base/msvc.rs",
        "rust/compiler/rustc_target/src/spec/base/netbsd.rs",
        "rust/compiler/rustc_target/src/spec/base/nto_qnx.rs",
        "rust/compiler/rustc_target/src/spec/base/openbsd.rs",
        "rust/compiler/rustc_target/src/spec/base/redox.rs",
        "rust/compiler/rustc_target/src/spec/base/solaris.rs",
        "rust/compiler/rustc_target/src/spec/base/solid.rs",
        "rust/compiler/rustc_target/src/spec/base/teeos.rs",
        "rust/compiler/rustc_target/src/spec/base/thumb.rs",
        "rust/compiler/rustc_target/src/spec/base/uefi_msvc.rs",
        "rust/compiler/rustc_target/src/spec/base/unikraft_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/base/vxworks.rs",
        "rust/compiler/rustc_target/src/spec/base/wasm.rs",
        "rust/compiler/rustc_target/src/spec/base/windows_gnu.rs",
        "rust/compiler/rustc_target/src/spec/base/windows_gnullvm.rs",
        "rust/compiler/rustc_target/src/spec/base/windows_msvc.rs",
        "rust/compiler/rustc_target/src/spec/base/windows_uwp_gnu.rs",
        "rust/compiler/rustc_target/src/spec/base/windows_uwp_msvc.rs",
        "rust/compiler/rustc_target/src/spec/base/xtensa.rs",
        "rust/compiler/rustc_target/src/spec/crt_objects.rs",
        "rust/compiler/rustc_target/src/spec/json.rs",
        "rust/compiler/rustc_target/src/spec/mod.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_apple_darwin.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_apple_ios.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_apple_ios_macabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_apple_ios_sim.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_apple_tvos.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_apple_tvos_sim.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_apple_visionos.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_apple_visionos_sim.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_apple_watchos.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_apple_watchos_sim.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_be_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_be_unknown_linux_gnu_ilp32.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_be_unknown_netbsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_kmc_solid_asp3.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_linux_android.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_nintendo_switch_freestanding.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_nintendo_switch_freestanding_linker_script.ld",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_pc_windows_gnullvm.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_pc_windows_msvc.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_freebsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_fuchsia.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_hermit.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_illumos.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_linux_gnu_ilp32.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_linux_ohos.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_netbsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_none.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_none_softfloat.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_nto_qnx700.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_nto_qnx710.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_nto_qnx710_iosock.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_nto_qnx800.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_nuttx.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_openbsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_redox.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_teeos.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_trusty.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_unknown_uefi.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_uwp_windows_msvc.rs",
        "rust/compiler/rustc_target/src/spec/targets/aarch64_wrs_vxworks.rs",
        "rust/compiler/rustc_target/src/spec/targets/amdgcn_amd_amdhsa.rs",
        "rust/compiler/rustc_target/src/spec/targets/arm64_32_apple_watchos.rs",
        "rust/compiler/rustc_target/src/spec/targets/arm64e_apple_darwin.rs",
        "rust/compiler/rustc_target/src/spec/targets/arm64e_apple_ios.rs",
        "rust/compiler/rustc_target/src/spec/targets/arm64e_apple_tvos.rs",
        "rust/compiler/rustc_target/src/spec/targets/arm64ec_pc_windows_msvc.rs",
        "rust/compiler/rustc_target/src/spec/targets/arm_linux_androideabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/arm_unknown_linux_gnueabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/arm_unknown_linux_gnueabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/arm_unknown_linux_musleabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/arm_unknown_linux_musleabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/armeb_unknown_linux_gnueabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/armebv7r_none_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/armebv7r_none_eabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv4t_none_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv4t_unknown_linux_gnueabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv5te_none_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv5te_unknown_linux_gnueabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv5te_unknown_linux_musleabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv5te_unknown_linux_uclibceabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv6_unknown_freebsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv6_unknown_netbsd_eabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv6k_nintendo_3ds.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7_linux_androideabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7_rtems_eabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7_sony_vita_newlibeabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7_unknown_freebsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7_unknown_linux_gnueabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7_unknown_linux_gnueabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7_unknown_linux_musleabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7_unknown_linux_musleabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7_unknown_linux_ohos.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7_unknown_linux_uclibceabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7_unknown_linux_uclibceabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7_unknown_netbsd_eabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7_unknown_trusty.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7_wrs_vxworks_eabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7a_kmc_solid_asp3_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7a_kmc_solid_asp3_eabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7a_none_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7a_none_eabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7a_nuttx_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7a_nuttx_eabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7k_apple_watchos.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7r_none_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7r_none_eabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv7s_apple_ios.rs",
        "rust/compiler/rustc_target/src/spec/targets/armv8r_none_eabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/avr_none.rs",
        "rust/compiler/rustc_target/src/spec/targets/bpfeb_unknown_none.rs",
        "rust/compiler/rustc_target/src/spec/targets/bpfel_unknown_none.rs",
        "rust/compiler/rustc_target/src/spec/targets/csky_unknown_linux_gnuabiv2.rs",
        "rust/compiler/rustc_target/src/spec/targets/csky_unknown_linux_gnuabiv2hf.rs",
        "rust/compiler/rustc_target/src/spec/targets/hexagon_unknown_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/hexagon_unknown_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/i386_apple_ios.rs",
        "rust/compiler/rustc_target/src/spec/targets/i586_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/i586_unknown_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/i586_unknown_netbsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/i586_unknown_redox.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_apple_darwin.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_linux_android.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_pc_nto_qnx700.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_pc_windows_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_pc_windows_gnullvm.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_pc_windows_msvc.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_unknown_freebsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_unknown_haiku.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_unknown_hurd_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_unknown_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_unknown_netbsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_unknown_openbsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_unknown_uefi.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_uwp_windows_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_uwp_windows_msvc.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_win7_windows_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_win7_windows_msvc.rs",
        "rust/compiler/rustc_target/src/spec/targets/i686_wrs_vxworks.rs",
        "rust/compiler/rustc_target/src/spec/targets/loongarch32_unknown_none.rs",
        "rust/compiler/rustc_target/src/spec/targets/loongarch32_unknown_none_softfloat.rs",
        "rust/compiler/rustc_target/src/spec/targets/loongarch64_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/loongarch64_unknown_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/loongarch64_unknown_linux_ohos.rs",
        "rust/compiler/rustc_target/src/spec/targets/loongarch64_unknown_none.rs",
        "rust/compiler/rustc_target/src/spec/targets/loongarch64_unknown_none_softfloat.rs",
        "rust/compiler/rustc_target/src/spec/targets/m68k_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/m68k_unknown_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/mips64_openwrt_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/mips64_unknown_linux_gnuabi64.rs",
        "rust/compiler/rustc_target/src/spec/targets/mips64_unknown_linux_muslabi64.rs",
        "rust/compiler/rustc_target/src/spec/targets/mips64el_unknown_linux_gnuabi64.rs",
        "rust/compiler/rustc_target/src/spec/targets/mips64el_unknown_linux_muslabi64.rs",
        "rust/compiler/rustc_target/src/spec/targets/mips_mti_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/mips_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/mips_unknown_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/mips_unknown_linux_uclibc.rs",
        "rust/compiler/rustc_target/src/spec/targets/mipsel_mti_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/mipsel_sony_psp.rs",
        "rust/compiler/rustc_target/src/spec/targets/mipsel_sony_psp_linker_script.ld",
        "rust/compiler/rustc_target/src/spec/targets/mipsel_sony_psx.rs",
        "rust/compiler/rustc_target/src/spec/targets/mipsel_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/mipsel_unknown_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/mipsel_unknown_linux_uclibc.rs",
        "rust/compiler/rustc_target/src/spec/targets/mipsel_unknown_netbsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/mipsel_unknown_none.rs",
        "rust/compiler/rustc_target/src/spec/targets/mipsisa32r6_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/mipsisa32r6el_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/mipsisa64r6_unknown_linux_gnuabi64.rs",
        "rust/compiler/rustc_target/src/spec/targets/mipsisa64r6el_unknown_linux_gnuabi64.rs",
        "rust/compiler/rustc_target/src/spec/targets/msp430_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/nvptx64_nvidia_cuda.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc64_ibm_aix.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc64_unknown_freebsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc64_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc64_unknown_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc64_unknown_openbsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc64_wrs_vxworks.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc64le_unknown_freebsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc64le_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc64le_unknown_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc_unknown_freebsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc_unknown_linux_gnuspe.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc_unknown_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc_unknown_linux_muslspe.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc_unknown_netbsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc_unknown_openbsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc_wrs_vxworks.rs",
        "rust/compiler/rustc_target/src/spec/targets/powerpc_wrs_vxworks_spe.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32_wrs_vxworks.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32e_unknown_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32em_unknown_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32emc_unknown_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32gc_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32gc_unknown_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32i_unknown_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32im_risc0_zkvm_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32im_unknown_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32ima_unknown_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32imac_esp_espidf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32imac_unknown_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32imac_unknown_nuttx_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32imac_unknown_xous_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32imafc_esp_espidf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32imafc_unknown_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32imafc_unknown_nuttx_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32imc_esp_espidf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32imc_unknown_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv32imc_unknown_nuttx_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv64_linux_android.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv64_wrs_vxworks.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv64gc_unknown_freebsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv64gc_unknown_fuchsia.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv64gc_unknown_hermit.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv64gc_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv64gc_unknown_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv64gc_unknown_netbsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv64gc_unknown_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv64gc_unknown_nuttx_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv64gc_unknown_openbsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv64imac_unknown_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/riscv64imac_unknown_nuttx_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/s390x_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/s390x_unknown_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/sparc64_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/sparc64_unknown_netbsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/sparc64_unknown_openbsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/sparc_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/sparc_unknown_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/sparcv9_sun_solaris.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv4t_none_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv5te_none_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv6m_none_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv6m_nuttx_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv7a_nuttx_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv7a_nuttx_eabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv7a_pc_windows_msvc.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv7a_uwp_windows_msvc.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv7em_none_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv7em_none_eabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv7em_nuttx_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv7em_nuttx_eabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv7m_none_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv7m_nuttx_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv7neon_linux_androideabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv7neon_unknown_linux_gnueabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv7neon_unknown_linux_musleabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv8m_base_none_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv8m_base_nuttx_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv8m_main_none_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv8m_main_none_eabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv8m_main_nuttx_eabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/thumbv8m_main_nuttx_eabihf.rs",
        "rust/compiler/rustc_target/src/spec/targets/wasm32_unknown_emscripten.rs",
        "rust/compiler/rustc_target/src/spec/targets/wasm32_unknown_unknown.rs",
        "rust/compiler/rustc_target/src/spec/targets/wasm32_wali_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/wasm32_wasip1.rs",
        "rust/compiler/rustc_target/src/spec/targets/wasm32_wasip1_threads.rs",
        "rust/compiler/rustc_target/src/spec/targets/wasm32_wasip2.rs",
        "rust/compiler/rustc_target/src/spec/targets/wasm32v1_none.rs",
        "rust/compiler/rustc_target/src/spec/targets/wasm64_unknown_unknown.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_apple_darwin.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_apple_ios.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_apple_ios_macabi.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_apple_tvos.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_apple_watchos_sim.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_fortanix_unknown_sgx.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_linux_android.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_lynx_lynxos178.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_pc_cygwin.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_pc_nto_qnx710.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_pc_nto_qnx710_iosock.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_pc_nto_qnx800.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_pc_solaris.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_pc_windows_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_pc_windows_gnullvm.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_pc_windows_msvc.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unikraft_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_dragonfly.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_freebsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_fuchsia.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_haiku.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_hermit.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_hurd_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_illumos.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_l4re_uclibc.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_linux_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_linux_gnux32.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_linux_musl.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_linux_none.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_linux_ohos.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_netbsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_none.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_openbsd.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_redox.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_trusty.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_unknown_uefi.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_uwp_windows_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_uwp_windows_msvc.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_win7_windows_gnu.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_win7_windows_msvc.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64_wrs_vxworks.rs",
        "rust/compiler/rustc_target/src/spec/targets/x86_64h_apple_darwin.rs",
        "rust/compiler/rustc_target/src/spec/targets/xtensa_esp32_espidf.rs",
        "rust/compiler/rustc_target/src/spec/targets/xtensa_esp32_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/xtensa_esp32s2_espidf.rs",
        "rust/compiler/rustc_target/src/spec/targets/xtensa_esp32s2_none_elf.rs",
        "rust/compiler/rustc_target/src/spec/targets/xtensa_esp32s3_espidf.rs",
        "rust/compiler/rustc_target/src/spec/targets/xtensa_esp32s3_none_elf.rs",
        "rust/compiler/rustc_target/src/target_features.rs",
        "rust/compiler/rustc_target/src/tests.rs",
    ],
    crate = "rustc_target",
    crate_root = "rust/compiler/rustc_target/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":bitflags-2.9.3",
        ":object-0.37.3",
        ":rustc_abi-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_fs_util-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_span-0.0.0",
        ":serde_json-1.0.143",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_thread_pool-0.0.0",
    srcs = [
        "rust/compiler/rustc_thread_pool/src/broadcast/mod.rs",
        "rust/compiler/rustc_thread_pool/src/broadcast/tests.rs",
        "rust/compiler/rustc_thread_pool/src/compile_fail/mod.rs",
        "rust/compiler/rustc_thread_pool/src/compile_fail/quicksort_race1.rs",
        "rust/compiler/rustc_thread_pool/src/compile_fail/quicksort_race2.rs",
        "rust/compiler/rustc_thread_pool/src/compile_fail/quicksort_race3.rs",
        "rust/compiler/rustc_thread_pool/src/compile_fail/rc_return.rs",
        "rust/compiler/rustc_thread_pool/src/compile_fail/rc_upvar.rs",
        "rust/compiler/rustc_thread_pool/src/compile_fail/scope_join_bad.rs",
        "rust/compiler/rustc_thread_pool/src/job.rs",
        "rust/compiler/rustc_thread_pool/src/join/mod.rs",
        "rust/compiler/rustc_thread_pool/src/join/tests.rs",
        "rust/compiler/rustc_thread_pool/src/latch.rs",
        "rust/compiler/rustc_thread_pool/src/lib.rs",
        "rust/compiler/rustc_thread_pool/src/private.rs",
        "rust/compiler/rustc_thread_pool/src/registry.rs",
        "rust/compiler/rustc_thread_pool/src/scope/mod.rs",
        "rust/compiler/rustc_thread_pool/src/scope/tests.rs",
        "rust/compiler/rustc_thread_pool/src/sleep/counters.rs",
        "rust/compiler/rustc_thread_pool/src/sleep/mod.rs",
        "rust/compiler/rustc_thread_pool/src/spawn/mod.rs",
        "rust/compiler/rustc_thread_pool/src/spawn/tests.rs",
        "rust/compiler/rustc_thread_pool/src/tests.rs",
        "rust/compiler/rustc_thread_pool/src/thread_pool/mod.rs",
        "rust/compiler/rustc_thread_pool/src/thread_pool/tests.rs",
        "rust/compiler/rustc_thread_pool/src/tlv.rs",
        "rust/compiler/rustc_thread_pool/src/unwind.rs",
        "rust/compiler/rustc_thread_pool/src/worker_local.rs",
    ],
    crate = "rustc_thread_pool",
    crate_root = "rust/compiler/rustc_thread_pool/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [
        ":crossbeam-deque-0.8.6",
        ":crossbeam-utils-0.8.21",
    ],
)

rust_bootstrap_library(
    name = "rustc_tools_util-0.4.2",
    srcs = ["rust/src/tools/clippy/rustc_tools_util/src/lib.rs"],
    crate = "rustc_tools_util",
    crate_root = "rust/src/tools/clippy/rustc_tools_util/src/lib.rs",
    edition = "2021",
    visibility = [],
)

rust_bootstrap_library(
    name = "rustc_trait_selection-0.0.0",
    srcs = [
        "rust/compiler/rustc_trait_selection/src/error_reporting/infer/mod.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/infer/need_type_info.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/infer/nice_region_error/different_lifetimes.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/infer/nice_region_error/find_anon_type.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/infer/nice_region_error/mismatched_static_lifetime.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/infer/nice_region_error/mod.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/infer/nice_region_error/named_anon_conflict.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/infer/nice_region_error/placeholder_error.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/infer/nice_region_error/placeholder_relation.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/infer/nice_region_error/static_impl_trait.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/infer/nice_region_error/trait_impl_difference.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/infer/nice_region_error/util.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/infer/note_and_explain.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/infer/region.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/infer/sub_relations.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/infer/suggest.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/mod.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/traits/ambiguity.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/traits/call_kind.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/traits/fulfillment_errors.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/traits/mod.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/traits/on_unimplemented.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/traits/on_unimplemented_condition.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/traits/on_unimplemented_format.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/traits/overflow.rs",
        "rust/compiler/rustc_trait_selection/src/error_reporting/traits/suggestions.rs",
        "rust/compiler/rustc_trait_selection/src/errors.rs",
        "rust/compiler/rustc_trait_selection/src/errors/note_and_explain.rs",
        "rust/compiler/rustc_trait_selection/src/infer.rs",
        "rust/compiler/rustc_trait_selection/src/lib.rs",
        "rust/compiler/rustc_trait_selection/src/opaque_types.rs",
        "rust/compiler/rustc_trait_selection/src/regions.rs",
        "rust/compiler/rustc_trait_selection/src/solve.rs",
        "rust/compiler/rustc_trait_selection/src/solve/delegate.rs",
        "rust/compiler/rustc_trait_selection/src/solve/fulfill.rs",
        "rust/compiler/rustc_trait_selection/src/solve/fulfill/derive_errors.rs",
        "rust/compiler/rustc_trait_selection/src/solve/inspect.rs",
        "rust/compiler/rustc_trait_selection/src/solve/inspect/analyse.rs",
        "rust/compiler/rustc_trait_selection/src/solve/normalize.rs",
        "rust/compiler/rustc_trait_selection/src/solve/select.rs",
        "rust/compiler/rustc_trait_selection/src/traits/auto_trait.rs",
        "rust/compiler/rustc_trait_selection/src/traits/coherence.rs",
        "rust/compiler/rustc_trait_selection/src/traits/const_evaluatable.rs",
        "rust/compiler/rustc_trait_selection/src/traits/dyn_compatibility.rs",
        "rust/compiler/rustc_trait_selection/src/traits/effects.rs",
        "rust/compiler/rustc_trait_selection/src/traits/engine.rs",
        "rust/compiler/rustc_trait_selection/src/traits/fulfill.rs",
        "rust/compiler/rustc_trait_selection/src/traits/misc.rs",
        "rust/compiler/rustc_trait_selection/src/traits/mod.rs",
        "rust/compiler/rustc_trait_selection/src/traits/normalize.rs",
        "rust/compiler/rustc_trait_selection/src/traits/outlives_bounds.rs",
        "rust/compiler/rustc_trait_selection/src/traits/project.rs",
        "rust/compiler/rustc_trait_selection/src/traits/query/dropck_outlives.rs",
        "rust/compiler/rustc_trait_selection/src/traits/query/evaluate_obligation.rs",
        "rust/compiler/rustc_trait_selection/src/traits/query/method_autoderef.rs",
        "rust/compiler/rustc_trait_selection/src/traits/query/mod.rs",
        "rust/compiler/rustc_trait_selection/src/traits/query/normalize.rs",
        "rust/compiler/rustc_trait_selection/src/traits/query/type_op/ascribe_user_type.rs",
        "rust/compiler/rustc_trait_selection/src/traits/query/type_op/custom.rs",
        "rust/compiler/rustc_trait_selection/src/traits/query/type_op/implied_outlives_bounds.rs",
        "rust/compiler/rustc_trait_selection/src/traits/query/type_op/mod.rs",
        "rust/compiler/rustc_trait_selection/src/traits/query/type_op/normalize.rs",
        "rust/compiler/rustc_trait_selection/src/traits/query/type_op/outlives.rs",
        "rust/compiler/rustc_trait_selection/src/traits/query/type_op/prove_predicate.rs",
        "rust/compiler/rustc_trait_selection/src/traits/select/_match.rs",
        "rust/compiler/rustc_trait_selection/src/traits/select/candidate_assembly.rs",
        "rust/compiler/rustc_trait_selection/src/traits/select/confirmation.rs",
        "rust/compiler/rustc_trait_selection/src/traits/select/mod.rs",
        "rust/compiler/rustc_trait_selection/src/traits/specialize/mod.rs",
        "rust/compiler/rustc_trait_selection/src/traits/specialize/specialization_graph.rs",
        "rust/compiler/rustc_trait_selection/src/traits/structural_normalize.rs",
        "rust/compiler/rustc_trait_selection/src/traits/util.rs",
        "rust/compiler/rustc_trait_selection/src/traits/vtable.rs",
        "rust/compiler/rustc_trait_selection/src/traits/wf.rs",
    ],
    crate = "rustc_trait_selection",
    crate_root = "rust/compiler/rustc_trait_selection/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":itertools-0.12.1",
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_infer-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_next_trait_solver-0.0.0",
        ":rustc_parse_format-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_transmute-0.0.0",
        ":smallvec-1.15.1",
        ":thin-vec-0.2.14",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_traits-0.0.0",
    srcs = [
        "rust/compiler/rustc_traits/src/codegen.rs",
        "rust/compiler/rustc_traits/src/coroutine_witnesses.rs",
        "rust/compiler/rustc_traits/src/dropck_outlives.rs",
        "rust/compiler/rustc_traits/src/evaluate_obligation.rs",
        "rust/compiler/rustc_traits/src/implied_outlives_bounds.rs",
        "rust/compiler/rustc_traits/src/lib.rs",
        "rust/compiler/rustc_traits/src/normalize_erasing_regions.rs",
        "rust/compiler/rustc_traits/src/normalize_projection_ty.rs",
        "rust/compiler/rustc_traits/src/type_op.rs",
    ],
    crate = "rustc_traits",
    crate_root = "rust/compiler/rustc_traits/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":rustc_data_structures-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_infer-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_transmute-0.0.0",
    srcs = [
        "rust/compiler/rustc_transmute/src/layout/dfa.rs",
        "rust/compiler/rustc_transmute/src/layout/mod.rs",
        "rust/compiler/rustc_transmute/src/layout/tree.rs",
        "rust/compiler/rustc_transmute/src/layout/tree/tests.rs",
        "rust/compiler/rustc_transmute/src/lib.rs",
        "rust/compiler/rustc_transmute/src/maybe_transmutable/mod.rs",
        "rust/compiler/rustc_transmute/src/maybe_transmutable/query_context.rs",
        "rust/compiler/rustc_transmute/src/maybe_transmutable/tests.rs",
    ],
    crate = "rustc_transmute",
    crate_root = "rust/compiler/rustc_transmute/src/lib.rs",
    edition = "2024",
    features = ["rustc"],
    visibility = [],
    deps = [
        ":rustc_abi-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_span-0.0.0",
        ":smallvec-1.15.1",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_ty_utils-0.0.0",
    srcs = [
        "rust/compiler/rustc_ty_utils/src/abi.rs",
        "rust/compiler/rustc_ty_utils/src/assoc.rs",
        "rust/compiler/rustc_ty_utils/src/common_traits.rs",
        "rust/compiler/rustc_ty_utils/src/consts.rs",
        "rust/compiler/rustc_ty_utils/src/errors.rs",
        "rust/compiler/rustc_ty_utils/src/implied_bounds.rs",
        "rust/compiler/rustc_ty_utils/src/instance.rs",
        "rust/compiler/rustc_ty_utils/src/layout.rs",
        "rust/compiler/rustc_ty_utils/src/layout/invariant.rs",
        "rust/compiler/rustc_ty_utils/src/lib.rs",
        "rust/compiler/rustc_ty_utils/src/needs_drop.rs",
        "rust/compiler/rustc_ty_utils/src/nested_bodies.rs",
        "rust/compiler/rustc_ty_utils/src/opaque_types.rs",
        "rust/compiler/rustc_ty_utils/src/representability.rs",
        "rust/compiler/rustc_ty_utils/src/sig_types.rs",
        "rust/compiler/rustc_ty_utils/src/structural_match.rs",
        "rust/compiler/rustc_ty_utils/src/ty.rs",
    ],
    crate = "rustc_ty_utils",
    crate_root = "rust/compiler/rustc_ty_utils/src/lib.rs",
    edition = "2024",
    visibility = [],
    deps = [
        ":itertools-0.12.1",
        ":rustc_abi-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_fluent_macro-0.0.0",
        ":rustc_hashes-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_infer-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_type_ir-0.0.0",
    srcs = [
        "rust/compiler/rustc_type_ir/src/binder.rs",
        "rust/compiler/rustc_type_ir/src/canonical.rs",
        "rust/compiler/rustc_type_ir/src/const_kind.rs",
        "rust/compiler/rustc_type_ir/src/data_structures/delayed_map.rs",
        "rust/compiler/rustc_type_ir/src/data_structures/mod.rs",
        "rust/compiler/rustc_type_ir/src/elaborate.rs",
        "rust/compiler/rustc_type_ir/src/error.rs",
        "rust/compiler/rustc_type_ir/src/fast_reject.rs",
        "rust/compiler/rustc_type_ir/src/flags.rs",
        "rust/compiler/rustc_type_ir/src/fold.rs",
        "rust/compiler/rustc_type_ir/src/generic_arg.rs",
        "rust/compiler/rustc_type_ir/src/infer_ctxt.rs",
        "rust/compiler/rustc_type_ir/src/inherent.rs",
        "rust/compiler/rustc_type_ir/src/interner.rs",
        "rust/compiler/rustc_type_ir/src/ir_print.rs",
        "rust/compiler/rustc_type_ir/src/lang_items.rs",
        "rust/compiler/rustc_type_ir/src/lib.rs",
        "rust/compiler/rustc_type_ir/src/lift.rs",
        "rust/compiler/rustc_type_ir/src/macros.rs",
        "rust/compiler/rustc_type_ir/src/opaque_ty.rs",
        "rust/compiler/rustc_type_ir/src/outlives.rs",
        "rust/compiler/rustc_type_ir/src/pattern.rs",
        "rust/compiler/rustc_type_ir/src/predicate.rs",
        "rust/compiler/rustc_type_ir/src/predicate_kind.rs",
        "rust/compiler/rustc_type_ir/src/region_kind.rs",
        "rust/compiler/rustc_type_ir/src/relate.rs",
        "rust/compiler/rustc_type_ir/src/relate/combine.rs",
        "rust/compiler/rustc_type_ir/src/relate/solver_relating.rs",
        "rust/compiler/rustc_type_ir/src/search_graph/global_cache.rs",
        "rust/compiler/rustc_type_ir/src/search_graph/mod.rs",
        "rust/compiler/rustc_type_ir/src/search_graph/stack.rs",
        "rust/compiler/rustc_type_ir/src/solve/inspect.rs",
        "rust/compiler/rustc_type_ir/src/solve/mod.rs",
        "rust/compiler/rustc_type_ir/src/ty_info.rs",
        "rust/compiler/rustc_type_ir/src/ty_kind.rs",
        "rust/compiler/rustc_type_ir/src/ty_kind/closure.rs",
        "rust/compiler/rustc_type_ir/src/upcast.rs",
        "rust/compiler/rustc_type_ir/src/visit.rs",
        "rust/compiler/rustc_type_ir/src/walk.rs",
    ],
    crate = "rustc_type_ir",
    crate_root = "rust/compiler/rustc_type_ir/src/lib.rs",
    edition = "2024",
    features = [
        "default",
        "nightly",
    ],
    visibility = [],
    deps = [
        ":bitflags-2.9.3",
        ":derive-where-1.6.0",
        ":ena-0.14.3",
        ":indexmap-2.11.0",
        ":rustc-hash-2.1.1",
        ":rustc_ast_ir-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_type_ir_macros-0.0.0",
        ":smallvec-1.15.1",
        ":thin-vec-0.2.14",
        ":tracing-0.1.37",
    ],
)

rust_bootstrap_library(
    name = "rustc_type_ir_macros-0.0.0",
    srcs = ["rust/compiler/rustc_type_ir_macros/src/lib.rs"],
    crate = "rustc_type_ir_macros",
    crate_root = "rust/compiler/rustc_type_ir_macros/src/lib.rs",
    edition = "2024",
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
        ":synstructure-0.13.2",
    ],
)

rust_bootstrap_library(
    name = "rustdoc-0.0.0",
    srcs = [
        "rust/src/librustdoc/askama.toml",
        "rust/src/librustdoc/build.rs",
        "rust/src/librustdoc/clean/auto_trait.rs",
        "rust/src/librustdoc/clean/blanket_impl.rs",
        "rust/src/librustdoc/clean/cfg.rs",
        "rust/src/librustdoc/clean/cfg/tests.rs",
        "rust/src/librustdoc/clean/inline.rs",
        "rust/src/librustdoc/clean/mod.rs",
        "rust/src/librustdoc/clean/render_macro_matchers.rs",
        "rust/src/librustdoc/clean/simplify.rs",
        "rust/src/librustdoc/clean/types.rs",
        "rust/src/librustdoc/clean/types/tests.rs",
        "rust/src/librustdoc/clean/utils.rs",
        "rust/src/librustdoc/clean/utils/tests.rs",
        "rust/src/librustdoc/config.rs",
        "rust/src/librustdoc/core.rs",
        "rust/src/librustdoc/display.rs",
        "rust/src/librustdoc/docfs.rs",
        "rust/src/librustdoc/doctest.rs",
        "rust/src/librustdoc/doctest/extracted.rs",
        "rust/src/librustdoc/doctest/make.rs",
        "rust/src/librustdoc/doctest/markdown.rs",
        "rust/src/librustdoc/doctest/runner.rs",
        "rust/src/librustdoc/doctest/rust.rs",
        "rust/src/librustdoc/doctest/tests.rs",
        "rust/src/librustdoc/error.rs",
        "rust/src/librustdoc/externalfiles.rs",
        "rust/src/librustdoc/fold.rs",
        "rust/src/librustdoc/formats/cache.rs",
        "rust/src/librustdoc/formats/item_type.rs",
        "rust/src/librustdoc/formats/mod.rs",
        "rust/src/librustdoc/formats/renderer.rs",
        "rust/src/librustdoc/html/escape.rs",
        "rust/src/librustdoc/html/escape/tests.rs",
        "rust/src/librustdoc/html/format.rs",
        "rust/src/librustdoc/html/highlight.rs",
        "rust/src/librustdoc/html/highlight/fixtures/sample.rs",
        "rust/src/librustdoc/html/highlight/fixtures/union.rs",
        "rust/src/librustdoc/html/highlight/tests.rs",
        "rust/src/librustdoc/html/layout.rs",
        "rust/src/librustdoc/html/length_limit.rs",
        "rust/src/librustdoc/html/length_limit/tests.rs",
        "rust/src/librustdoc/html/markdown.rs",
        "rust/src/librustdoc/html/markdown/footnotes.rs",
        "rust/src/librustdoc/html/markdown/tests.rs",
        "rust/src/librustdoc/html/mod.rs",
        "rust/src/librustdoc/html/render/context.rs",
        "rust/src/librustdoc/html/render/mod.rs",
        "rust/src/librustdoc/html/render/ordered_json.rs",
        "rust/src/librustdoc/html/render/ordered_json/tests.rs",
        "rust/src/librustdoc/html/render/print_item.rs",
        "rust/src/librustdoc/html/render/search_index.rs",
        "rust/src/librustdoc/html/render/search_index/encode.rs",
        "rust/src/librustdoc/html/render/sidebar.rs",
        "rust/src/librustdoc/html/render/sorted_template.rs",
        "rust/src/librustdoc/html/render/sorted_template/tests.rs",
        "rust/src/librustdoc/html/render/span_map.rs",
        "rust/src/librustdoc/html/render/tests.rs",
        "rust/src/librustdoc/html/render/type_layout.rs",
        "rust/src/librustdoc/html/render/write_shared.rs",
        "rust/src/librustdoc/html/render/write_shared/tests.rs",
        "rust/src/librustdoc/html/sources.rs",
        "rust/src/librustdoc/html/static/.eslintrc.js",
        "rust/src/librustdoc/html/static/COPYRIGHT.txt",
        "rust/src/librustdoc/html/static/LICENSE-APACHE.txt",
        "rust/src/librustdoc/html/static/LICENSE-MIT.txt",
        "rust/src/librustdoc/html/static/css/normalize.css",
        "rust/src/librustdoc/html/static/css/noscript.css",
        "rust/src/librustdoc/html/static/css/rustdoc.css",
        "rust/src/librustdoc/html/static/fonts/FiraMono-Medium.woff2",
        "rust/src/librustdoc/html/static/fonts/FiraMono-Regular.woff2",
        "rust/src/librustdoc/html/static/fonts/FiraSans-Italic.woff2",
        "rust/src/librustdoc/html/static/fonts/FiraSans-LICENSE.txt",
        "rust/src/librustdoc/html/static/fonts/FiraSans-Medium.woff2",
        "rust/src/librustdoc/html/static/fonts/FiraSans-MediumItalic.woff2",
        "rust/src/librustdoc/html/static/fonts/FiraSans-Regular.woff2",
        "rust/src/librustdoc/html/static/fonts/NanumBarunGothic.ttf.woff2",
        "rust/src/librustdoc/html/static/fonts/NanumBarunGothic-LICENSE.txt",
        "rust/src/librustdoc/html/static/fonts/README.txt",
        "rust/src/librustdoc/html/static/fonts/SourceCodePro-It.ttf.woff2",
        "rust/src/librustdoc/html/static/fonts/SourceCodePro-LICENSE.txt",
        "rust/src/librustdoc/html/static/fonts/SourceCodePro-Regular.ttf.woff2",
        "rust/src/librustdoc/html/static/fonts/SourceCodePro-Semibold.ttf.woff2",
        "rust/src/librustdoc/html/static/fonts/SourceSerif4-Bold.ttf.woff2",
        "rust/src/librustdoc/html/static/fonts/SourceSerif4-It.ttf.woff2",
        "rust/src/librustdoc/html/static/fonts/SourceSerif4-LICENSE.md",
        "rust/src/librustdoc/html/static/fonts/SourceSerif4-Regular.ttf.woff2",
        "rust/src/librustdoc/html/static/fonts/SourceSerif4-Semibold.ttf.woff2",
        "rust/src/librustdoc/html/static/images/favicon.svg",
        "rust/src/librustdoc/html/static/images/favicon-32x32.png",
        "rust/src/librustdoc/html/static/images/rust-logo.svg",
        "rust/src/librustdoc/html/static/js/README.md",
        "rust/src/librustdoc/html/static/js/main.js",
        "rust/src/librustdoc/html/static/js/rustdoc.d.ts",
        "rust/src/librustdoc/html/static/js/scrape-examples.js",
        "rust/src/librustdoc/html/static/js/search.js",
        "rust/src/librustdoc/html/static/js/settings.js",
        "rust/src/librustdoc/html/static/js/src-script.js",
        "rust/src/librustdoc/html/static/js/storage.js",
        "rust/src/librustdoc/html/static/js/tsconfig.json",
        "rust/src/librustdoc/html/static/scrape-examples-help.md",
        "rust/src/librustdoc/html/static_files.rs",
        "rust/src/librustdoc/html/templates/item_info.html",
        "rust/src/librustdoc/html/templates/item_union.html",
        "rust/src/librustdoc/html/templates/page.html",
        "rust/src/librustdoc/html/templates/print_item.html",
        "rust/src/librustdoc/html/templates/scraped_source.html",
        "rust/src/librustdoc/html/templates/short_item_info.html",
        "rust/src/librustdoc/html/templates/sidebar.html",
        "rust/src/librustdoc/html/templates/source.html",
        "rust/src/librustdoc/html/templates/type_layout.html",
        "rust/src/librustdoc/html/templates/type_layout_size.html",
        "rust/src/librustdoc/html/tests.rs",
        "rust/src/librustdoc/html/toc.rs",
        "rust/src/librustdoc/html/toc/tests.rs",
        "rust/src/librustdoc/html/url_parts_builder.rs",
        "rust/src/librustdoc/html/url_parts_builder/tests.rs",
        "rust/src/librustdoc/json/conversions.rs",
        "rust/src/librustdoc/json/ids.rs",
        "rust/src/librustdoc/json/import_finder.rs",
        "rust/src/librustdoc/json/mod.rs",
        "rust/src/librustdoc/lib.rs",
        "rust/src/librustdoc/lint.rs",
        "rust/src/librustdoc/markdown.rs",
        "rust/src/librustdoc/passes/calculate_doc_coverage.rs",
        "rust/src/librustdoc/passes/check_doc_cfg.rs",
        "rust/src/librustdoc/passes/check_doc_test_visibility.rs",
        "rust/src/librustdoc/passes/collect_intra_doc_links.rs",
        "rust/src/librustdoc/passes/collect_trait_impls.rs",
        "rust/src/librustdoc/passes/lint.rs",
        "rust/src/librustdoc/passes/lint/bare_urls.rs",
        "rust/src/librustdoc/passes/lint/check_code_block_syntax.rs",
        "rust/src/librustdoc/passes/lint/html_tags.rs",
        "rust/src/librustdoc/passes/lint/redundant_explicit_links.rs",
        "rust/src/librustdoc/passes/lint/unescaped_backticks.rs",
        "rust/src/librustdoc/passes/mod.rs",
        "rust/src/librustdoc/passes/propagate_doc_cfg.rs",
        "rust/src/librustdoc/passes/propagate_stability.rs",
        "rust/src/librustdoc/passes/strip_aliased_non_local.rs",
        "rust/src/librustdoc/passes/strip_hidden.rs",
        "rust/src/librustdoc/passes/strip_priv_imports.rs",
        "rust/src/librustdoc/passes/strip_private.rs",
        "rust/src/librustdoc/passes/stripper.rs",
        "rust/src/librustdoc/scrape_examples.rs",
        "rust/src/librustdoc/theme.rs",
        "rust/src/librustdoc/theme/tests.rs",
        "rust/src/librustdoc/visit.rs",
        "rust/src/librustdoc/visit_ast.rs",
        "rust/src/librustdoc/visit_lib.rs",
    ],
    crate = "rustdoc",
    crate_root = "rust/src/librustdoc/lib.rs",
    edition = "2024",
    env = {
        "CARGO_MANIFEST_DIR": "rust/src/librustdoc",
        "DOC_RUST_LANG_ORG_CHANNEL": "https://doc.rust-lang.org/stable",
        "OUT_DIR": "$(location :rustdoc-0.0.0-build-script-run[out_dir])",
    },
    rustc_flags = ["@$(location :rustdoc-0.0.0-build-script-run[rustc_flags])"],
    visibility = [],
    deps = [
        ":arrayvec-0.7.6",
        ":askama-0.14.0",
        ":base64-0.21.7",
        ":indexmap-2.11.0",
        ":itertools-0.12.1",
        ":minifier-0.3.6",
        ":pulldown-cmark-0.11.3",
        ":pulldown-cmark-escape-0.11.0",
        ":regex-1.11.1",
        ":rustc_abi-0.0.0",
        ":rustc_ast-0.0.0",
        ":rustc_ast_pretty-0.0.0",
        ":rustc_attr_data_structures-0.0.0",
        ":rustc_attr_parsing-0.0.0",
        ":rustc_data_structures-0.0.0",
        ":rustc_driver-0.0.0",
        ":rustc_errors-0.0.0",
        ":rustc_expand-0.0.0",
        ":rustc_feature-0.0.0",
        ":rustc_hir-0.0.0",
        ":rustc_hir_analysis-0.0.0",
        ":rustc_hir_pretty-0.0.0",
        ":rustc_index-0.0.0",
        ":rustc_infer-0.0.0",
        ":rustc_interface-0.0.0",
        ":rustc_lexer-0.0.0",
        ":rustc_lint-0.0.0",
        ":rustc_lint_defs-0.0.0",
        ":rustc_log-0.0.0",
        ":rustc_macros-0.0.0",
        ":rustc_metadata-0.0.0",
        ":rustc_middle-0.0.0",
        ":rustc_parse-0.0.0",
        ":rustc_passes-0.0.0",
        ":rustc_resolve-0.0.0",
        ":rustc_serialize-0.0.0",
        ":rustc_session-0.0.0",
        ":rustc_span-0.0.0",
        ":rustc_target-0.0.0",
        ":rustc_trait_selection-0.0.0",
        ":rustdoc-json-types-0.1.0",
        ":serde-1.0.219",
        ":serde_json-1.0.143",
        ":smallvec-1.15.1",
        ":tempfile-3.21.0",
        ":thin-vec-0.2.14",
        ":threadpool-1.8.1",
        ":tracing-0.1.37",
        ":tracing-subscriber-0.3.18",
        ":tracing-tree-0.3.1",
        ":unicode-segmentation-1.12.0",
    ],
)

rust_bootstrap_binary(
    name = "rustdoc-0.0.0-build-script-build",
    srcs = [
        "rust/src/librustdoc/askama.toml",
        "rust/src/librustdoc/build.rs",
        "rust/src/librustdoc/clean/auto_trait.rs",
        "rust/src/librustdoc/clean/blanket_impl.rs",
        "rust/src/librustdoc/clean/cfg.rs",
        "rust/src/librustdoc/clean/cfg/tests.rs",
        "rust/src/librustdoc/clean/inline.rs",
        "rust/src/librustdoc/clean/mod.rs",
        "rust/src/librustdoc/clean/render_macro_matchers.rs",
        "rust/src/librustdoc/clean/simplify.rs",
        "rust/src/librustdoc/clean/types.rs",
        "rust/src/librustdoc/clean/types/tests.rs",
        "rust/src/librustdoc/clean/utils.rs",
        "rust/src/librustdoc/clean/utils/tests.rs",
        "rust/src/librustdoc/config.rs",
        "rust/src/librustdoc/core.rs",
        "rust/src/librustdoc/display.rs",
        "rust/src/librustdoc/docfs.rs",
        "rust/src/librustdoc/doctest.rs",
        "rust/src/librustdoc/doctest/extracted.rs",
        "rust/src/librustdoc/doctest/make.rs",
        "rust/src/librustdoc/doctest/markdown.rs",
        "rust/src/librustdoc/doctest/runner.rs",
        "rust/src/librustdoc/doctest/rust.rs",
        "rust/src/librustdoc/doctest/tests.rs",
        "rust/src/librustdoc/error.rs",
        "rust/src/librustdoc/externalfiles.rs",
        "rust/src/librustdoc/fold.rs",
        "rust/src/librustdoc/formats/cache.rs",
        "rust/src/librustdoc/formats/item_type.rs",
        "rust/src/librustdoc/formats/mod.rs",
        "rust/src/librustdoc/formats/renderer.rs",
        "rust/src/librustdoc/html/escape.rs",
        "rust/src/librustdoc/html/escape/tests.rs",
        "rust/src/librustdoc/html/format.rs",
        "rust/src/librustdoc/html/highlight.rs",
        "rust/src/librustdoc/html/highlight/fixtures/sample.rs",
        "rust/src/librustdoc/html/highlight/fixtures/union.rs",
        "rust/src/librustdoc/html/highlight/tests.rs",
        "rust/src/librustdoc/html/layout.rs",
        "rust/src/librustdoc/html/length_limit.rs",
        "rust/src/librustdoc/html/length_limit/tests.rs",
        "rust/src/librustdoc/html/markdown.rs",
        "rust/src/librustdoc/html/markdown/footnotes.rs",
        "rust/src/librustdoc/html/markdown/tests.rs",
        "rust/src/librustdoc/html/mod.rs",
        "rust/src/librustdoc/html/render/context.rs",
        "rust/src/librustdoc/html/render/mod.rs",
        "rust/src/librustdoc/html/render/ordered_json.rs",
        "rust/src/librustdoc/html/render/ordered_json/tests.rs",
        "rust/src/librustdoc/html/render/print_item.rs",
        "rust/src/librustdoc/html/render/search_index.rs",
        "rust/src/librustdoc/html/render/search_index/encode.rs",
        "rust/src/librustdoc/html/render/sidebar.rs",
        "rust/src/librustdoc/html/render/sorted_template.rs",
        "rust/src/librustdoc/html/render/sorted_template/tests.rs",
        "rust/src/librustdoc/html/render/span_map.rs",
        "rust/src/librustdoc/html/render/tests.rs",
        "rust/src/librustdoc/html/render/type_layout.rs",
        "rust/src/librustdoc/html/render/write_shared.rs",
        "rust/src/librustdoc/html/render/write_shared/tests.rs",
        "rust/src/librustdoc/html/sources.rs",
        "rust/src/librustdoc/html/static/.eslintrc.js",
        "rust/src/librustdoc/html/static/COPYRIGHT.txt",
        "rust/src/librustdoc/html/static/LICENSE-APACHE.txt",
        "rust/src/librustdoc/html/static/LICENSE-MIT.txt",
        "rust/src/librustdoc/html/static/css/normalize.css",
        "rust/src/librustdoc/html/static/css/noscript.css",
        "rust/src/librustdoc/html/static/css/rustdoc.css",
        "rust/src/librustdoc/html/static/fonts/FiraMono-Medium.woff2",
        "rust/src/librustdoc/html/static/fonts/FiraMono-Regular.woff2",
        "rust/src/librustdoc/html/static/fonts/FiraSans-Italic.woff2",
        "rust/src/librustdoc/html/static/fonts/FiraSans-LICENSE.txt",
        "rust/src/librustdoc/html/static/fonts/FiraSans-Medium.woff2",
        "rust/src/librustdoc/html/static/fonts/FiraSans-MediumItalic.woff2",
        "rust/src/librustdoc/html/static/fonts/FiraSans-Regular.woff2",
        "rust/src/librustdoc/html/static/fonts/NanumBarunGothic.ttf.woff2",
        "rust/src/librustdoc/html/static/fonts/NanumBarunGothic-LICENSE.txt",
        "rust/src/librustdoc/html/static/fonts/README.txt",
        "rust/src/librustdoc/html/static/fonts/SourceCodePro-It.ttf.woff2",
        "rust/src/librustdoc/html/static/fonts/SourceCodePro-LICENSE.txt",
        "rust/src/librustdoc/html/static/fonts/SourceCodePro-Regular.ttf.woff2",
        "rust/src/librustdoc/html/static/fonts/SourceCodePro-Semibold.ttf.woff2",
        "rust/src/librustdoc/html/static/fonts/SourceSerif4-Bold.ttf.woff2",
        "rust/src/librustdoc/html/static/fonts/SourceSerif4-It.ttf.woff2",
        "rust/src/librustdoc/html/static/fonts/SourceSerif4-LICENSE.md",
        "rust/src/librustdoc/html/static/fonts/SourceSerif4-Regular.ttf.woff2",
        "rust/src/librustdoc/html/static/fonts/SourceSerif4-Semibold.ttf.woff2",
        "rust/src/librustdoc/html/static/images/favicon.svg",
        "rust/src/librustdoc/html/static/images/favicon-32x32.png",
        "rust/src/librustdoc/html/static/images/rust-logo.svg",
        "rust/src/librustdoc/html/static/js/README.md",
        "rust/src/librustdoc/html/static/js/main.js",
        "rust/src/librustdoc/html/static/js/rustdoc.d.ts",
        "rust/src/librustdoc/html/static/js/scrape-examples.js",
        "rust/src/librustdoc/html/static/js/search.js",
        "rust/src/librustdoc/html/static/js/settings.js",
        "rust/src/librustdoc/html/static/js/src-script.js",
        "rust/src/librustdoc/html/static/js/storage.js",
        "rust/src/librustdoc/html/static/js/tsconfig.json",
        "rust/src/librustdoc/html/static/scrape-examples-help.md",
        "rust/src/librustdoc/html/static_files.rs",
        "rust/src/librustdoc/html/templates/item_info.html",
        "rust/src/librustdoc/html/templates/item_union.html",
        "rust/src/librustdoc/html/templates/page.html",
        "rust/src/librustdoc/html/templates/print_item.html",
        "rust/src/librustdoc/html/templates/scraped_source.html",
        "rust/src/librustdoc/html/templates/short_item_info.html",
        "rust/src/librustdoc/html/templates/sidebar.html",
        "rust/src/librustdoc/html/templates/source.html",
        "rust/src/librustdoc/html/templates/type_layout.html",
        "rust/src/librustdoc/html/templates/type_layout_size.html",
        "rust/src/librustdoc/html/tests.rs",
        "rust/src/librustdoc/html/toc.rs",
        "rust/src/librustdoc/html/toc/tests.rs",
        "rust/src/librustdoc/html/url_parts_builder.rs",
        "rust/src/librustdoc/html/url_parts_builder/tests.rs",
        "rust/src/librustdoc/json/conversions.rs",
        "rust/src/librustdoc/json/ids.rs",
        "rust/src/librustdoc/json/import_finder.rs",
        "rust/src/librustdoc/json/mod.rs",
        "rust/src/librustdoc/lib.rs",
        "rust/src/librustdoc/lint.rs",
        "rust/src/librustdoc/markdown.rs",
        "rust/src/librustdoc/passes/calculate_doc_coverage.rs",
        "rust/src/librustdoc/passes/check_doc_cfg.rs",
        "rust/src/librustdoc/passes/check_doc_test_visibility.rs",
        "rust/src/librustdoc/passes/collect_intra_doc_links.rs",
        "rust/src/librustdoc/passes/collect_trait_impls.rs",
        "rust/src/librustdoc/passes/lint.rs",
        "rust/src/librustdoc/passes/lint/bare_urls.rs",
        "rust/src/librustdoc/passes/lint/check_code_block_syntax.rs",
        "rust/src/librustdoc/passes/lint/html_tags.rs",
        "rust/src/librustdoc/passes/lint/redundant_explicit_links.rs",
        "rust/src/librustdoc/passes/lint/unescaped_backticks.rs",
        "rust/src/librustdoc/passes/mod.rs",
        "rust/src/librustdoc/passes/propagate_doc_cfg.rs",
        "rust/src/librustdoc/passes/propagate_stability.rs",
        "rust/src/librustdoc/passes/strip_aliased_non_local.rs",
        "rust/src/librustdoc/passes/strip_hidden.rs",
        "rust/src/librustdoc/passes/strip_priv_imports.rs",
        "rust/src/librustdoc/passes/strip_private.rs",
        "rust/src/librustdoc/passes/stripper.rs",
        "rust/src/librustdoc/scrape_examples.rs",
        "rust/src/librustdoc/theme.rs",
        "rust/src/librustdoc/theme/tests.rs",
        "rust/src/librustdoc/visit.rs",
        "rust/src/librustdoc/visit_ast.rs",
        "rust/src/librustdoc/visit_lib.rs",
    ],
    crate = "build_script_build",
    crate_root = "rust/src/librustdoc/build.rs",
    edition = "2024",
    env = {
        "CARGO_MANIFEST_DIR": "rust/src/librustdoc",
    },
    visibility = [],
    deps = [
        ":minifier-0.3.6",
        ":sha2-0.10.9",
    ],
)

rust_bootstrap_buildscript_run(
    name = "rustdoc-0.0.0-build-script-run",
    package_name = "rustdoc",
    buildscript_rule = ":rustdoc-0.0.0-build-script-build",
    local_manifest_dir = "rust/src/librustdoc",
    version = "0.0.0",
)

rust_bootstrap_library(
    name = "rustdoc-json-types-0.1.0",
    srcs = [
        "rust/src/rustdoc-json-types/lib.rs",
        "rust/src/rustdoc-json-types/tests.rs",
    ],
    crate = "rustdoc_json_types",
    crate_root = "rust/src/rustdoc-json-types/lib.rs",
    edition = "2021",
    features = [
        "default",
        "rustc-hash",
    ],
    visibility = [],
    deps = [
        ":rustc-hash-2.1.1",
        ":serde-1.0.219",
        ":serde_derive-1.0.219",
    ],
)

rust_bootstrap_alias(
    name = "rustdoc-tool-rustdoc_tool_binary",
    actual = ":rustdoc-tool-0.0.0-rustdoc_tool_binary",
    visibility = ["PUBLIC"],
)

rust_bootstrap_binary(
    name = "rustdoc-tool-0.0.0-rustdoc_tool_binary",
    srcs = ["rust/src/tools/rustdoc/main.rs"],
    crate = "rustdoc_tool_binary",
    crate_root = "rust/src/tools/rustdoc/main.rs",
    edition = "2024",
    linker_flags = ["-Wl,-rpath,$ORIGIN/../lib"],
    visibility = [],
    deps = [":rustdoc-0.0.0"],
)

crate_download(
    name = "rustix-1.0.8.crate",
    sha256 = "11181fbabf243db407ef8df94a6ce0b2f9a733bd8be4ad02b4eda9602296cac8",
    strip_prefix = "rustix-1.0.8",
    urls = ["https://static.crates.io/crates/rustix/1.0.8/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "rustix-1.0.8",
    srcs = [":rustix-1.0.8.crate"],
    crate = "rustix",
    crate_root = "rustix-1.0.8.crate/src/lib.rs",
    edition = "2021",
    env = {
        "OUT_DIR": "$(location :rustix-1.0.8-build-script-run[out_dir])",
    },
    features = [
        "alloc",
        "default",
        "fs",
        "std",
    ],
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":linux-raw-sys-0.9.4"],
        ),
        "linux-riscv64-compiler": dict(
            deps = [":linux-raw-sys-0.9.4"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":linux-raw-sys-0.9.4"],
        ),
        "macos-arm64-compiler": dict(
            named_deps = {
                "libc_errno": ":errno-0.3.13",
            },
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-compiler": dict(
            named_deps = {
                "libc_errno": ":errno-0.3.13",
            },
            deps = [":libc-0.2.175"],
        ),
    },
    rustc_flags = ["@$(location :rustix-1.0.8-build-script-run[rustc_flags])"],
    visibility = [],
    deps = [":bitflags-2.9.3"],
)

rust_bootstrap_binary(
    name = "rustix-1.0.8-build-script-build",
    srcs = [":rustix-1.0.8.crate"],
    crate = "build_script_build",
    crate_root = "rustix-1.0.8.crate/build.rs",
    edition = "2021",
    features = [
        "alloc",
        "default",
        "fs",
        "std",
    ],
    visibility = [],
)

rust_bootstrap_buildscript_run(
    name = "rustix-1.0.8-build-script-run",
    package_name = "rustix",
    buildscript_rule = ":rustix-1.0.8-build-script-build",
    features = [
        "alloc",
        "default",
        "fs",
        "std",
    ],
    version = "1.0.8",
)

crate_download(
    name = "ruzstd-0.7.3.crate",
    sha256 = "fad02996bfc73da3e301efe90b1837be9ed8f4a462b6ed410aa35d00381de89f",
    strip_prefix = "ruzstd-0.7.3",
    urls = ["https://static.crates.io/crates/ruzstd/0.7.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "ruzstd-0.7.3",
    srcs = [":ruzstd-0.7.3.crate"],
    crate = "ruzstd",
    crate_root = "ruzstd-0.7.3.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "hash",
        "std",
    ],
    visibility = [],
    deps = [":twox-hash-1.6.3"],
)

crate_download(
    name = "ryu-1.0.20.crate",
    sha256 = "28d3b2b1366ec20994f1fd18c3c594f05c5dd4bc44d8bb0c1c632c8d6829481f",
    strip_prefix = "ryu-1.0.20",
    urls = ["https://static.crates.io/crates/ryu/1.0.20/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "ryu-1.0.20",
    srcs = [":ryu-1.0.20.crate"],
    crate = "ryu",
    crate_root = "ryu-1.0.20.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
)

crate_download(
    name = "scoped-tls-1.0.1.crate",
    sha256 = "e1cf6437eb19a8f4a6cc0f7dca544973b0b78843adbfeb3683d1a94a0024a294",
    strip_prefix = "scoped-tls-1.0.1",
    urls = ["https://static.crates.io/crates/scoped-tls/1.0.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "scoped-tls-1.0.1",
    srcs = [":scoped-tls-1.0.1.crate"],
    crate = "scoped_tls",
    crate_root = "scoped-tls-1.0.1.crate/src/lib.rs",
    edition = "2015",
    visibility = [],
)

crate_download(
    name = "scopeguard-1.2.0.crate",
    sha256 = "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49",
    strip_prefix = "scopeguard-1.2.0",
    urls = ["https://static.crates.io/crates/scopeguard/1.2.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "scopeguard-1.2.0",
    srcs = [":scopeguard-1.2.0.crate"],
    crate = "scopeguard",
    crate_root = "scopeguard-1.2.0.crate/src/lib.rs",
    edition = "2015",
    visibility = [],
)

crate_download(
    name = "self_cell-1.2.0.crate",
    sha256 = "0f7d95a54511e0c7be3f51e8867aa8cf35148d7b9445d44de2f943e2b206e749",
    strip_prefix = "self_cell-1.2.0",
    urls = ["https://static.crates.io/crates/self_cell/1.2.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "self_cell-1.2.0",
    srcs = [":self_cell-1.2.0.crate"],
    crate = "self_cell",
    crate_root = "self_cell-1.2.0.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
)

crate_download(
    name = "semver-1.0.26.crate",
    sha256 = "56e6fa9c48d24d85fb3de5ad847117517440f6beceb7798af16b4a87d616b8d0",
    strip_prefix = "semver-1.0.26",
    urls = ["https://static.crates.io/crates/semver/1.0.26/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "semver-1.0.26",
    srcs = [":semver-1.0.26.crate"],
    crate = "semver",
    crate_root = "semver-1.0.26.crate/src/lib.rs",
    edition = "2018",
    env = {
        "OUT_DIR": "$(location :semver-1.0.26-build-script-run[out_dir])",
    },
    features = [
        "default",
        "serde",
        "std",
    ],
    rustc_flags = ["@$(location :semver-1.0.26-build-script-run[rustc_flags])"],
    visibility = [],
    deps = [":serde-1.0.219"],
)

rust_bootstrap_binary(
    name = "semver-1.0.26-build-script-build",
    srcs = [":semver-1.0.26.crate"],
    crate = "build_script_build",
    crate_root = "semver-1.0.26.crate/build.rs",
    edition = "2018",
    features = [
        "default",
        "serde",
        "std",
    ],
    visibility = [],
)

rust_bootstrap_buildscript_run(
    name = "semver-1.0.26-build-script-run",
    package_name = "semver",
    buildscript_rule = ":semver-1.0.26-build-script-build",
    features = [
        "default",
        "serde",
        "std",
    ],
    version = "1.0.26",
)

crate_download(
    name = "serde-1.0.219.crate",
    sha256 = "5f0e2c6ed6606019b4e29e69dbaba95b11854410e5347d525002456dbbb786b6",
    strip_prefix = "serde-1.0.219",
    urls = ["https://static.crates.io/crates/serde/1.0.219/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "serde-1.0.219",
    srcs = [":serde-1.0.219.crate"],
    crate = "serde",
    crate_root = "serde-1.0.219.crate/src/lib.rs",
    edition = "2018",
    env = {
        "OUT_DIR": "$(location :serde-1.0.219-build-script-run[out_dir])",
    },
    features = [
        "alloc",
        "default",
        "derive",
        "serde_derive",
        "std",
    ],
    rustc_flags = ["@$(location :serde-1.0.219-build-script-run[rustc_flags])"],
    visibility = [],
    deps = [":serde_derive-1.0.219"],
)

rust_bootstrap_binary(
    name = "serde-1.0.219-build-script-build",
    srcs = [":serde-1.0.219.crate"],
    crate = "build_script_build",
    crate_root = "serde-1.0.219.crate/build.rs",
    edition = "2018",
    features = [
        "alloc",
        "default",
        "derive",
        "serde_derive",
        "std",
    ],
    visibility = [],
)

rust_bootstrap_buildscript_run(
    name = "serde-1.0.219-build-script-run",
    package_name = "serde",
    buildscript_rule = ":serde-1.0.219-build-script-build",
    features = [
        "alloc",
        "default",
        "derive",
        "serde_derive",
        "std",
    ],
    version = "1.0.219",
)

crate_download(
    name = "serde_derive-1.0.219.crate",
    sha256 = "5b0276cf7f2c73365f7157c8123c21cd9a50fbbd844757af28ca1f5925fc2a00",
    strip_prefix = "serde_derive-1.0.219",
    urls = ["https://static.crates.io/crates/serde_derive/1.0.219/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "serde_derive-1.0.219",
    srcs = [":serde_derive-1.0.219.crate"],
    crate = "serde_derive",
    crate_root = "serde_derive-1.0.219.crate/src/lib.rs",
    edition = "2015",
    features = ["default"],
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
    ],
)

crate_download(
    name = "serde_json-1.0.143.crate",
    sha256 = "d401abef1d108fbd9cbaebc3e46611f4b1021f714a0597a71f41ee463f5f4a5a",
    strip_prefix = "serde_json-1.0.143",
    urls = ["https://static.crates.io/crates/serde_json/1.0.143/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "serde_json-1.0.143",
    srcs = [":serde_json-1.0.143.crate"],
    crate = "serde_json",
    crate_root = "serde_json-1.0.143.crate/src/lib.rs",
    edition = "2021",
    env = {
        "OUT_DIR": "$(location :serde_json-1.0.143-build-script-run[out_dir])",
    },
    features = [
        "alloc",
        "default",
        "std",
        "unbounded_depth",
    ],
    rustc_flags = ["@$(location :serde_json-1.0.143-build-script-run[rustc_flags])"],
    visibility = [],
    deps = [
        ":itoa-1.0.15",
        ":memchr-2.7.5",
        ":ryu-1.0.20",
        ":serde-1.0.219",
    ],
)

rust_bootstrap_binary(
    name = "serde_json-1.0.143-build-script-build",
    srcs = [":serde_json-1.0.143.crate"],
    crate = "build_script_build",
    crate_root = "serde_json-1.0.143.crate/build.rs",
    edition = "2021",
    features = [
        "alloc",
        "default",
        "std",
        "unbounded_depth",
    ],
    visibility = [],
)

rust_bootstrap_buildscript_run(
    name = "serde_json-1.0.143-build-script-run",
    package_name = "serde_json",
    buildscript_rule = ":serde_json-1.0.143-build-script-build",
    features = [
        "alloc",
        "default",
        "std",
        "unbounded_depth",
    ],
    version = "1.0.143",
)

crate_download(
    name = "serde_spanned-0.6.9.crate",
    sha256 = "bf41e0cfaf7226dca15e8197172c295a782857fcb97fad1808a166870dee75a3",
    strip_prefix = "serde_spanned-0.6.9",
    urls = ["https://static.crates.io/crates/serde_spanned/0.6.9/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "serde_spanned-0.6.9",
    srcs = [":serde_spanned-0.6.9.crate"],
    crate = "serde_spanned",
    crate_root = "serde_spanned-0.6.9.crate/src/lib.rs",
    edition = "2021",
    features = ["serde"],
    visibility = [],
    deps = [":serde-1.0.219"],
)

crate_download(
    name = "sha1-0.10.6.crate",
    sha256 = "e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba",
    strip_prefix = "sha1-0.10.6",
    urls = ["https://static.crates.io/crates/sha1/0.10.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "sha1-0.10.6",
    srcs = [":sha1-0.10.6.crate"],
    crate = "sha1",
    crate_root = "sha1-0.10.6.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "std",
    ],
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":cpufeatures-0.2.17"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":cpufeatures-0.2.17"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":cpufeatures-0.2.17"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":cpufeatures-0.2.17"],
        ),
        "windows-gnu-compiler": dict(
            deps = [":cpufeatures-0.2.17"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":cpufeatures-0.2.17"],
        ),
    },
    visibility = [],
    deps = [
        ":cfg-if-1.0.3",
        ":digest-0.10.7",
    ],
)

crate_download(
    name = "sha2-0.10.9.crate",
    sha256 = "a7507d819769d01a365ab707794a4084392c824f54a7a6a7862f8c3d0892b283",
    strip_prefix = "sha2-0.10.9",
    urls = ["https://static.crates.io/crates/sha2/0.10.9/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "sha2-0.10.9",
    srcs = [":sha2-0.10.9.crate"],
    crate = "sha2",
    crate_root = "sha2-0.10.9.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "std",
    ],
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":cpufeatures-0.2.17"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":cpufeatures-0.2.17"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":cpufeatures-0.2.17"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":cpufeatures-0.2.17"],
        ),
        "windows-gnu-compiler": dict(
            deps = [":cpufeatures-0.2.17"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":cpufeatures-0.2.17"],
        ),
    },
    visibility = [],
    deps = [
        ":cfg-if-1.0.3",
        ":digest-0.10.7",
    ],
)

crate_download(
    name = "sharded-slab-0.1.7.crate",
    sha256 = "f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6",
    strip_prefix = "sharded-slab-0.1.7",
    urls = ["https://static.crates.io/crates/sharded-slab/0.1.7/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "sharded-slab-0.1.7",
    srcs = [":sharded-slab-0.1.7.crate"],
    crate = "sharded_slab",
    crate_root = "sharded-slab-0.1.7.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
    deps = [":lazy_static-1.5.0"],
)

crate_download(
    name = "shlex-1.3.0.crate",
    sha256 = "0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64",
    strip_prefix = "shlex-1.3.0",
    urls = ["https://static.crates.io/crates/shlex/1.3.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "shlex-1.3.0",
    srcs = [":shlex-1.3.0.crate"],
    crate = "shlex",
    crate_root = "shlex-1.3.0.crate/src/lib.rs",
    edition = "2015",
    features = [
        "default",
        "std",
    ],
    visibility = [],
)

crate_download(
    name = "smallvec-1.15.1.crate",
    sha256 = "67b1b7a3b5fe4f1376887184045fcf45c69e92af734b7aaddc05fb777b6fbd03",
    strip_prefix = "smallvec-1.15.1",
    urls = ["https://static.crates.io/crates/smallvec/1.15.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "smallvec-1.15.1",
    srcs = [":smallvec-1.15.1.crate"],
    crate = "smallvec",
    crate_root = "smallvec-1.15.1.crate/src/lib.rs",
    edition = "2018",
    features = [
        "const_generics",
        "may_dangle",
        "union",
    ],
    visibility = [],
)

crate_download(
    name = "stable_deref_trait-1.2.0.crate",
    sha256 = "a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3",
    strip_prefix = "stable_deref_trait-1.2.0",
    urls = ["https://static.crates.io/crates/stable_deref_trait/1.2.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "stable_deref_trait-1.2.0",
    srcs = [":stable_deref_trait-1.2.0.crate"],
    crate = "stable_deref_trait",
    crate_root = "stable_deref_trait-1.2.0.crate/src/lib.rs",
    edition = "2015",
    features = [
        "alloc",
        "default",
        "std",
    ],
    visibility = [],
)

rust_bootstrap_library(
    name = "stable_mir-0.1.0-preview",
    srcs = ["rust/compiler/stable_mir/src/lib.rs"],
    crate = "stable_mir",
    crate_root = "rust/compiler/stable_mir/src/lib.rs",
    edition = "2024",
    features = ["rustc_internal"],
    visibility = [],
    deps = [":rustc_smir-0.0.0"],
)

crate_download(
    name = "stacker-0.1.21.crate",
    sha256 = "cddb07e32ddb770749da91081d8d0ac3a16f1a569a18b20348cd371f5dead06b",
    strip_prefix = "stacker-0.1.21",
    sub_targets = ["src/arch/windows.c"],
    urls = ["https://static.crates.io/crates/stacker/0.1.21/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "stacker-0.1.21",
    srcs = [":stacker-0.1.21.crate"],
    crate = "stacker",
    crate_root = "stacker-0.1.21.crate/src/lib.rs",
    edition = "2021",
    platform = {
        "windows-gnu-compiler": dict(
            deps = [
                ":stacker-0.1.21-windows",
                ":windows-sys-0.59.0",
            ],
        ),
        "windows-msvc-compiler": dict(
            deps = [
                ":stacker-0.1.21-windows",
                ":windows-sys-0.59.0",
            ],
        ),
    },
    visibility = [],
    deps = [
        ":cfg-if-1.0.3",
        ":libc-0.2.175",
        ":psm-0.1.26",
    ],
)

cxx_bootstrap_library(
    name = "stacker-0.1.21-windows",
    srcs = [":stacker-0.1.21.crate[src/arch/windows.c]"],
    headers = [],
    compiler_flags = ["-DWINDOWS"],
    visibility = [],
)

crate_download(
    name = "static_assertions-1.1.0.crate",
    sha256 = "a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f",
    strip_prefix = "static_assertions-1.1.0",
    urls = ["https://static.crates.io/crates/static_assertions/1.1.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "static_assertions-1.1.0",
    srcs = [":static_assertions-1.1.0.crate"],
    crate = "static_assertions",
    crate_root = "static_assertions-1.1.0.crate/src/lib.rs",
    edition = "2015",
    visibility = [],
)

rust_bootstrap_alias(
    name = "std",
    actual = ":std-0.0.0",
    visibility = ["PUBLIC"],
)

rust_bootstrap_library(
    name = "std-0.0.0",
    srcs = [
        "rust/library/backtrace/src/backtrace/libunwind.rs",
        "rust/library/backtrace/src/backtrace/miri.rs",
        "rust/library/backtrace/src/backtrace/mod.rs",
        "rust/library/backtrace/src/backtrace/noop.rs",
        "rust/library/backtrace/src/backtrace/win32.rs",
        "rust/library/backtrace/src/backtrace/win64.rs",
        "rust/library/backtrace/src/capture.rs",
        "rust/library/backtrace/src/dbghelp.rs",
        "rust/library/backtrace/src/lib.rs",
        "rust/library/backtrace/src/print.rs",
        "rust/library/backtrace/src/print/fuchsia.rs",
        "rust/library/backtrace/src/symbolize/dbghelp.rs",
        "rust/library/backtrace/src/symbolize/gimli.rs",
        "rust/library/backtrace/src/symbolize/gimli/coff.rs",
        "rust/library/backtrace/src/symbolize/gimli/elf.rs",
        "rust/library/backtrace/src/symbolize/gimli/libs_aix.rs",
        "rust/library/backtrace/src/symbolize/gimli/libs_dl_iterate_phdr.rs",
        "rust/library/backtrace/src/symbolize/gimli/libs_haiku.rs",
        "rust/library/backtrace/src/symbolize/gimli/libs_illumos.rs",
        "rust/library/backtrace/src/symbolize/gimli/libs_libnx.rs",
        "rust/library/backtrace/src/symbolize/gimli/libs_macos.rs",
        "rust/library/backtrace/src/symbolize/gimli/libs_windows.rs",
        "rust/library/backtrace/src/symbolize/gimli/lru.rs",
        "rust/library/backtrace/src/symbolize/gimli/macho.rs",
        "rust/library/backtrace/src/symbolize/gimli/mmap_fake.rs",
        "rust/library/backtrace/src/symbolize/gimli/mmap_unix.rs",
        "rust/library/backtrace/src/symbolize/gimli/mmap_windows.rs",
        "rust/library/backtrace/src/symbolize/gimli/parse_running_mmaps_unix.rs",
        "rust/library/backtrace/src/symbolize/gimli/stash.rs",
        "rust/library/backtrace/src/symbolize/gimli/xcoff.rs",
        "rust/library/backtrace/src/symbolize/miri.rs",
        "rust/library/backtrace/src/symbolize/mod.rs",
        "rust/library/backtrace/src/symbolize/noop.rs",
        "rust/library/backtrace/src/types.rs",
        "rust/library/backtrace/src/windows_sys.rs",
        "rust/library/backtrace/src/windows_sys_arm32_shim.rs",
        "rust/library/core/src/error.md",
        "rust/library/core/src/ffi/c_char.md",
        "rust/library/core/src/ffi/c_double.md",
        "rust/library/core/src/ffi/c_float.md",
        "rust/library/core/src/ffi/c_int.md",
        "rust/library/core/src/ffi/c_long.md",
        "rust/library/core/src/ffi/c_longlong.md",
        "rust/library/core/src/ffi/c_schar.md",
        "rust/library/core/src/ffi/c_short.md",
        "rust/library/core/src/ffi/c_uchar.md",
        "rust/library/core/src/ffi/c_uint.md",
        "rust/library/core/src/ffi/c_ulong.md",
        "rust/library/core/src/ffi/c_ulonglong.md",
        "rust/library/core/src/ffi/c_ushort.md",
        "rust/library/core/src/ffi/c_void.md",
        "rust/library/core/src/macros/panic.md",
        "rust/library/core/src/primitive_docs.rs",
        "rust/library/portable-simd/crates/core_simd/src/core_simd_docs.md",
        "rust/library/portable-simd/crates/std_float/src/lib.rs",
        "rust/library/portable-simd/crates/std_float/tests/float.rs",
        "rust/library/std/src/alloc.rs",
        "rust/library/std/src/ascii.rs",
        "rust/library/std/src/backtrace.rs",
        "rust/library/std/src/backtrace/tests.rs",
        "rust/library/std/src/bstr.rs",
        "rust/library/std/src/collections/hash/map.rs",
        "rust/library/std/src/collections/hash/map/tests.rs",
        "rust/library/std/src/collections/hash/mod.rs",
        "rust/library/std/src/collections/hash/set.rs",
        "rust/library/std/src/collections/hash/set/tests.rs",
        "rust/library/std/src/collections/mod.rs",
        "rust/library/std/src/env.rs",
        "rust/library/std/src/error.rs",
        "rust/library/std/src/ffi/c_str.rs",
        "rust/library/std/src/ffi/mod.rs",
        "rust/library/std/src/ffi/os_str.rs",
        "rust/library/std/src/ffi/os_str/tests.rs",
        "rust/library/std/src/fs.rs",
        "rust/library/std/src/fs/tests.rs",
        "rust/library/std/src/hash/mod.rs",
        "rust/library/std/src/hash/random.rs",
        "rust/library/std/src/io/buffered/bufreader.rs",
        "rust/library/std/src/io/buffered/bufreader/buffer.rs",
        "rust/library/std/src/io/buffered/bufwriter.rs",
        "rust/library/std/src/io/buffered/linewriter.rs",
        "rust/library/std/src/io/buffered/linewritershim.rs",
        "rust/library/std/src/io/buffered/mod.rs",
        "rust/library/std/src/io/buffered/tests.rs",
        "rust/library/std/src/io/copy.rs",
        "rust/library/std/src/io/copy/tests.rs",
        "rust/library/std/src/io/cursor.rs",
        "rust/library/std/src/io/cursor/tests.rs",
        "rust/library/std/src/io/error.rs",
        "rust/library/std/src/io/error/repr_bitpacked.rs",
        "rust/library/std/src/io/error/repr_unpacked.rs",
        "rust/library/std/src/io/error/tests.rs",
        "rust/library/std/src/io/impls.rs",
        "rust/library/std/src/io/impls/tests.rs",
        "rust/library/std/src/io/mod.rs",
        "rust/library/std/src/io/pipe.rs",
        "rust/library/std/src/io/pipe/tests.rs",
        "rust/library/std/src/io/prelude.rs",
        "rust/library/std/src/io/stdio.rs",
        "rust/library/std/src/io/stdio/tests.rs",
        "rust/library/std/src/io/tests.rs",
        "rust/library/std/src/io/util.rs",
        "rust/library/std/src/io/util/tests.rs",
        "rust/library/std/src/keyword_docs.rs",
        "rust/library/std/src/lib.miri.rs",
        "rust/library/std/src/lib.rs",
        "rust/library/std/src/macros.rs",
        "rust/library/std/src/net/ip_addr.rs",
        "rust/library/std/src/net/ip_addr/tests.rs",
        "rust/library/std/src/net/mod.rs",
        "rust/library/std/src/net/socket_addr.rs",
        "rust/library/std/src/net/socket_addr/tests.rs",
        "rust/library/std/src/net/tcp.rs",
        "rust/library/std/src/net/tcp/tests.rs",
        "rust/library/std/src/net/test.rs",
        "rust/library/std/src/net/udp.rs",
        "rust/library/std/src/net/udp/tests.rs",
        "rust/library/std/src/num/f128.rs",
        "rust/library/std/src/num/f16.rs",
        "rust/library/std/src/num/f32.rs",
        "rust/library/std/src/num/f64.rs",
        "rust/library/std/src/num/mod.rs",
        "rust/library/std/src/os/aix/fs.rs",
        "rust/library/std/src/os/aix/mod.rs",
        "rust/library/std/src/os/aix/raw.rs",
        "rust/library/std/src/os/android/fs.rs",
        "rust/library/std/src/os/android/mod.rs",
        "rust/library/std/src/os/android/net.rs",
        "rust/library/std/src/os/android/raw.rs",
        "rust/library/std/src/os/cygwin/fs.rs",
        "rust/library/std/src/os/cygwin/mod.rs",
        "rust/library/std/src/os/cygwin/raw.rs",
        "rust/library/std/src/os/darwin/fs.rs",
        "rust/library/std/src/os/darwin/mod.rs",
        "rust/library/std/src/os/darwin/raw.rs",
        "rust/library/std/src/os/dragonfly/fs.rs",
        "rust/library/std/src/os/dragonfly/mod.rs",
        "rust/library/std/src/os/dragonfly/raw.rs",
        "rust/library/std/src/os/emscripten/fs.rs",
        "rust/library/std/src/os/emscripten/mod.rs",
        "rust/library/std/src/os/emscripten/raw.rs",
        "rust/library/std/src/os/espidf/fs.rs",
        "rust/library/std/src/os/espidf/mod.rs",
        "rust/library/std/src/os/espidf/raw.rs",
        "rust/library/std/src/os/fd/mod.rs",
        "rust/library/std/src/os/fd/net.rs",
        "rust/library/std/src/os/fd/owned.rs",
        "rust/library/std/src/os/fd/raw.rs",
        "rust/library/std/src/os/fd/tests.rs",
        "rust/library/std/src/os/fortanix_sgx/arch.rs",
        "rust/library/std/src/os/fortanix_sgx/ffi.rs",
        "rust/library/std/src/os/fortanix_sgx/io.rs",
        "rust/library/std/src/os/fortanix_sgx/mod.rs",
        "rust/library/std/src/os/freebsd/fs.rs",
        "rust/library/std/src/os/freebsd/mod.rs",
        "rust/library/std/src/os/freebsd/net.rs",
        "rust/library/std/src/os/freebsd/raw.rs",
        "rust/library/std/src/os/fuchsia/fs.rs",
        "rust/library/std/src/os/fuchsia/mod.rs",
        "rust/library/std/src/os/fuchsia/raw.rs",
        "rust/library/std/src/os/haiku/fs.rs",
        "rust/library/std/src/os/haiku/mod.rs",
        "rust/library/std/src/os/haiku/raw.rs",
        "rust/library/std/src/os/hermit/ffi.rs",
        "rust/library/std/src/os/hermit/io/mod.rs",
        "rust/library/std/src/os/hermit/io/net.rs",
        "rust/library/std/src/os/hermit/mod.rs",
        "rust/library/std/src/os/horizon/fs.rs",
        "rust/library/std/src/os/horizon/mod.rs",
        "rust/library/std/src/os/horizon/raw.rs",
        "rust/library/std/src/os/hurd/fs.rs",
        "rust/library/std/src/os/hurd/mod.rs",
        "rust/library/std/src/os/hurd/raw.rs",
        "rust/library/std/src/os/illumos/fs.rs",
        "rust/library/std/src/os/illumos/mod.rs",
        "rust/library/std/src/os/illumos/raw.rs",
        "rust/library/std/src/os/ios/mod.rs",
        "rust/library/std/src/os/l4re/fs.rs",
        "rust/library/std/src/os/l4re/mod.rs",
        "rust/library/std/src/os/l4re/raw.rs",
        "rust/library/std/src/os/linux/fs.rs",
        "rust/library/std/src/os/linux/mod.rs",
        "rust/library/std/src/os/linux/net.rs",
        "rust/library/std/src/os/linux/process.rs",
        "rust/library/std/src/os/linux/raw.rs",
        "rust/library/std/src/os/macos/mod.rs",
        "rust/library/std/src/os/mod.rs",
        "rust/library/std/src/os/net/linux_ext/addr.rs",
        "rust/library/std/src/os/net/linux_ext/mod.rs",
        "rust/library/std/src/os/net/linux_ext/socket.rs",
        "rust/library/std/src/os/net/linux_ext/tcp.rs",
        "rust/library/std/src/os/net/linux_ext/tests.rs",
        "rust/library/std/src/os/net/mod.rs",
        "rust/library/std/src/os/netbsd/fs.rs",
        "rust/library/std/src/os/netbsd/mod.rs",
        "rust/library/std/src/os/netbsd/net.rs",
        "rust/library/std/src/os/netbsd/raw.rs",
        "rust/library/std/src/os/nto/fs.rs",
        "rust/library/std/src/os/nto/mod.rs",
        "rust/library/std/src/os/nto/raw.rs",
        "rust/library/std/src/os/nuttx/fs.rs",
        "rust/library/std/src/os/nuttx/mod.rs",
        "rust/library/std/src/os/nuttx/raw.rs",
        "rust/library/std/src/os/openbsd/fs.rs",
        "rust/library/std/src/os/openbsd/mod.rs",
        "rust/library/std/src/os/openbsd/raw.rs",
        "rust/library/std/src/os/raw/mod.rs",
        "rust/library/std/src/os/raw/tests.rs",
        "rust/library/std/src/os/redox/fs.rs",
        "rust/library/std/src/os/redox/mod.rs",
        "rust/library/std/src/os/redox/raw.rs",
        "rust/library/std/src/os/rtems/fs.rs",
        "rust/library/std/src/os/rtems/mod.rs",
        "rust/library/std/src/os/rtems/raw.rs",
        "rust/library/std/src/os/solaris/fs.rs",
        "rust/library/std/src/os/solaris/mod.rs",
        "rust/library/std/src/os/solaris/raw.rs",
        "rust/library/std/src/os/solid/ffi.rs",
        "rust/library/std/src/os/solid/io.rs",
        "rust/library/std/src/os/solid/mod.rs",
        "rust/library/std/src/os/trusty/io/mod.rs",
        "rust/library/std/src/os/trusty/mod.rs",
        "rust/library/std/src/os/uefi/env.rs",
        "rust/library/std/src/os/uefi/mod.rs",
        "rust/library/std/src/os/unix/ffi/mod.rs",
        "rust/library/std/src/os/unix/ffi/os_str.rs",
        "rust/library/std/src/os/unix/fs.rs",
        "rust/library/std/src/os/unix/fs/tests.rs",
        "rust/library/std/src/os/unix/io/mod.rs",
        "rust/library/std/src/os/unix/io/tests.rs",
        "rust/library/std/src/os/unix/mod.rs",
        "rust/library/std/src/os/unix/net/addr.rs",
        "rust/library/std/src/os/unix/net/ancillary.rs",
        "rust/library/std/src/os/unix/net/datagram.rs",
        "rust/library/std/src/os/unix/net/listener.rs",
        "rust/library/std/src/os/unix/net/mod.rs",
        "rust/library/std/src/os/unix/net/stream.rs",
        "rust/library/std/src/os/unix/net/tests.rs",
        "rust/library/std/src/os/unix/net/ucred.rs",
        "rust/library/std/src/os/unix/net/ucred/tests.rs",
        "rust/library/std/src/os/unix/process.rs",
        "rust/library/std/src/os/unix/raw.rs",
        "rust/library/std/src/os/unix/thread.rs",
        "rust/library/std/src/os/vita/fs.rs",
        "rust/library/std/src/os/vita/mod.rs",
        "rust/library/std/src/os/vita/raw.rs",
        "rust/library/std/src/os/vxworks/fs.rs",
        "rust/library/std/src/os/vxworks/mod.rs",
        "rust/library/std/src/os/vxworks/raw.rs",
        "rust/library/std/src/os/wasi/ffi.rs",
        "rust/library/std/src/os/wasi/fs.rs",
        "rust/library/std/src/os/wasi/io/mod.rs",
        "rust/library/std/src/os/wasi/io/tests.rs",
        "rust/library/std/src/os/wasi/mod.rs",
        "rust/library/std/src/os/wasi/net/mod.rs",
        "rust/library/std/src/os/wasip2/mod.rs",
        "rust/library/std/src/os/windows/ffi.rs",
        "rust/library/std/src/os/windows/fs.rs",
        "rust/library/std/src/os/windows/io/handle.rs",
        "rust/library/std/src/os/windows/io/mod.rs",
        "rust/library/std/src/os/windows/io/raw.rs",
        "rust/library/std/src/os/windows/io/socket.rs",
        "rust/library/std/src/os/windows/io/tests.rs",
        "rust/library/std/src/os/windows/mod.rs",
        "rust/library/std/src/os/windows/process.rs",
        "rust/library/std/src/os/windows/raw.rs",
        "rust/library/std/src/os/windows/thread.rs",
        "rust/library/std/src/os/xous/ffi.rs",
        "rust/library/std/src/os/xous/ffi/definitions.rs",
        "rust/library/std/src/os/xous/ffi/definitions/memoryflags.rs",
        "rust/library/std/src/os/xous/mod.rs",
        "rust/library/std/src/os/xous/services.rs",
        "rust/library/std/src/os/xous/services/dns.rs",
        "rust/library/std/src/os/xous/services/log.rs",
        "rust/library/std/src/os/xous/services/net.rs",
        "rust/library/std/src/os/xous/services/systime.rs",
        "rust/library/std/src/os/xous/services/ticktimer.rs",
        "rust/library/std/src/panic.rs",
        "rust/library/std/src/panicking.rs",
        "rust/library/std/src/pat.rs",
        "rust/library/std/src/path.rs",
        "rust/library/std/src/prelude/mod.rs",
        "rust/library/std/src/prelude/v1.rs",
        "rust/library/std/src/process.rs",
        "rust/library/std/src/process/tests.rs",
        "rust/library/std/src/random.rs",
        "rust/library/std/src/rt.rs",
        "rust/library/std/src/sync/barrier.rs",
        "rust/library/std/src/sync/lazy_lock.rs",
        "rust/library/std/src/sync/mod.rs",
        "rust/library/std/src/sync/mpmc/array.rs",
        "rust/library/std/src/sync/mpmc/context.rs",
        "rust/library/std/src/sync/mpmc/counter.rs",
        "rust/library/std/src/sync/mpmc/error.rs",
        "rust/library/std/src/sync/mpmc/list.rs",
        "rust/library/std/src/sync/mpmc/mod.rs",
        "rust/library/std/src/sync/mpmc/select.rs",
        "rust/library/std/src/sync/mpmc/tests.rs",
        "rust/library/std/src/sync/mpmc/utils.rs",
        "rust/library/std/src/sync/mpmc/waker.rs",
        "rust/library/std/src/sync/mpmc/zero.rs",
        "rust/library/std/src/sync/mpsc.rs",
        "rust/library/std/src/sync/once_lock.rs",
        "rust/library/std/src/sync/poison.rs",
        "rust/library/std/src/sync/poison/condvar.rs",
        "rust/library/std/src/sync/poison/mutex.rs",
        "rust/library/std/src/sync/poison/once.rs",
        "rust/library/std/src/sync/poison/rwlock.rs",
        "rust/library/std/src/sync/reentrant_lock.rs",
        "rust/library/std/src/sys/alloc/hermit.rs",
        "rust/library/std/src/sys/alloc/mod.rs",
        "rust/library/std/src/sys/alloc/sgx.rs",
        "rust/library/std/src/sys/alloc/solid.rs",
        "rust/library/std/src/sys/alloc/uefi.rs",
        "rust/library/std/src/sys/alloc/unix.rs",
        "rust/library/std/src/sys/alloc/wasm.rs",
        "rust/library/std/src/sys/alloc/windows.rs",
        "rust/library/std/src/sys/alloc/windows/tests.rs",
        "rust/library/std/src/sys/alloc/xous.rs",
        "rust/library/std/src/sys/alloc/zkvm.rs",
        "rust/library/std/src/sys/anonymous_pipe/mod.rs",
        "rust/library/std/src/sys/anonymous_pipe/unix.rs",
        "rust/library/std/src/sys/anonymous_pipe/unsupported.rs",
        "rust/library/std/src/sys/anonymous_pipe/windows.rs",
        "rust/library/std/src/sys/args/common.rs",
        "rust/library/std/src/sys/args/mod.rs",
        "rust/library/std/src/sys/args/sgx.rs",
        "rust/library/std/src/sys/args/uefi.rs",
        "rust/library/std/src/sys/args/unix.rs",
        "rust/library/std/src/sys/args/unsupported.rs",
        "rust/library/std/src/sys/args/wasi.rs",
        "rust/library/std/src/sys/args/windows.rs",
        "rust/library/std/src/sys/args/windows/tests.rs",
        "rust/library/std/src/sys/args/xous.rs",
        "rust/library/std/src/sys/args/zkvm.rs",
        "rust/library/std/src/sys/backtrace.rs",
        "rust/library/std/src/sys/cmath.rs",
        "rust/library/std/src/sys/env/common.rs",
        "rust/library/std/src/sys/env/hermit.rs",
        "rust/library/std/src/sys/env/mod.rs",
        "rust/library/std/src/sys/env/sgx.rs",
        "rust/library/std/src/sys/env/solid.rs",
        "rust/library/std/src/sys/env/uefi.rs",
        "rust/library/std/src/sys/env/unix.rs",
        "rust/library/std/src/sys/env/unsupported.rs",
        "rust/library/std/src/sys/env/wasi.rs",
        "rust/library/std/src/sys/env/windows.rs",
        "rust/library/std/src/sys/env/xous.rs",
        "rust/library/std/src/sys/env/zkvm.rs",
        "rust/library/std/src/sys/env_consts.rs",
        "rust/library/std/src/sys/exit_guard.rs",
        "rust/library/std/src/sys/fd/hermit.rs",
        "rust/library/std/src/sys/fd/mod.rs",
        "rust/library/std/src/sys/fd/sgx.rs",
        "rust/library/std/src/sys/fd/unix.rs",
        "rust/library/std/src/sys/fd/unix/tests.rs",
        "rust/library/std/src/sys/fd/wasi.rs",
        "rust/library/std/src/sys/fs/common.rs",
        "rust/library/std/src/sys/fs/hermit.rs",
        "rust/library/std/src/sys/fs/mod.rs",
        "rust/library/std/src/sys/fs/solid.rs",
        "rust/library/std/src/sys/fs/uefi.rs",
        "rust/library/std/src/sys/fs/unix.rs",
        "rust/library/std/src/sys/fs/unix/tests.rs",
        "rust/library/std/src/sys/fs/unsupported.rs",
        "rust/library/std/src/sys/fs/wasi.rs",
        "rust/library/std/src/sys/fs/windows.rs",
        "rust/library/std/src/sys/fs/windows/remove_dir_all.rs",
        "rust/library/std/src/sys/io/io_slice/iovec.rs",
        "rust/library/std/src/sys/io/io_slice/unsupported.rs",
        "rust/library/std/src/sys/io/io_slice/wasi.rs",
        "rust/library/std/src/sys/io/io_slice/windows.rs",
        "rust/library/std/src/sys/io/is_terminal/hermit.rs",
        "rust/library/std/src/sys/io/is_terminal/isatty.rs",
        "rust/library/std/src/sys/io/is_terminal/unsupported.rs",
        "rust/library/std/src/sys/io/is_terminal/windows.rs",
        "rust/library/std/src/sys/io/mod.rs",
        "rust/library/std/src/sys/mod.rs",
        "rust/library/std/src/sys/net/connection/sgx.rs",
        "rust/library/std/src/sys/net/connection/socket.rs",
        "rust/library/std/src/sys/net/connection/socket/hermit.rs",
        "rust/library/std/src/sys/net/connection/socket/solid.rs",
        "rust/library/std/src/sys/net/connection/socket/tests.rs",
        "rust/library/std/src/sys/net/connection/socket/unix.rs",
        "rust/library/std/src/sys/net/connection/socket/wasip2.rs",
        "rust/library/std/src/sys/net/connection/socket/windows.rs",
        "rust/library/std/src/sys/net/connection/uefi/mod.rs",
        "rust/library/std/src/sys/net/connection/uefi/tcp.rs",
        "rust/library/std/src/sys/net/connection/uefi/tcp4.rs",
        "rust/library/std/src/sys/net/connection/unsupported.rs",
        "rust/library/std/src/sys/net/connection/wasip1.rs",
        "rust/library/std/src/sys/net/connection/xous/dns.rs",
        "rust/library/std/src/sys/net/connection/xous/mod.rs",
        "rust/library/std/src/sys/net/connection/xous/tcplistener.rs",
        "rust/library/std/src/sys/net/connection/xous/tcpstream.rs",
        "rust/library/std/src/sys/net/connection/xous/udp.rs",
        "rust/library/std/src/sys/net/mod.rs",
        "rust/library/std/src/sys/os_str/bytes.rs",
        "rust/library/std/src/sys/os_str/bytes/tests.rs",
        "rust/library/std/src/sys/os_str/mod.rs",
        "rust/library/std/src/sys/os_str/wtf8.rs",
        "rust/library/std/src/sys/pal/common/mod.rs",
        "rust/library/std/src/sys/pal/common/small_c_string.rs",
        "rust/library/std/src/sys/pal/common/tests.rs",
        "rust/library/std/src/sys/pal/hermit/futex.rs",
        "rust/library/std/src/sys/pal/hermit/mod.rs",
        "rust/library/std/src/sys/pal/hermit/os.rs",
        "rust/library/std/src/sys/pal/hermit/thread.rs",
        "rust/library/std/src/sys/pal/hermit/time.rs",
        "rust/library/std/src/sys/pal/itron/abi.rs",
        "rust/library/std/src/sys/pal/itron/error.rs",
        "rust/library/std/src/sys/pal/itron/spin.rs",
        "rust/library/std/src/sys/pal/itron/task.rs",
        "rust/library/std/src/sys/pal/itron/thread.rs",
        "rust/library/std/src/sys/pal/itron/thread_parking.rs",
        "rust/library/std/src/sys/pal/itron/time.rs",
        "rust/library/std/src/sys/pal/itron/time/tests.rs",
        "rust/library/std/src/sys/pal/mod.rs",
        "rust/library/std/src/sys/pal/sgx/abi/mem.rs",
        "rust/library/std/src/sys/pal/sgx/abi/mod.rs",
        "rust/library/std/src/sys/pal/sgx/abi/panic.rs",
        "rust/library/std/src/sys/pal/sgx/abi/reloc.rs",
        "rust/library/std/src/sys/pal/sgx/abi/thread.rs",
        "rust/library/std/src/sys/pal/sgx/abi/tls/mod.rs",
        "rust/library/std/src/sys/pal/sgx/abi/tls/sync_bitset.rs",
        "rust/library/std/src/sys/pal/sgx/abi/tls/sync_bitset/tests.rs",
        "rust/library/std/src/sys/pal/sgx/abi/usercalls/alloc.rs",
        "rust/library/std/src/sys/pal/sgx/abi/usercalls/mod.rs",
        "rust/library/std/src/sys/pal/sgx/abi/usercalls/raw.rs",
        "rust/library/std/src/sys/pal/sgx/abi/usercalls/tests.rs",
        "rust/library/std/src/sys/pal/sgx/libunwind_integration.rs",
        "rust/library/std/src/sys/pal/sgx/mod.rs",
        "rust/library/std/src/sys/pal/sgx/os.rs",
        "rust/library/std/src/sys/pal/sgx/thread.rs",
        "rust/library/std/src/sys/pal/sgx/thread_parking.rs",
        "rust/library/std/src/sys/pal/sgx/time.rs",
        "rust/library/std/src/sys/pal/sgx/waitqueue/mod.rs",
        "rust/library/std/src/sys/pal/sgx/waitqueue/spin_mutex.rs",
        "rust/library/std/src/sys/pal/sgx/waitqueue/spin_mutex/tests.rs",
        "rust/library/std/src/sys/pal/sgx/waitqueue/tests.rs",
        "rust/library/std/src/sys/pal/sgx/waitqueue/unsafe_list.rs",
        "rust/library/std/src/sys/pal/sgx/waitqueue/unsafe_list/tests.rs",
        "rust/library/std/src/sys/pal/solid/abi/fs.rs",
        "rust/library/std/src/sys/pal/solid/abi/mod.rs",
        "rust/library/std/src/sys/pal/solid/abi/sockets.rs",
        "rust/library/std/src/sys/pal/solid/error.rs",
        "rust/library/std/src/sys/pal/solid/mod.rs",
        "rust/library/std/src/sys/pal/solid/os.rs",
        "rust/library/std/src/sys/pal/solid/time.rs",
        "rust/library/std/src/sys/pal/teeos/mod.rs",
        "rust/library/std/src/sys/pal/teeos/os.rs",
        "rust/library/std/src/sys/pal/teeos/thread.rs",
        "rust/library/std/src/sys/pal/trusty/mod.rs",
        "rust/library/std/src/sys/pal/uefi/helpers.rs",
        "rust/library/std/src/sys/pal/uefi/mod.rs",
        "rust/library/std/src/sys/pal/uefi/os.rs",
        "rust/library/std/src/sys/pal/uefi/tests.rs",
        "rust/library/std/src/sys/pal/uefi/thread.rs",
        "rust/library/std/src/sys/pal/uefi/time.rs",
        "rust/library/std/src/sys/pal/unix/fuchsia.rs",
        "rust/library/std/src/sys/pal/unix/futex.rs",
        "rust/library/std/src/sys/pal/unix/kernel_copy.rs",
        "rust/library/std/src/sys/pal/unix/kernel_copy/tests.rs",
        "rust/library/std/src/sys/pal/unix/linux/mod.rs",
        "rust/library/std/src/sys/pal/unix/linux/pidfd.rs",
        "rust/library/std/src/sys/pal/unix/linux/pidfd/tests.rs",
        "rust/library/std/src/sys/pal/unix/mod.rs",
        "rust/library/std/src/sys/pal/unix/os.rs",
        "rust/library/std/src/sys/pal/unix/os/tests.rs",
        "rust/library/std/src/sys/pal/unix/pipe.rs",
        "rust/library/std/src/sys/pal/unix/stack_overflow.rs",
        "rust/library/std/src/sys/pal/unix/stack_overflow/thread_info.rs",
        "rust/library/std/src/sys/pal/unix/sync/condvar.rs",
        "rust/library/std/src/sys/pal/unix/sync/mod.rs",
        "rust/library/std/src/sys/pal/unix/sync/mutex.rs",
        "rust/library/std/src/sys/pal/unix/thread.rs",
        "rust/library/std/src/sys/pal/unix/thread_parking.rs",
        "rust/library/std/src/sys/pal/unix/time.rs",
        "rust/library/std/src/sys/pal/unix/weak.rs",
        "rust/library/std/src/sys/pal/unsupported/common.rs",
        "rust/library/std/src/sys/pal/unsupported/mod.rs",
        "rust/library/std/src/sys/pal/unsupported/os.rs",
        "rust/library/std/src/sys/pal/unsupported/pipe.rs",
        "rust/library/std/src/sys/pal/unsupported/thread.rs",
        "rust/library/std/src/sys/pal/unsupported/time.rs",
        "rust/library/std/src/sys/pal/wasi/helpers.rs",
        "rust/library/std/src/sys/pal/wasi/mod.rs",
        "rust/library/std/src/sys/pal/wasi/os.rs",
        "rust/library/std/src/sys/pal/wasi/thread.rs",
        "rust/library/std/src/sys/pal/wasi/time.rs",
        "rust/library/std/src/sys/pal/wasip2/cabi_realloc.rs",
        "rust/library/std/src/sys/pal/wasip2/mod.rs",
        "rust/library/std/src/sys/pal/wasm/atomics/futex.rs",
        "rust/library/std/src/sys/pal/wasm/atomics/thread.rs",
        "rust/library/std/src/sys/pal/wasm/mod.rs",
        "rust/library/std/src/sys/pal/windows/api.rs",
        "rust/library/std/src/sys/pal/windows/api/tests.rs",
        "rust/library/std/src/sys/pal/windows/c.rs",
        "rust/library/std/src/sys/pal/windows/c/windows_sys.rs",
        "rust/library/std/src/sys/pal/windows/compat.rs",
        "rust/library/std/src/sys/pal/windows/futex.rs",
        "rust/library/std/src/sys/pal/windows/handle.rs",
        "rust/library/std/src/sys/pal/windows/handle/tests.rs",
        "rust/library/std/src/sys/pal/windows/mod.rs",
        "rust/library/std/src/sys/pal/windows/os.rs",
        "rust/library/std/src/sys/pal/windows/os/tests.rs",
        "rust/library/std/src/sys/pal/windows/pipe.rs",
        "rust/library/std/src/sys/pal/windows/stack_overflow.rs",
        "rust/library/std/src/sys/pal/windows/stack_overflow_uwp.rs",
        "rust/library/std/src/sys/pal/windows/thread.rs",
        "rust/library/std/src/sys/pal/windows/time.rs",
        "rust/library/std/src/sys/pal/xous/mod.rs",
        "rust/library/std/src/sys/pal/xous/os.rs",
        "rust/library/std/src/sys/pal/xous/os/params.rs",
        "rust/library/std/src/sys/pal/xous/os/params/tests.rs",
        "rust/library/std/src/sys/pal/xous/thread.rs",
        "rust/library/std/src/sys/pal/xous/time.rs",
        "rust/library/std/src/sys/pal/zkvm/abi.rs",
        "rust/library/std/src/sys/pal/zkvm/mod.rs",
        "rust/library/std/src/sys/pal/zkvm/os.rs",
        "rust/library/std/src/sys/path/cygwin.rs",
        "rust/library/std/src/sys/path/mod.rs",
        "rust/library/std/src/sys/path/sgx.rs",
        "rust/library/std/src/sys/path/uefi.rs",
        "rust/library/std/src/sys/path/unix.rs",
        "rust/library/std/src/sys/path/unsupported_backslash.rs",
        "rust/library/std/src/sys/path/windows.rs",
        "rust/library/std/src/sys/path/windows/tests.rs",
        "rust/library/std/src/sys/path/windows_prefix.rs",
        "rust/library/std/src/sys/personality/dwarf/eh.rs",
        "rust/library/std/src/sys/personality/dwarf/mod.rs",
        "rust/library/std/src/sys/personality/dwarf/tests.rs",
        "rust/library/std/src/sys/personality/emcc.rs",
        "rust/library/std/src/sys/personality/gcc.rs",
        "rust/library/std/src/sys/personality/mod.rs",
        "rust/library/std/src/sys/process/env.rs",
        "rust/library/std/src/sys/process/mod.rs",
        "rust/library/std/src/sys/process/uefi.rs",
        "rust/library/std/src/sys/process/unix/common.rs",
        "rust/library/std/src/sys/process/unix/common/cstring_array.rs",
        "rust/library/std/src/sys/process/unix/common/tests.rs",
        "rust/library/std/src/sys/process/unix/fuchsia.rs",
        "rust/library/std/src/sys/process/unix/mod.rs",
        "rust/library/std/src/sys/process/unix/unix.rs",
        "rust/library/std/src/sys/process/unix/unix/tests.rs",
        "rust/library/std/src/sys/process/unix/unsupported.rs",
        "rust/library/std/src/sys/process/unix/unsupported/wait_status.rs",
        "rust/library/std/src/sys/process/unix/unsupported/wait_status/tests.rs",
        "rust/library/std/src/sys/process/unix/vxworks.rs",
        "rust/library/std/src/sys/process/unsupported.rs",
        "rust/library/std/src/sys/process/windows.rs",
        "rust/library/std/src/sys/process/windows/tests.rs",
        "rust/library/std/src/sys/random/apple.rs",
        "rust/library/std/src/sys/random/arc4random.rs",
        "rust/library/std/src/sys/random/espidf.rs",
        "rust/library/std/src/sys/random/fuchsia.rs",
        "rust/library/std/src/sys/random/getentropy.rs",
        "rust/library/std/src/sys/random/getrandom.rs",
        "rust/library/std/src/sys/random/hermit.rs",
        "rust/library/std/src/sys/random/linux.rs",
        "rust/library/std/src/sys/random/mod.rs",
        "rust/library/std/src/sys/random/redox.rs",
        "rust/library/std/src/sys/random/sgx.rs",
        "rust/library/std/src/sys/random/solid.rs",
        "rust/library/std/src/sys/random/teeos.rs",
        "rust/library/std/src/sys/random/trusty.rs",
        "rust/library/std/src/sys/random/uefi.rs",
        "rust/library/std/src/sys/random/unix_legacy.rs",
        "rust/library/std/src/sys/random/unsupported.rs",
        "rust/library/std/src/sys/random/vxworks.rs",
        "rust/library/std/src/sys/random/wasi.rs",
        "rust/library/std/src/sys/random/windows.rs",
        "rust/library/std/src/sys/random/zkvm.rs",
        "rust/library/std/src/sys/stdio/mod.rs",
        "rust/library/std/src/sys/stdio/sgx.rs",
        "rust/library/std/src/sys/stdio/solid.rs",
        "rust/library/std/src/sys/stdio/teeos.rs",
        "rust/library/std/src/sys/stdio/trusty.rs",
        "rust/library/std/src/sys/stdio/uefi.rs",
        "rust/library/std/src/sys/stdio/unix.rs",
        "rust/library/std/src/sys/stdio/unsupported.rs",
        "rust/library/std/src/sys/stdio/wasi.rs",
        "rust/library/std/src/sys/stdio/windows.rs",
        "rust/library/std/src/sys/stdio/windows/tests.rs",
        "rust/library/std/src/sys/stdio/xous.rs",
        "rust/library/std/src/sys/stdio/zkvm.rs",
        "rust/library/std/src/sys/sync/condvar/futex.rs",
        "rust/library/std/src/sys/sync/condvar/itron.rs",
        "rust/library/std/src/sys/sync/condvar/mod.rs",
        "rust/library/std/src/sys/sync/condvar/no_threads.rs",
        "rust/library/std/src/sys/sync/condvar/pthread.rs",
        "rust/library/std/src/sys/sync/condvar/sgx.rs",
        "rust/library/std/src/sys/sync/condvar/windows7.rs",
        "rust/library/std/src/sys/sync/condvar/xous.rs",
        "rust/library/std/src/sys/sync/mod.rs",
        "rust/library/std/src/sys/sync/mutex/fuchsia.rs",
        "rust/library/std/src/sys/sync/mutex/futex.rs",
        "rust/library/std/src/sys/sync/mutex/itron.rs",
        "rust/library/std/src/sys/sync/mutex/mod.rs",
        "rust/library/std/src/sys/sync/mutex/no_threads.rs",
        "rust/library/std/src/sys/sync/mutex/pthread.rs",
        "rust/library/std/src/sys/sync/mutex/sgx.rs",
        "rust/library/std/src/sys/sync/mutex/windows7.rs",
        "rust/library/std/src/sys/sync/mutex/xous.rs",
        "rust/library/std/src/sys/sync/once/futex.rs",
        "rust/library/std/src/sys/sync/once/mod.rs",
        "rust/library/std/src/sys/sync/once/no_threads.rs",
        "rust/library/std/src/sys/sync/once/queue.rs",
        "rust/library/std/src/sys/sync/once_box.rs",
        "rust/library/std/src/sys/sync/rwlock/futex.rs",
        "rust/library/std/src/sys/sync/rwlock/mod.rs",
        "rust/library/std/src/sys/sync/rwlock/no_threads.rs",
        "rust/library/std/src/sys/sync/rwlock/queue.rs",
        "rust/library/std/src/sys/sync/rwlock/solid.rs",
        "rust/library/std/src/sys/sync/rwlock/teeos.rs",
        "rust/library/std/src/sys/sync/thread_parking/darwin.rs",
        "rust/library/std/src/sys/sync/thread_parking/futex.rs",
        "rust/library/std/src/sys/sync/thread_parking/id.rs",
        "rust/library/std/src/sys/sync/thread_parking/mod.rs",
        "rust/library/std/src/sys/sync/thread_parking/pthread.rs",
        "rust/library/std/src/sys/sync/thread_parking/unsupported.rs",
        "rust/library/std/src/sys/sync/thread_parking/windows7.rs",
        "rust/library/std/src/sys/sync/thread_parking/xous.rs",
        "rust/library/std/src/sys/thread_local/destructors/linux_like.rs",
        "rust/library/std/src/sys/thread_local/destructors/list.rs",
        "rust/library/std/src/sys/thread_local/guard/apple.rs",
        "rust/library/std/src/sys/thread_local/guard/key.rs",
        "rust/library/std/src/sys/thread_local/guard/solid.rs",
        "rust/library/std/src/sys/thread_local/guard/windows.rs",
        "rust/library/std/src/sys/thread_local/key/racy.rs",
        "rust/library/std/src/sys/thread_local/key/sgx.rs",
        "rust/library/std/src/sys/thread_local/key/tests.rs",
        "rust/library/std/src/sys/thread_local/key/unix.rs",
        "rust/library/std/src/sys/thread_local/key/windows.rs",
        "rust/library/std/src/sys/thread_local/key/xous.rs",
        "rust/library/std/src/sys/thread_local/mod.rs",
        "rust/library/std/src/sys/thread_local/native/eager.rs",
        "rust/library/std/src/sys/thread_local/native/lazy.rs",
        "rust/library/std/src/sys/thread_local/native/mod.rs",
        "rust/library/std/src/sys/thread_local/no_threads.rs",
        "rust/library/std/src/sys/thread_local/os.rs",
        "rust/library/std/src/sys_common/mod.rs",
        "rust/library/std/src/sys_common/tests.rs",
        "rust/library/std/src/sys_common/wstr.rs",
        "rust/library/std/src/sys_common/wtf8.rs",
        "rust/library/std/src/sys_common/wtf8/tests.rs",
        "rust/library/std/src/test_helpers.rs",
        "rust/library/std/src/thread/current.rs",
        "rust/library/std/src/thread/local.rs",
        "rust/library/std/src/thread/mod.rs",
        "rust/library/std/src/thread/scoped.rs",
        "rust/library/std/src/thread/spawnhook.rs",
        "rust/library/std/src/thread/tests.rs",
        "rust/library/std/src/time.rs",
        "rust/library/stdarch/crates/core_arch/src/core_arch_docs.md",
    ],
    crate = "std",
    crate_root = "rust/library/std/src/lib.rs",
    edition = "2024",
    env = {
        "OUT_DIR": "$(location :std-0.0.0-build-script-run[out_dir])",
    },
    features = [
        "backtrace",
        "std_detect_dlsym_getauxval",
        "std_detect_file_io",
    ],
    platform = {
        "linux-arm64-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
            deps = [
                ":addr2line-0.25.0",
                ":libc-0.2.175",
                ":miniz_oxide-0.8.9",
                ":object-0.37.3",
            ],
        ),
        "linux-riscv64-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
            deps = [
                ":addr2line-0.25.0",
                ":libc-0.2.175",
                ":miniz_oxide-0.8.9",
                ":object-0.37.3",
            ],
        ),
        "linux-x86_64-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
            deps = [
                ":addr2line-0.25.0",
                ":libc-0.2.175",
                ":miniz_oxide-0.8.9",
                ":object-0.37.3",
            ],
        ),
        "macos-arm64-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
            deps = [
                ":addr2line-0.25.0",
                ":libc-0.2.175",
                ":miniz_oxide-0.8.9",
                ":object-0.37.3",
            ],
        ),
        "macos-x86_64-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
            deps = [
                ":addr2line-0.25.0",
                ":libc-0.2.175",
                ":miniz_oxide-0.8.9",
                ":object-0.37.3",
            ],
        ),
        "windows-gnu-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
            deps = [
                ":addr2line-0.25.0",
                ":libc-0.2.175",
                ":miniz_oxide-0.8.9",
                ":object-0.37.3",
                ":windows-targets-0.0.0",
            ],
        ),
        "windows-msvc-library": dict(
            deps = [":windows-targets-0.0.0"],
        ),
    },
    preferred_linkage = "any",
    rustc_flags = [
        "-Zforce-unstable-if-unmarked",
        "@$(location :std-0.0.0-build-script-run[rustc_flags])",
    ],
    visibility = [],
    deps = [
        ":alloc-0.0.0",
        ":cfg-if-1.0.3",
        ":compiler_builtins-0.1.160",
        ":core-0.0.0",
        ":hashbrown-0.15.5",
        ":panic_unwind-0.0.0",
        ":rustc-demangle-0.1.26",
        ":std_detect-0.1.5",
        ":unwind-0.0.0",
    ],
)

rust_bootstrap_binary(
    name = "std-0.0.0-build-script-build",
    srcs = [
        "rust/library/backtrace/src/backtrace/libunwind.rs",
        "rust/library/backtrace/src/backtrace/miri.rs",
        "rust/library/backtrace/src/backtrace/mod.rs",
        "rust/library/backtrace/src/backtrace/noop.rs",
        "rust/library/backtrace/src/backtrace/win32.rs",
        "rust/library/backtrace/src/backtrace/win64.rs",
        "rust/library/backtrace/src/capture.rs",
        "rust/library/backtrace/src/dbghelp.rs",
        "rust/library/backtrace/src/lib.rs",
        "rust/library/backtrace/src/print.rs",
        "rust/library/backtrace/src/print/fuchsia.rs",
        "rust/library/backtrace/src/symbolize/dbghelp.rs",
        "rust/library/backtrace/src/symbolize/gimli.rs",
        "rust/library/backtrace/src/symbolize/gimli/coff.rs",
        "rust/library/backtrace/src/symbolize/gimli/elf.rs",
        "rust/library/backtrace/src/symbolize/gimli/libs_aix.rs",
        "rust/library/backtrace/src/symbolize/gimli/libs_dl_iterate_phdr.rs",
        "rust/library/backtrace/src/symbolize/gimli/libs_haiku.rs",
        "rust/library/backtrace/src/symbolize/gimli/libs_illumos.rs",
        "rust/library/backtrace/src/symbolize/gimli/libs_libnx.rs",
        "rust/library/backtrace/src/symbolize/gimli/libs_macos.rs",
        "rust/library/backtrace/src/symbolize/gimli/libs_windows.rs",
        "rust/library/backtrace/src/symbolize/gimli/lru.rs",
        "rust/library/backtrace/src/symbolize/gimli/macho.rs",
        "rust/library/backtrace/src/symbolize/gimli/mmap_fake.rs",
        "rust/library/backtrace/src/symbolize/gimli/mmap_unix.rs",
        "rust/library/backtrace/src/symbolize/gimli/mmap_windows.rs",
        "rust/library/backtrace/src/symbolize/gimli/parse_running_mmaps_unix.rs",
        "rust/library/backtrace/src/symbolize/gimli/stash.rs",
        "rust/library/backtrace/src/symbolize/gimli/xcoff.rs",
        "rust/library/backtrace/src/symbolize/miri.rs",
        "rust/library/backtrace/src/symbolize/mod.rs",
        "rust/library/backtrace/src/symbolize/noop.rs",
        "rust/library/backtrace/src/types.rs",
        "rust/library/backtrace/src/windows_sys.rs",
        "rust/library/backtrace/src/windows_sys_arm32_shim.rs",
        "rust/library/core/src/error.md",
        "rust/library/core/src/ffi/c_char.md",
        "rust/library/core/src/ffi/c_double.md",
        "rust/library/core/src/ffi/c_float.md",
        "rust/library/core/src/ffi/c_int.md",
        "rust/library/core/src/ffi/c_long.md",
        "rust/library/core/src/ffi/c_longlong.md",
        "rust/library/core/src/ffi/c_schar.md",
        "rust/library/core/src/ffi/c_short.md",
        "rust/library/core/src/ffi/c_uchar.md",
        "rust/library/core/src/ffi/c_uint.md",
        "rust/library/core/src/ffi/c_ulong.md",
        "rust/library/core/src/ffi/c_ulonglong.md",
        "rust/library/core/src/ffi/c_ushort.md",
        "rust/library/core/src/ffi/c_void.md",
        "rust/library/core/src/macros/panic.md",
        "rust/library/core/src/primitive_docs.rs",
        "rust/library/portable-simd/crates/core_simd/src/core_simd_docs.md",
        "rust/library/portable-simd/crates/std_float/src/lib.rs",
        "rust/library/portable-simd/crates/std_float/tests/float.rs",
        "rust/library/std/benches/hash/map.rs",
        "rust/library/std/benches/hash/mod.rs",
        "rust/library/std/benches/hash/set_ops.rs",
        "rust/library/std/benches/lib.rs",
        "rust/library/std/benches/path.rs",
        "rust/library/std/benches/time.rs",
        "rust/library/std/build.rs",
        "rust/library/std/src/alloc.rs",
        "rust/library/std/src/ascii.rs",
        "rust/library/std/src/backtrace.rs",
        "rust/library/std/src/backtrace/tests.rs",
        "rust/library/std/src/bstr.rs",
        "rust/library/std/src/collections/hash/map.rs",
        "rust/library/std/src/collections/hash/map/tests.rs",
        "rust/library/std/src/collections/hash/mod.rs",
        "rust/library/std/src/collections/hash/set.rs",
        "rust/library/std/src/collections/hash/set/tests.rs",
        "rust/library/std/src/collections/mod.rs",
        "rust/library/std/src/env.rs",
        "rust/library/std/src/error.rs",
        "rust/library/std/src/ffi/c_str.rs",
        "rust/library/std/src/ffi/mod.rs",
        "rust/library/std/src/ffi/os_str.rs",
        "rust/library/std/src/ffi/os_str/tests.rs",
        "rust/library/std/src/fs.rs",
        "rust/library/std/src/fs/tests.rs",
        "rust/library/std/src/hash/mod.rs",
        "rust/library/std/src/hash/random.rs",
        "rust/library/std/src/io/buffered/bufreader.rs",
        "rust/library/std/src/io/buffered/bufreader/buffer.rs",
        "rust/library/std/src/io/buffered/bufwriter.rs",
        "rust/library/std/src/io/buffered/linewriter.rs",
        "rust/library/std/src/io/buffered/linewritershim.rs",
        "rust/library/std/src/io/buffered/mod.rs",
        "rust/library/std/src/io/buffered/tests.rs",
        "rust/library/std/src/io/copy.rs",
        "rust/library/std/src/io/copy/tests.rs",
        "rust/library/std/src/io/cursor.rs",
        "rust/library/std/src/io/cursor/tests.rs",
        "rust/library/std/src/io/error.rs",
        "rust/library/std/src/io/error/repr_bitpacked.rs",
        "rust/library/std/src/io/error/repr_unpacked.rs",
        "rust/library/std/src/io/error/tests.rs",
        "rust/library/std/src/io/impls.rs",
        "rust/library/std/src/io/impls/tests.rs",
        "rust/library/std/src/io/mod.rs",
        "rust/library/std/src/io/pipe.rs",
        "rust/library/std/src/io/pipe/tests.rs",
        "rust/library/std/src/io/prelude.rs",
        "rust/library/std/src/io/stdio.rs",
        "rust/library/std/src/io/stdio/tests.rs",
        "rust/library/std/src/io/tests.rs",
        "rust/library/std/src/io/util.rs",
        "rust/library/std/src/io/util/tests.rs",
        "rust/library/std/src/keyword_docs.rs",
        "rust/library/std/src/lib.miri.rs",
        "rust/library/std/src/lib.rs",
        "rust/library/std/src/macros.rs",
        "rust/library/std/src/net/ip_addr.rs",
        "rust/library/std/src/net/ip_addr/tests.rs",
        "rust/library/std/src/net/mod.rs",
        "rust/library/std/src/net/socket_addr.rs",
        "rust/library/std/src/net/socket_addr/tests.rs",
        "rust/library/std/src/net/tcp.rs",
        "rust/library/std/src/net/tcp/tests.rs",
        "rust/library/std/src/net/test.rs",
        "rust/library/std/src/net/udp.rs",
        "rust/library/std/src/net/udp/tests.rs",
        "rust/library/std/src/num/f128.rs",
        "rust/library/std/src/num/f16.rs",
        "rust/library/std/src/num/f32.rs",
        "rust/library/std/src/num/f64.rs",
        "rust/library/std/src/num/mod.rs",
        "rust/library/std/src/os/aix/fs.rs",
        "rust/library/std/src/os/aix/mod.rs",
        "rust/library/std/src/os/aix/raw.rs",
        "rust/library/std/src/os/android/fs.rs",
        "rust/library/std/src/os/android/mod.rs",
        "rust/library/std/src/os/android/net.rs",
        "rust/library/std/src/os/android/raw.rs",
        "rust/library/std/src/os/cygwin/fs.rs",
        "rust/library/std/src/os/cygwin/mod.rs",
        "rust/library/std/src/os/cygwin/raw.rs",
        "rust/library/std/src/os/darwin/fs.rs",
        "rust/library/std/src/os/darwin/mod.rs",
        "rust/library/std/src/os/darwin/raw.rs",
        "rust/library/std/src/os/dragonfly/fs.rs",
        "rust/library/std/src/os/dragonfly/mod.rs",
        "rust/library/std/src/os/dragonfly/raw.rs",
        "rust/library/std/src/os/emscripten/fs.rs",
        "rust/library/std/src/os/emscripten/mod.rs",
        "rust/library/std/src/os/emscripten/raw.rs",
        "rust/library/std/src/os/espidf/fs.rs",
        "rust/library/std/src/os/espidf/mod.rs",
        "rust/library/std/src/os/espidf/raw.rs",
        "rust/library/std/src/os/fd/mod.rs",
        "rust/library/std/src/os/fd/net.rs",
        "rust/library/std/src/os/fd/owned.rs",
        "rust/library/std/src/os/fd/raw.rs",
        "rust/library/std/src/os/fd/tests.rs",
        "rust/library/std/src/os/fortanix_sgx/arch.rs",
        "rust/library/std/src/os/fortanix_sgx/ffi.rs",
        "rust/library/std/src/os/fortanix_sgx/io.rs",
        "rust/library/std/src/os/fortanix_sgx/mod.rs",
        "rust/library/std/src/os/freebsd/fs.rs",
        "rust/library/std/src/os/freebsd/mod.rs",
        "rust/library/std/src/os/freebsd/net.rs",
        "rust/library/std/src/os/freebsd/raw.rs",
        "rust/library/std/src/os/fuchsia/fs.rs",
        "rust/library/std/src/os/fuchsia/mod.rs",
        "rust/library/std/src/os/fuchsia/raw.rs",
        "rust/library/std/src/os/haiku/fs.rs",
        "rust/library/std/src/os/haiku/mod.rs",
        "rust/library/std/src/os/haiku/raw.rs",
        "rust/library/std/src/os/hermit/ffi.rs",
        "rust/library/std/src/os/hermit/io/mod.rs",
        "rust/library/std/src/os/hermit/io/net.rs",
        "rust/library/std/src/os/hermit/mod.rs",
        "rust/library/std/src/os/horizon/fs.rs",
        "rust/library/std/src/os/horizon/mod.rs",
        "rust/library/std/src/os/horizon/raw.rs",
        "rust/library/std/src/os/hurd/fs.rs",
        "rust/library/std/src/os/hurd/mod.rs",
        "rust/library/std/src/os/hurd/raw.rs",
        "rust/library/std/src/os/illumos/fs.rs",
        "rust/library/std/src/os/illumos/mod.rs",
        "rust/library/std/src/os/illumos/raw.rs",
        "rust/library/std/src/os/ios/mod.rs",
        "rust/library/std/src/os/l4re/fs.rs",
        "rust/library/std/src/os/l4re/mod.rs",
        "rust/library/std/src/os/l4re/raw.rs",
        "rust/library/std/src/os/linux/fs.rs",
        "rust/library/std/src/os/linux/mod.rs",
        "rust/library/std/src/os/linux/net.rs",
        "rust/library/std/src/os/linux/process.rs",
        "rust/library/std/src/os/linux/raw.rs",
        "rust/library/std/src/os/macos/mod.rs",
        "rust/library/std/src/os/mod.rs",
        "rust/library/std/src/os/net/linux_ext/addr.rs",
        "rust/library/std/src/os/net/linux_ext/mod.rs",
        "rust/library/std/src/os/net/linux_ext/socket.rs",
        "rust/library/std/src/os/net/linux_ext/tcp.rs",
        "rust/library/std/src/os/net/linux_ext/tests.rs",
        "rust/library/std/src/os/net/mod.rs",
        "rust/library/std/src/os/netbsd/fs.rs",
        "rust/library/std/src/os/netbsd/mod.rs",
        "rust/library/std/src/os/netbsd/net.rs",
        "rust/library/std/src/os/netbsd/raw.rs",
        "rust/library/std/src/os/nto/fs.rs",
        "rust/library/std/src/os/nto/mod.rs",
        "rust/library/std/src/os/nto/raw.rs",
        "rust/library/std/src/os/nuttx/fs.rs",
        "rust/library/std/src/os/nuttx/mod.rs",
        "rust/library/std/src/os/nuttx/raw.rs",
        "rust/library/std/src/os/openbsd/fs.rs",
        "rust/library/std/src/os/openbsd/mod.rs",
        "rust/library/std/src/os/openbsd/raw.rs",
        "rust/library/std/src/os/raw/mod.rs",
        "rust/library/std/src/os/raw/tests.rs",
        "rust/library/std/src/os/redox/fs.rs",
        "rust/library/std/src/os/redox/mod.rs",
        "rust/library/std/src/os/redox/raw.rs",
        "rust/library/std/src/os/rtems/fs.rs",
        "rust/library/std/src/os/rtems/mod.rs",
        "rust/library/std/src/os/rtems/raw.rs",
        "rust/library/std/src/os/solaris/fs.rs",
        "rust/library/std/src/os/solaris/mod.rs",
        "rust/library/std/src/os/solaris/raw.rs",
        "rust/library/std/src/os/solid/ffi.rs",
        "rust/library/std/src/os/solid/io.rs",
        "rust/library/std/src/os/solid/mod.rs",
        "rust/library/std/src/os/trusty/io/mod.rs",
        "rust/library/std/src/os/trusty/mod.rs",
        "rust/library/std/src/os/uefi/env.rs",
        "rust/library/std/src/os/uefi/mod.rs",
        "rust/library/std/src/os/unix/ffi/mod.rs",
        "rust/library/std/src/os/unix/ffi/os_str.rs",
        "rust/library/std/src/os/unix/fs.rs",
        "rust/library/std/src/os/unix/fs/tests.rs",
        "rust/library/std/src/os/unix/io/mod.rs",
        "rust/library/std/src/os/unix/io/tests.rs",
        "rust/library/std/src/os/unix/mod.rs",
        "rust/library/std/src/os/unix/net/addr.rs",
        "rust/library/std/src/os/unix/net/ancillary.rs",
        "rust/library/std/src/os/unix/net/datagram.rs",
        "rust/library/std/src/os/unix/net/listener.rs",
        "rust/library/std/src/os/unix/net/mod.rs",
        "rust/library/std/src/os/unix/net/stream.rs",
        "rust/library/std/src/os/unix/net/tests.rs",
        "rust/library/std/src/os/unix/net/ucred.rs",
        "rust/library/std/src/os/unix/net/ucred/tests.rs",
        "rust/library/std/src/os/unix/process.rs",
        "rust/library/std/src/os/unix/raw.rs",
        "rust/library/std/src/os/unix/thread.rs",
        "rust/library/std/src/os/vita/fs.rs",
        "rust/library/std/src/os/vita/mod.rs",
        "rust/library/std/src/os/vita/raw.rs",
        "rust/library/std/src/os/vxworks/fs.rs",
        "rust/library/std/src/os/vxworks/mod.rs",
        "rust/library/std/src/os/vxworks/raw.rs",
        "rust/library/std/src/os/wasi/ffi.rs",
        "rust/library/std/src/os/wasi/fs.rs",
        "rust/library/std/src/os/wasi/io/mod.rs",
        "rust/library/std/src/os/wasi/io/tests.rs",
        "rust/library/std/src/os/wasi/mod.rs",
        "rust/library/std/src/os/wasi/net/mod.rs",
        "rust/library/std/src/os/wasip2/mod.rs",
        "rust/library/std/src/os/windows/ffi.rs",
        "rust/library/std/src/os/windows/fs.rs",
        "rust/library/std/src/os/windows/io/handle.rs",
        "rust/library/std/src/os/windows/io/mod.rs",
        "rust/library/std/src/os/windows/io/raw.rs",
        "rust/library/std/src/os/windows/io/socket.rs",
        "rust/library/std/src/os/windows/io/tests.rs",
        "rust/library/std/src/os/windows/mod.rs",
        "rust/library/std/src/os/windows/process.rs",
        "rust/library/std/src/os/windows/raw.rs",
        "rust/library/std/src/os/windows/thread.rs",
        "rust/library/std/src/os/xous/ffi.rs",
        "rust/library/std/src/os/xous/ffi/definitions.rs",
        "rust/library/std/src/os/xous/ffi/definitions/memoryflags.rs",
        "rust/library/std/src/os/xous/mod.rs",
        "rust/library/std/src/os/xous/services.rs",
        "rust/library/std/src/os/xous/services/dns.rs",
        "rust/library/std/src/os/xous/services/log.rs",
        "rust/library/std/src/os/xous/services/net.rs",
        "rust/library/std/src/os/xous/services/systime.rs",
        "rust/library/std/src/os/xous/services/ticktimer.rs",
        "rust/library/std/src/panic.rs",
        "rust/library/std/src/panicking.rs",
        "rust/library/std/src/pat.rs",
        "rust/library/std/src/path.rs",
        "rust/library/std/src/prelude/mod.rs",
        "rust/library/std/src/prelude/v1.rs",
        "rust/library/std/src/process.rs",
        "rust/library/std/src/process/tests.rs",
        "rust/library/std/src/random.rs",
        "rust/library/std/src/rt.rs",
        "rust/library/std/src/sync/barrier.rs",
        "rust/library/std/src/sync/lazy_lock.rs",
        "rust/library/std/src/sync/mod.rs",
        "rust/library/std/src/sync/mpmc/array.rs",
        "rust/library/std/src/sync/mpmc/context.rs",
        "rust/library/std/src/sync/mpmc/counter.rs",
        "rust/library/std/src/sync/mpmc/error.rs",
        "rust/library/std/src/sync/mpmc/list.rs",
        "rust/library/std/src/sync/mpmc/mod.rs",
        "rust/library/std/src/sync/mpmc/select.rs",
        "rust/library/std/src/sync/mpmc/tests.rs",
        "rust/library/std/src/sync/mpmc/utils.rs",
        "rust/library/std/src/sync/mpmc/waker.rs",
        "rust/library/std/src/sync/mpmc/zero.rs",
        "rust/library/std/src/sync/mpsc.rs",
        "rust/library/std/src/sync/once_lock.rs",
        "rust/library/std/src/sync/poison.rs",
        "rust/library/std/src/sync/poison/condvar.rs",
        "rust/library/std/src/sync/poison/mutex.rs",
        "rust/library/std/src/sync/poison/once.rs",
        "rust/library/std/src/sync/poison/rwlock.rs",
        "rust/library/std/src/sync/reentrant_lock.rs",
        "rust/library/std/src/sys/alloc/hermit.rs",
        "rust/library/std/src/sys/alloc/mod.rs",
        "rust/library/std/src/sys/alloc/sgx.rs",
        "rust/library/std/src/sys/alloc/solid.rs",
        "rust/library/std/src/sys/alloc/uefi.rs",
        "rust/library/std/src/sys/alloc/unix.rs",
        "rust/library/std/src/sys/alloc/wasm.rs",
        "rust/library/std/src/sys/alloc/windows.rs",
        "rust/library/std/src/sys/alloc/windows/tests.rs",
        "rust/library/std/src/sys/alloc/xous.rs",
        "rust/library/std/src/sys/alloc/zkvm.rs",
        "rust/library/std/src/sys/anonymous_pipe/mod.rs",
        "rust/library/std/src/sys/anonymous_pipe/unix.rs",
        "rust/library/std/src/sys/anonymous_pipe/unsupported.rs",
        "rust/library/std/src/sys/anonymous_pipe/windows.rs",
        "rust/library/std/src/sys/args/common.rs",
        "rust/library/std/src/sys/args/mod.rs",
        "rust/library/std/src/sys/args/sgx.rs",
        "rust/library/std/src/sys/args/uefi.rs",
        "rust/library/std/src/sys/args/unix.rs",
        "rust/library/std/src/sys/args/unsupported.rs",
        "rust/library/std/src/sys/args/wasi.rs",
        "rust/library/std/src/sys/args/windows.rs",
        "rust/library/std/src/sys/args/windows/tests.rs",
        "rust/library/std/src/sys/args/xous.rs",
        "rust/library/std/src/sys/args/zkvm.rs",
        "rust/library/std/src/sys/backtrace.rs",
        "rust/library/std/src/sys/cmath.rs",
        "rust/library/std/src/sys/env/common.rs",
        "rust/library/std/src/sys/env/hermit.rs",
        "rust/library/std/src/sys/env/mod.rs",
        "rust/library/std/src/sys/env/sgx.rs",
        "rust/library/std/src/sys/env/solid.rs",
        "rust/library/std/src/sys/env/uefi.rs",
        "rust/library/std/src/sys/env/unix.rs",
        "rust/library/std/src/sys/env/unsupported.rs",
        "rust/library/std/src/sys/env/wasi.rs",
        "rust/library/std/src/sys/env/windows.rs",
        "rust/library/std/src/sys/env/xous.rs",
        "rust/library/std/src/sys/env/zkvm.rs",
        "rust/library/std/src/sys/env_consts.rs",
        "rust/library/std/src/sys/exit_guard.rs",
        "rust/library/std/src/sys/fd/hermit.rs",
        "rust/library/std/src/sys/fd/mod.rs",
        "rust/library/std/src/sys/fd/sgx.rs",
        "rust/library/std/src/sys/fd/unix.rs",
        "rust/library/std/src/sys/fd/unix/tests.rs",
        "rust/library/std/src/sys/fd/wasi.rs",
        "rust/library/std/src/sys/fs/common.rs",
        "rust/library/std/src/sys/fs/hermit.rs",
        "rust/library/std/src/sys/fs/mod.rs",
        "rust/library/std/src/sys/fs/solid.rs",
        "rust/library/std/src/sys/fs/uefi.rs",
        "rust/library/std/src/sys/fs/unix.rs",
        "rust/library/std/src/sys/fs/unix/tests.rs",
        "rust/library/std/src/sys/fs/unsupported.rs",
        "rust/library/std/src/sys/fs/wasi.rs",
        "rust/library/std/src/sys/fs/windows.rs",
        "rust/library/std/src/sys/fs/windows/remove_dir_all.rs",
        "rust/library/std/src/sys/io/io_slice/iovec.rs",
        "rust/library/std/src/sys/io/io_slice/unsupported.rs",
        "rust/library/std/src/sys/io/io_slice/wasi.rs",
        "rust/library/std/src/sys/io/io_slice/windows.rs",
        "rust/library/std/src/sys/io/is_terminal/hermit.rs",
        "rust/library/std/src/sys/io/is_terminal/isatty.rs",
        "rust/library/std/src/sys/io/is_terminal/unsupported.rs",
        "rust/library/std/src/sys/io/is_terminal/windows.rs",
        "rust/library/std/src/sys/io/mod.rs",
        "rust/library/std/src/sys/mod.rs",
        "rust/library/std/src/sys/net/connection/sgx.rs",
        "rust/library/std/src/sys/net/connection/socket.rs",
        "rust/library/std/src/sys/net/connection/socket/hermit.rs",
        "rust/library/std/src/sys/net/connection/socket/solid.rs",
        "rust/library/std/src/sys/net/connection/socket/tests.rs",
        "rust/library/std/src/sys/net/connection/socket/unix.rs",
        "rust/library/std/src/sys/net/connection/socket/wasip2.rs",
        "rust/library/std/src/sys/net/connection/socket/windows.rs",
        "rust/library/std/src/sys/net/connection/uefi/mod.rs",
        "rust/library/std/src/sys/net/connection/uefi/tcp.rs",
        "rust/library/std/src/sys/net/connection/uefi/tcp4.rs",
        "rust/library/std/src/sys/net/connection/unsupported.rs",
        "rust/library/std/src/sys/net/connection/wasip1.rs",
        "rust/library/std/src/sys/net/connection/xous/dns.rs",
        "rust/library/std/src/sys/net/connection/xous/mod.rs",
        "rust/library/std/src/sys/net/connection/xous/tcplistener.rs",
        "rust/library/std/src/sys/net/connection/xous/tcpstream.rs",
        "rust/library/std/src/sys/net/connection/xous/udp.rs",
        "rust/library/std/src/sys/net/mod.rs",
        "rust/library/std/src/sys/os_str/bytes.rs",
        "rust/library/std/src/sys/os_str/bytes/tests.rs",
        "rust/library/std/src/sys/os_str/mod.rs",
        "rust/library/std/src/sys/os_str/wtf8.rs",
        "rust/library/std/src/sys/pal/common/mod.rs",
        "rust/library/std/src/sys/pal/common/small_c_string.rs",
        "rust/library/std/src/sys/pal/common/tests.rs",
        "rust/library/std/src/sys/pal/hermit/futex.rs",
        "rust/library/std/src/sys/pal/hermit/mod.rs",
        "rust/library/std/src/sys/pal/hermit/os.rs",
        "rust/library/std/src/sys/pal/hermit/thread.rs",
        "rust/library/std/src/sys/pal/hermit/time.rs",
        "rust/library/std/src/sys/pal/itron/abi.rs",
        "rust/library/std/src/sys/pal/itron/error.rs",
        "rust/library/std/src/sys/pal/itron/spin.rs",
        "rust/library/std/src/sys/pal/itron/task.rs",
        "rust/library/std/src/sys/pal/itron/thread.rs",
        "rust/library/std/src/sys/pal/itron/thread_parking.rs",
        "rust/library/std/src/sys/pal/itron/time.rs",
        "rust/library/std/src/sys/pal/itron/time/tests.rs",
        "rust/library/std/src/sys/pal/mod.rs",
        "rust/library/std/src/sys/pal/sgx/abi/mem.rs",
        "rust/library/std/src/sys/pal/sgx/abi/mod.rs",
        "rust/library/std/src/sys/pal/sgx/abi/panic.rs",
        "rust/library/std/src/sys/pal/sgx/abi/reloc.rs",
        "rust/library/std/src/sys/pal/sgx/abi/thread.rs",
        "rust/library/std/src/sys/pal/sgx/abi/tls/mod.rs",
        "rust/library/std/src/sys/pal/sgx/abi/tls/sync_bitset.rs",
        "rust/library/std/src/sys/pal/sgx/abi/tls/sync_bitset/tests.rs",
        "rust/library/std/src/sys/pal/sgx/abi/usercalls/alloc.rs",
        "rust/library/std/src/sys/pal/sgx/abi/usercalls/mod.rs",
        "rust/library/std/src/sys/pal/sgx/abi/usercalls/raw.rs",
        "rust/library/std/src/sys/pal/sgx/abi/usercalls/tests.rs",
        "rust/library/std/src/sys/pal/sgx/libunwind_integration.rs",
        "rust/library/std/src/sys/pal/sgx/mod.rs",
        "rust/library/std/src/sys/pal/sgx/os.rs",
        "rust/library/std/src/sys/pal/sgx/thread.rs",
        "rust/library/std/src/sys/pal/sgx/thread_parking.rs",
        "rust/library/std/src/sys/pal/sgx/time.rs",
        "rust/library/std/src/sys/pal/sgx/waitqueue/mod.rs",
        "rust/library/std/src/sys/pal/sgx/waitqueue/spin_mutex.rs",
        "rust/library/std/src/sys/pal/sgx/waitqueue/spin_mutex/tests.rs",
        "rust/library/std/src/sys/pal/sgx/waitqueue/tests.rs",
        "rust/library/std/src/sys/pal/sgx/waitqueue/unsafe_list.rs",
        "rust/library/std/src/sys/pal/sgx/waitqueue/unsafe_list/tests.rs",
        "rust/library/std/src/sys/pal/solid/abi/fs.rs",
        "rust/library/std/src/sys/pal/solid/abi/mod.rs",
        "rust/library/std/src/sys/pal/solid/abi/sockets.rs",
        "rust/library/std/src/sys/pal/solid/error.rs",
        "rust/library/std/src/sys/pal/solid/mod.rs",
        "rust/library/std/src/sys/pal/solid/os.rs",
        "rust/library/std/src/sys/pal/solid/time.rs",
        "rust/library/std/src/sys/pal/teeos/mod.rs",
        "rust/library/std/src/sys/pal/teeos/os.rs",
        "rust/library/std/src/sys/pal/teeos/thread.rs",
        "rust/library/std/src/sys/pal/trusty/mod.rs",
        "rust/library/std/src/sys/pal/uefi/helpers.rs",
        "rust/library/std/src/sys/pal/uefi/mod.rs",
        "rust/library/std/src/sys/pal/uefi/os.rs",
        "rust/library/std/src/sys/pal/uefi/tests.rs",
        "rust/library/std/src/sys/pal/uefi/thread.rs",
        "rust/library/std/src/sys/pal/uefi/time.rs",
        "rust/library/std/src/sys/pal/unix/fuchsia.rs",
        "rust/library/std/src/sys/pal/unix/futex.rs",
        "rust/library/std/src/sys/pal/unix/kernel_copy.rs",
        "rust/library/std/src/sys/pal/unix/kernel_copy/tests.rs",
        "rust/library/std/src/sys/pal/unix/linux/mod.rs",
        "rust/library/std/src/sys/pal/unix/linux/pidfd.rs",
        "rust/library/std/src/sys/pal/unix/linux/pidfd/tests.rs",
        "rust/library/std/src/sys/pal/unix/mod.rs",
        "rust/library/std/src/sys/pal/unix/os.rs",
        "rust/library/std/src/sys/pal/unix/os/tests.rs",
        "rust/library/std/src/sys/pal/unix/pipe.rs",
        "rust/library/std/src/sys/pal/unix/stack_overflow.rs",
        "rust/library/std/src/sys/pal/unix/stack_overflow/thread_info.rs",
        "rust/library/std/src/sys/pal/unix/sync/condvar.rs",
        "rust/library/std/src/sys/pal/unix/sync/mod.rs",
        "rust/library/std/src/sys/pal/unix/sync/mutex.rs",
        "rust/library/std/src/sys/pal/unix/thread.rs",
        "rust/library/std/src/sys/pal/unix/thread_parking.rs",
        "rust/library/std/src/sys/pal/unix/time.rs",
        "rust/library/std/src/sys/pal/unix/weak.rs",
        "rust/library/std/src/sys/pal/unsupported/common.rs",
        "rust/library/std/src/sys/pal/unsupported/mod.rs",
        "rust/library/std/src/sys/pal/unsupported/os.rs",
        "rust/library/std/src/sys/pal/unsupported/pipe.rs",
        "rust/library/std/src/sys/pal/unsupported/thread.rs",
        "rust/library/std/src/sys/pal/unsupported/time.rs",
        "rust/library/std/src/sys/pal/wasi/helpers.rs",
        "rust/library/std/src/sys/pal/wasi/mod.rs",
        "rust/library/std/src/sys/pal/wasi/os.rs",
        "rust/library/std/src/sys/pal/wasi/thread.rs",
        "rust/library/std/src/sys/pal/wasi/time.rs",
        "rust/library/std/src/sys/pal/wasip2/cabi_realloc.rs",
        "rust/library/std/src/sys/pal/wasip2/mod.rs",
        "rust/library/std/src/sys/pal/wasm/atomics/futex.rs",
        "rust/library/std/src/sys/pal/wasm/atomics/thread.rs",
        "rust/library/std/src/sys/pal/wasm/mod.rs",
        "rust/library/std/src/sys/pal/windows/api.rs",
        "rust/library/std/src/sys/pal/windows/api/tests.rs",
        "rust/library/std/src/sys/pal/windows/c.rs",
        "rust/library/std/src/sys/pal/windows/c/windows_sys.rs",
        "rust/library/std/src/sys/pal/windows/compat.rs",
        "rust/library/std/src/sys/pal/windows/futex.rs",
        "rust/library/std/src/sys/pal/windows/handle.rs",
        "rust/library/std/src/sys/pal/windows/handle/tests.rs",
        "rust/library/std/src/sys/pal/windows/mod.rs",
        "rust/library/std/src/sys/pal/windows/os.rs",
        "rust/library/std/src/sys/pal/windows/os/tests.rs",
        "rust/library/std/src/sys/pal/windows/pipe.rs",
        "rust/library/std/src/sys/pal/windows/stack_overflow.rs",
        "rust/library/std/src/sys/pal/windows/stack_overflow_uwp.rs",
        "rust/library/std/src/sys/pal/windows/thread.rs",
        "rust/library/std/src/sys/pal/windows/time.rs",
        "rust/library/std/src/sys/pal/xous/mod.rs",
        "rust/library/std/src/sys/pal/xous/os.rs",
        "rust/library/std/src/sys/pal/xous/os/params.rs",
        "rust/library/std/src/sys/pal/xous/os/params/tests.rs",
        "rust/library/std/src/sys/pal/xous/thread.rs",
        "rust/library/std/src/sys/pal/xous/time.rs",
        "rust/library/std/src/sys/pal/zkvm/abi.rs",
        "rust/library/std/src/sys/pal/zkvm/mod.rs",
        "rust/library/std/src/sys/pal/zkvm/os.rs",
        "rust/library/std/src/sys/path/cygwin.rs",
        "rust/library/std/src/sys/path/mod.rs",
        "rust/library/std/src/sys/path/sgx.rs",
        "rust/library/std/src/sys/path/uefi.rs",
        "rust/library/std/src/sys/path/unix.rs",
        "rust/library/std/src/sys/path/unsupported_backslash.rs",
        "rust/library/std/src/sys/path/windows.rs",
        "rust/library/std/src/sys/path/windows/tests.rs",
        "rust/library/std/src/sys/path/windows_prefix.rs",
        "rust/library/std/src/sys/personality/dwarf/eh.rs",
        "rust/library/std/src/sys/personality/dwarf/mod.rs",
        "rust/library/std/src/sys/personality/dwarf/tests.rs",
        "rust/library/std/src/sys/personality/emcc.rs",
        "rust/library/std/src/sys/personality/gcc.rs",
        "rust/library/std/src/sys/personality/mod.rs",
        "rust/library/std/src/sys/process/env.rs",
        "rust/library/std/src/sys/process/mod.rs",
        "rust/library/std/src/sys/process/uefi.rs",
        "rust/library/std/src/sys/process/unix/common.rs",
        "rust/library/std/src/sys/process/unix/common/cstring_array.rs",
        "rust/library/std/src/sys/process/unix/common/tests.rs",
        "rust/library/std/src/sys/process/unix/fuchsia.rs",
        "rust/library/std/src/sys/process/unix/mod.rs",
        "rust/library/std/src/sys/process/unix/unix.rs",
        "rust/library/std/src/sys/process/unix/unix/tests.rs",
        "rust/library/std/src/sys/process/unix/unsupported.rs",
        "rust/library/std/src/sys/process/unix/unsupported/wait_status.rs",
        "rust/library/std/src/sys/process/unix/unsupported/wait_status/tests.rs",
        "rust/library/std/src/sys/process/unix/vxworks.rs",
        "rust/library/std/src/sys/process/unsupported.rs",
        "rust/library/std/src/sys/process/windows.rs",
        "rust/library/std/src/sys/process/windows/tests.rs",
        "rust/library/std/src/sys/random/apple.rs",
        "rust/library/std/src/sys/random/arc4random.rs",
        "rust/library/std/src/sys/random/espidf.rs",
        "rust/library/std/src/sys/random/fuchsia.rs",
        "rust/library/std/src/sys/random/getentropy.rs",
        "rust/library/std/src/sys/random/getrandom.rs",
        "rust/library/std/src/sys/random/hermit.rs",
        "rust/library/std/src/sys/random/linux.rs",
        "rust/library/std/src/sys/random/mod.rs",
        "rust/library/std/src/sys/random/redox.rs",
        "rust/library/std/src/sys/random/sgx.rs",
        "rust/library/std/src/sys/random/solid.rs",
        "rust/library/std/src/sys/random/teeos.rs",
        "rust/library/std/src/sys/random/trusty.rs",
        "rust/library/std/src/sys/random/uefi.rs",
        "rust/library/std/src/sys/random/unix_legacy.rs",
        "rust/library/std/src/sys/random/unsupported.rs",
        "rust/library/std/src/sys/random/vxworks.rs",
        "rust/library/std/src/sys/random/wasi.rs",
        "rust/library/std/src/sys/random/windows.rs",
        "rust/library/std/src/sys/random/zkvm.rs",
        "rust/library/std/src/sys/stdio/mod.rs",
        "rust/library/std/src/sys/stdio/sgx.rs",
        "rust/library/std/src/sys/stdio/solid.rs",
        "rust/library/std/src/sys/stdio/teeos.rs",
        "rust/library/std/src/sys/stdio/trusty.rs",
        "rust/library/std/src/sys/stdio/uefi.rs",
        "rust/library/std/src/sys/stdio/unix.rs",
        "rust/library/std/src/sys/stdio/unsupported.rs",
        "rust/library/std/src/sys/stdio/wasi.rs",
        "rust/library/std/src/sys/stdio/windows.rs",
        "rust/library/std/src/sys/stdio/windows/tests.rs",
        "rust/library/std/src/sys/stdio/xous.rs",
        "rust/library/std/src/sys/stdio/zkvm.rs",
        "rust/library/std/src/sys/sync/condvar/futex.rs",
        "rust/library/std/src/sys/sync/condvar/itron.rs",
        "rust/library/std/src/sys/sync/condvar/mod.rs",
        "rust/library/std/src/sys/sync/condvar/no_threads.rs",
        "rust/library/std/src/sys/sync/condvar/pthread.rs",
        "rust/library/std/src/sys/sync/condvar/sgx.rs",
        "rust/library/std/src/sys/sync/condvar/windows7.rs",
        "rust/library/std/src/sys/sync/condvar/xous.rs",
        "rust/library/std/src/sys/sync/mod.rs",
        "rust/library/std/src/sys/sync/mutex/fuchsia.rs",
        "rust/library/std/src/sys/sync/mutex/futex.rs",
        "rust/library/std/src/sys/sync/mutex/itron.rs",
        "rust/library/std/src/sys/sync/mutex/mod.rs",
        "rust/library/std/src/sys/sync/mutex/no_threads.rs",
        "rust/library/std/src/sys/sync/mutex/pthread.rs",
        "rust/library/std/src/sys/sync/mutex/sgx.rs",
        "rust/library/std/src/sys/sync/mutex/windows7.rs",
        "rust/library/std/src/sys/sync/mutex/xous.rs",
        "rust/library/std/src/sys/sync/once/futex.rs",
        "rust/library/std/src/sys/sync/once/mod.rs",
        "rust/library/std/src/sys/sync/once/no_threads.rs",
        "rust/library/std/src/sys/sync/once/queue.rs",
        "rust/library/std/src/sys/sync/once_box.rs",
        "rust/library/std/src/sys/sync/rwlock/futex.rs",
        "rust/library/std/src/sys/sync/rwlock/mod.rs",
        "rust/library/std/src/sys/sync/rwlock/no_threads.rs",
        "rust/library/std/src/sys/sync/rwlock/queue.rs",
        "rust/library/std/src/sys/sync/rwlock/solid.rs",
        "rust/library/std/src/sys/sync/rwlock/teeos.rs",
        "rust/library/std/src/sys/sync/thread_parking/darwin.rs",
        "rust/library/std/src/sys/sync/thread_parking/futex.rs",
        "rust/library/std/src/sys/sync/thread_parking/id.rs",
        "rust/library/std/src/sys/sync/thread_parking/mod.rs",
        "rust/library/std/src/sys/sync/thread_parking/pthread.rs",
        "rust/library/std/src/sys/sync/thread_parking/unsupported.rs",
        "rust/library/std/src/sys/sync/thread_parking/windows7.rs",
        "rust/library/std/src/sys/sync/thread_parking/xous.rs",
        "rust/library/std/src/sys/thread_local/destructors/linux_like.rs",
        "rust/library/std/src/sys/thread_local/destructors/list.rs",
        "rust/library/std/src/sys/thread_local/guard/apple.rs",
        "rust/library/std/src/sys/thread_local/guard/key.rs",
        "rust/library/std/src/sys/thread_local/guard/solid.rs",
        "rust/library/std/src/sys/thread_local/guard/windows.rs",
        "rust/library/std/src/sys/thread_local/key/racy.rs",
        "rust/library/std/src/sys/thread_local/key/sgx.rs",
        "rust/library/std/src/sys/thread_local/key/tests.rs",
        "rust/library/std/src/sys/thread_local/key/unix.rs",
        "rust/library/std/src/sys/thread_local/key/windows.rs",
        "rust/library/std/src/sys/thread_local/key/xous.rs",
        "rust/library/std/src/sys/thread_local/mod.rs",
        "rust/library/std/src/sys/thread_local/native/eager.rs",
        "rust/library/std/src/sys/thread_local/native/lazy.rs",
        "rust/library/std/src/sys/thread_local/native/mod.rs",
        "rust/library/std/src/sys/thread_local/no_threads.rs",
        "rust/library/std/src/sys/thread_local/os.rs",
        "rust/library/std/src/sys_common/mod.rs",
        "rust/library/std/src/sys_common/tests.rs",
        "rust/library/std/src/sys_common/wstr.rs",
        "rust/library/std/src/sys_common/wtf8.rs",
        "rust/library/std/src/sys_common/wtf8/tests.rs",
        "rust/library/std/src/test_helpers.rs",
        "rust/library/std/src/thread/current.rs",
        "rust/library/std/src/thread/local.rs",
        "rust/library/std/src/thread/mod.rs",
        "rust/library/std/src/thread/scoped.rs",
        "rust/library/std/src/thread/spawnhook.rs",
        "rust/library/std/src/thread/tests.rs",
        "rust/library/std/src/time.rs",
        "rust/library/std/tests/builtin-clone.rs",
        "rust/library/std/tests/common/mod.rs",
        "rust/library/std/tests/create_dir_all_bare.rs",
        "rust/library/std/tests/env.rs",
        "rust/library/std/tests/env_modify.rs",
        "rust/library/std/tests/eq-multidispatch.rs",
        "rust/library/std/tests/error.rs",
        "rust/library/std/tests/floats/f128.rs",
        "rust/library/std/tests/floats/f16.rs",
        "rust/library/std/tests/floats/f32.rs",
        "rust/library/std/tests/floats/f64.rs",
        "rust/library/std/tests/floats/lib.rs",
        "rust/library/std/tests/istr.rs",
        "rust/library/std/tests/log-knows-the-names-of-variants-in-std.rs",
        "rust/library/std/tests/minmax-stability-issue-23687.rs",
        "rust/library/std/tests/num.rs",
        "rust/library/std/tests/panic.rs",
        "rust/library/std/tests/path.rs",
        "rust/library/std/tests/pipe_subprocess.rs",
        "rust/library/std/tests/process_spawning.rs",
        "rust/library/std/tests/run-time-detect.rs",
        "rust/library/std/tests/seq-compare.rs",
        "rust/library/std/tests/slice-from-array-issue-113238.rs",
        "rust/library/std/tests/switch-stdout.rs",
        "rust/library/std/tests/sync/barrier.rs",
        "rust/library/std/tests/sync/condvar.rs",
        "rust/library/std/tests/sync/lazy_lock.rs",
        "rust/library/std/tests/sync/lib.rs",
        "rust/library/std/tests/sync/mpmc.rs",
        "rust/library/std/tests/sync/mpsc.rs",
        "rust/library/std/tests/sync/mpsc_sync.rs",
        "rust/library/std/tests/sync/mutex.rs",
        "rust/library/std/tests/sync/once.rs",
        "rust/library/std/tests/sync/once_lock.rs",
        "rust/library/std/tests/sync/reentrant_lock.rs",
        "rust/library/std/tests/sync/rwlock.rs",
        "rust/library/std/tests/thread.rs",
        "rust/library/std/tests/thread_local/dynamic_tests.rs",
        "rust/library/std/tests/thread_local/lib.rs",
        "rust/library/std/tests/thread_local/tests.rs",
        "rust/library/std/tests/time.rs",
        "rust/library/std/tests/type-name-unsized.rs",
        "rust/library/std/tests/volatile-fat-ptr.rs",
        "rust/library/std/tests/win_delete_self.rs",
        "rust/library/std/tests/windows.rs",
        "rust/library/stdarch/crates/core_arch/src/core_arch_docs.md",
    ],
    crate = "build_script_build",
    crate_root = "rust/library/std/build.rs",
    edition = "2024",
    features = [
        "backtrace",
        "std_detect_dlsym_getauxval",
        "std_detect_file_io",
    ],
    platform = {
        "linux-arm64-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
        ),
        "linux-riscv64-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
        ),
        "linux-x86_64-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
        ),
        "macos-arm64-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
        ),
        "macos-x86_64-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
        ),
        "windows-gnu-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
        ),
    },
    visibility = [],
)

rust_bootstrap_buildscript_run(
    name = "std-0.0.0-build-script-run",
    package_name = "std",
    buildscript_rule = ":std-0.0.0-build-script-build",
    features = [
        "backtrace",
        "std_detect_dlsym_getauxval",
        "std_detect_file_io",
    ],
    local_manifest_dir = "rust/library/std",
    platform = {
        "linux-arm64-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
        ),
        "linux-riscv64-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
        ),
        "linux-x86_64-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
        ),
        "macos-arm64-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
        ),
        "macos-x86_64-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
        ),
        "windows-gnu-library": dict(
            features = [
                "addr2line",
                "miniz_oxide",
                "object",
            ],
        ),
    },
    version = "0.0.0",
)

rust_bootstrap_library(
    name = "std_detect-0.1.5",
    srcs = [
        "rust/library/stdarch/crates/std_detect/src/detect/arch/aarch64.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/arch/arm.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/arch/loongarch.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/arch/mips.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/arch/mips64.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/arch/mod.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/arch/powerpc.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/arch/powerpc64.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/arch/riscv.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/arch/s390x.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/arch/x86.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/bit.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/cache.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/macros.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/mod.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/aarch64.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/darwin/aarch64.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/freebsd/aarch64.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/freebsd/arm.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/freebsd/auxvec.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/freebsd/mod.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/freebsd/powerpc.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/linux/aarch64.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/linux/arm.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/linux/auxvec.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/linux/loongarch.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/linux/mips.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/linux/mod.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/linux/powerpc.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/linux/riscv.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/linux/s390x.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/openbsd/aarch64.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/other.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/riscv.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/windows/aarch64.rs",
        "rust/library/stdarch/crates/std_detect/src/detect/os/x86.rs",
        "rust/library/stdarch/crates/std_detect/src/lib.rs",
    ],
    crate = "std_detect",
    crate_root = "rust/library/stdarch/crates/std_detect/src/lib.rs",
    edition = "2024",
    features = [
        "alloc",
        "core",
        "libc",
        "rustc-dep-of-std",
        "std_detect_dlsym_getauxval",
        "std_detect_file_io",
    ],
    named_deps = {
        "alloc": ":rustc-std-workspace-alloc-1.99.0",
        "core": ":rustc-std-workspace-core-1.99.0",
    },
    platform = {
        "linux-arm64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-riscv64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-x86_64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-library": dict(
            deps = [":libc-0.2.175"],
        ),
    },
    visibility = [],
    deps = [":cfg-if-1.0.3"],
)

crate_download(
    name = "strsim-0.11.1.crate",
    sha256 = "7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f",
    strip_prefix = "strsim-0.11.1",
    urls = ["https://static.crates.io/crates/strsim/0.11.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "strsim-0.11.1",
    srcs = [":strsim-0.11.1.crate"],
    crate = "strsim",
    crate_root = "strsim-0.11.1.crate/src/lib.rs",
    edition = "2015",
    visibility = [],
)

crate_download(
    name = "syn-2.0.106.crate",
    sha256 = "ede7c438028d4436d71104916910f5bb611972c5cfd7f89b8300a8186e6fada6",
    strip_prefix = "syn-2.0.106",
    urls = ["https://static.crates.io/crates/syn/2.0.106/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "syn-2.0.106",
    srcs = [":syn-2.0.106.crate"],
    crate = "syn",
    crate_root = "syn-2.0.106.crate/src/lib.rs",
    edition = "2021",
    features = [
        "clone-impls",
        "default",
        "derive",
        "extra-traits",
        "fold",
        "full",
        "parsing",
        "printing",
        "proc-macro",
        "visit",
        "visit-mut",
    ],
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":unicode-ident-1.0.18",
    ],
)

crate_download(
    name = "synstructure-0.13.2.crate",
    sha256 = "728a70f3dbaf5bab7f0c4b1ac8d7ae5ea60a4b5549c8a5914361c99147a709d2",
    strip_prefix = "synstructure-0.13.2",
    urls = ["https://static.crates.io/crates/synstructure/0.13.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "synstructure-0.13.2",
    srcs = [":synstructure-0.13.2.crate"],
    crate = "synstructure",
    crate_root = "synstructure-0.13.2.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "proc-macro",
    ],
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
    ],
)

crate_download(
    name = "tempfile-3.21.0.crate",
    sha256 = "15b61f8f20e3a6f7e0649d825294eaf317edce30f82cf6026e7e4cb9222a7d1e",
    strip_prefix = "tempfile-3.21.0",
    urls = ["https://static.crates.io/crates/tempfile/3.21.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "tempfile-3.21.0",
    srcs = [":tempfile-3.21.0.crate"],
    crate = "tempfile",
    crate_root = "tempfile-3.21.0.crate/src/lib.rs",
    edition = "2021",
    features = [
        "default",
        "getrandom",
    ],
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":rustix-1.0.8"],
        ),
        "linux-riscv64-compiler": dict(
            deps = [":rustix-1.0.8"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":rustix-1.0.8"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":rustix-1.0.8"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":rustix-1.0.8"],
        ),
        "windows-gnu-compiler": dict(
            deps = [":windows-sys-0.60.2"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":windows-sys-0.60.2"],
        ),
    },
    visibility = [],
    deps = [
        ":fastrand-2.3.0",
        ":getrandom-0.3.3",
        ":once_cell-1.21.3",
    ],
)

crate_download(
    name = "termcolor-1.4.1.crate",
    sha256 = "06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755",
    strip_prefix = "termcolor-1.4.1",
    urls = ["https://static.crates.io/crates/termcolor/1.4.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "termcolor-1.4.1",
    srcs = [":termcolor-1.4.1.crate"],
    crate = "termcolor",
    crate_root = "termcolor-1.4.1.crate/src/lib.rs",
    edition = "2018",
    platform = {
        "windows-gnu-compiler": dict(
            deps = [":winapi-util-0.1.10"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":winapi-util-0.1.10"],
        ),
    },
    visibility = [],
)

crate_download(
    name = "termize-0.1.1.crate",
    sha256 = "1706be6b564323ce7092f5f7e6b118a14c8ef7ed0e69c8c5329c914a9f101295",
    strip_prefix = "termize-0.1.1",
    urls = ["https://static.crates.io/crates/termize/0.1.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "termize-0.1.1",
    srcs = [":termize-0.1.1.crate"],
    crate = "termize",
    crate_root = "termize-0.1.1.crate/src/lib.rs",
    edition = "2018",
    platform = {
        "linux-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-riscv64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-compiler": dict(
            deps = [":libc-0.2.175"],
        ),
        "windows-gnu-compiler": dict(
            deps = [":winapi-0.3.9"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":winapi-0.3.9"],
        ),
    },
    visibility = [],
)

rust_bootstrap_alias(
    name = "test",
    actual = ":test-0.0.0",
    visibility = ["PUBLIC"],
)

rust_bootstrap_library(
    name = "test-0.0.0",
    srcs = [
        "rust/library/test/src/bench.rs",
        "rust/library/test/src/cli.rs",
        "rust/library/test/src/console.rs",
        "rust/library/test/src/event.rs",
        "rust/library/test/src/formatters/json.rs",
        "rust/library/test/src/formatters/junit.rs",
        "rust/library/test/src/formatters/mod.rs",
        "rust/library/test/src/formatters/pretty.rs",
        "rust/library/test/src/formatters/terse.rs",
        "rust/library/test/src/helpers/concurrency.rs",
        "rust/library/test/src/helpers/metrics.rs",
        "rust/library/test/src/helpers/mod.rs",
        "rust/library/test/src/helpers/shuffle.rs",
        "rust/library/test/src/lib.rs",
        "rust/library/test/src/options.rs",
        "rust/library/test/src/stats.rs",
        "rust/library/test/src/stats/tests.rs",
        "rust/library/test/src/term.rs",
        "rust/library/test/src/term/terminfo/mod.rs",
        "rust/library/test/src/term/terminfo/parm.rs",
        "rust/library/test/src/term/terminfo/parm/tests.rs",
        "rust/library/test/src/term/terminfo/parser/compiled.rs",
        "rust/library/test/src/term/terminfo/parser/compiled/tests.rs",
        "rust/library/test/src/term/terminfo/searcher.rs",
        "rust/library/test/src/term/terminfo/searcher/tests.rs",
        "rust/library/test/src/term/win.rs",
        "rust/library/test/src/test_result.rs",
        "rust/library/test/src/tests.rs",
        "rust/library/test/src/time.rs",
        "rust/library/test/src/types.rs",
    ],
    crate = "test",
    crate_root = "rust/library/test/src/lib.rs",
    edition = "2024",
    platform = {
        "linux-arm64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-riscv64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-x86_64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "windows-gnu-library": dict(
            deps = [":libc-0.2.175"],
        ),
    },
    visibility = [],
    deps = [
        ":core-0.0.0",
        ":getopts-0.2.23",
        ":std-0.0.0",
    ],
)

crate_download(
    name = "thin-vec-0.2.14.crate",
    sha256 = "144f754d318415ac792f9d69fc87abbbfc043ce2ef041c60f16ad828f638717d",
    strip_prefix = "thin-vec-0.2.14",
    urls = ["https://static.crates.io/crates/thin-vec/0.2.14/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "thin-vec-0.2.14",
    srcs = [":thin-vec-0.2.14.crate"],
    crate = "thin_vec",
    crate_root = "thin-vec-0.2.14.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "std",
    ],
    visibility = [],
)

crate_download(
    name = "thiserror-1.0.69.crate",
    sha256 = "b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52",
    strip_prefix = "thiserror-1.0.69",
    urls = ["https://static.crates.io/crates/thiserror/1.0.69/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "thiserror-1.0.69",
    srcs = [":thiserror-1.0.69.crate"],
    crate = "thiserror",
    crate_root = "thiserror-1.0.69.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [":thiserror-impl-1.0.69"],
)

crate_download(
    name = "thiserror-2.0.16.crate",
    sha256 = "3467d614147380f2e4e374161426ff399c91084acd2363eaf549172b3d5e60c0",
    strip_prefix = "thiserror-2.0.16",
    urls = ["https://static.crates.io/crates/thiserror/2.0.16/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "thiserror-2.0.16",
    srcs = [":thiserror-2.0.16.crate"],
    crate = "thiserror",
    crate_root = "thiserror-2.0.16.crate/src/lib.rs",
    edition = "2021",
    features = [
        "default",
        "std",
    ],
    visibility = [],
    deps = [":thiserror-impl-2.0.16"],
)

crate_download(
    name = "thiserror-impl-1.0.69.crate",
    sha256 = "4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1",
    strip_prefix = "thiserror-impl-1.0.69",
    urls = ["https://static.crates.io/crates/thiserror-impl/1.0.69/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "thiserror-impl-1.0.69",
    srcs = [":thiserror-impl-1.0.69.crate"],
    crate = "thiserror_impl",
    crate_root = "thiserror-impl-1.0.69.crate/src/lib.rs",
    edition = "2021",
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
    ],
)

crate_download(
    name = "thiserror-impl-2.0.16.crate",
    sha256 = "6c5e1be1c48b9172ee610da68fd9cd2770e7a4056cb3fc98710ee6906f0c7960",
    strip_prefix = "thiserror-impl-2.0.16",
    urls = ["https://static.crates.io/crates/thiserror-impl/2.0.16/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "thiserror-impl-2.0.16",
    srcs = [":thiserror-impl-2.0.16.crate"],
    crate = "thiserror_impl",
    crate_root = "thiserror-impl-2.0.16.crate/src/lib.rs",
    edition = "2021",
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
    ],
)

crate_download(
    name = "thorin-dwp-0.9.0.crate",
    sha256 = "9e9c1e705f82a260173f3eec93f2ff6d7807f23ad5a8cc2e7316a891733ea7a1",
    strip_prefix = "thorin-dwp-0.9.0",
    urls = ["https://static.crates.io/crates/thorin-dwp/0.9.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "thorin-dwp-0.9.0",
    srcs = [":thorin-dwp-0.9.0.crate"],
    crate = "thorin",
    crate_root = "thorin-dwp-0.9.0.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [
        ":gimli-0.31.1",
        ":hashbrown-0.15.5",
        ":object-0.36.7",
        ":tracing-0.1.37",
    ],
)

crate_download(
    name = "thread_local-1.1.9.crate",
    sha256 = "f60246a4944f24f6e018aa17cdeffb7818b76356965d03b07d6a9886e8962185",
    strip_prefix = "thread_local-1.1.9",
    urls = ["https://static.crates.io/crates/thread_local/1.1.9/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "thread_local-1.1.9",
    srcs = [":thread_local-1.1.9.crate"],
    crate = "thread_local",
    crate_root = "thread_local-1.1.9.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [":cfg-if-1.0.3"],
)

crate_download(
    name = "threadpool-1.8.1.crate",
    sha256 = "d050e60b33d41c19108b32cea32164033a9013fe3b46cbd4457559bfbf77afaa",
    strip_prefix = "threadpool-1.8.1",
    urls = ["https://static.crates.io/crates/threadpool/1.8.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "threadpool-1.8.1",
    srcs = [":threadpool-1.8.1.crate"],
    crate = "threadpool",
    crate_root = "threadpool-1.8.1.crate/src/lib.rs",
    edition = "2015",
    visibility = [],
    deps = [":num_cpus-1.17.0"],
)

crate_download(
    name = "tinystr-0.7.6.crate",
    sha256 = "9117f5d4db391c1cf6927e7bea3db74b9a1c1add8f7eda9ffd5364f40f57b82f",
    strip_prefix = "tinystr-0.7.6",
    urls = ["https://static.crates.io/crates/tinystr/0.7.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "tinystr-0.7.6",
    srcs = [":tinystr-0.7.6.crate"],
    crate = "tinystr",
    crate_root = "tinystr-0.7.6.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "zerovec",
    ],
    visibility = [],
    deps = [
        ":displaydoc-0.2.5",
        ":zerovec-0.10.4",
    ],
)

crate_download(
    name = "tinystr-0.8.1.crate",
    sha256 = "5d4f6d1145dcb577acf783d4e601bc1d76a13337bb54e6233add580b07344c8b",
    strip_prefix = "tinystr-0.8.1",
    urls = ["https://static.crates.io/crates/tinystr/0.8.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "tinystr-0.8.1",
    srcs = [":tinystr-0.8.1.crate"],
    crate = "tinystr",
    crate_root = "tinystr-0.8.1.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "default",
        "zerovec",
    ],
    visibility = [],
    deps = [
        ":displaydoc-0.2.5",
        ":zerovec-0.11.4",
    ],
)

crate_download(
    name = "tinyvec-1.10.0.crate",
    sha256 = "bfa5fdc3bce6191a1dbc8c02d5c8bffcf557bafa17c124c5264a458f1b0613fa",
    strip_prefix = "tinyvec-1.10.0",
    urls = ["https://static.crates.io/crates/tinyvec/1.10.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "tinyvec-1.10.0",
    srcs = [":tinyvec-1.10.0.crate"],
    crate = "tinyvec",
    crate_root = "tinyvec-1.10.0.crate/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "default",
        "tinyvec_macros",
    ],
    visibility = [],
    deps = [":tinyvec_macros-0.1.1"],
)

crate_download(
    name = "tinyvec_macros-0.1.1.crate",
    sha256 = "1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20",
    strip_prefix = "tinyvec_macros-0.1.1",
    urls = ["https://static.crates.io/crates/tinyvec_macros/0.1.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "tinyvec_macros-0.1.1",
    srcs = [":tinyvec_macros-0.1.1.crate"],
    crate = "tinyvec_macros",
    crate_root = "tinyvec_macros-0.1.1.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
)

crate_download(
    name = "toml-0.7.8.crate",
    sha256 = "dd79e69d3b627db300ff956027cc6c3798cef26d22526befdfcd12feeb6d2257",
    strip_prefix = "toml-0.7.8",
    urls = ["https://static.crates.io/crates/toml/0.7.8/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "toml-0.7.8",
    srcs = [":toml-0.7.8.crate"],
    crate = "toml",
    crate_root = "toml-0.7.8.crate/src/lib.rs",
    edition = "2021",
    features = [
        "default",
        "display",
        "parse",
    ],
    visibility = [],
    deps = [
        ":serde-1.0.219",
        ":serde_spanned-0.6.9",
        ":toml_datetime-0.6.11",
        ":toml_edit-0.19.15",
    ],
)

crate_download(
    name = "toml_datetime-0.6.11.crate",
    sha256 = "22cddaf88f4fbc13c51aebbf5f8eceb5c7c5a9da2ac40a13519eb5b0a0e8f11c",
    strip_prefix = "toml_datetime-0.6.11",
    urls = ["https://static.crates.io/crates/toml_datetime/0.6.11/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "toml_datetime-0.6.11",
    srcs = [":toml_datetime-0.6.11.crate"],
    crate = "toml_datetime",
    crate_root = "toml_datetime-0.6.11.crate/src/lib.rs",
    edition = "2021",
    features = ["serde"],
    visibility = [],
    deps = [":serde-1.0.219"],
)

crate_download(
    name = "toml_edit-0.19.15.crate",
    sha256 = "1b5bb770da30e5cbfde35a2d7b9b8a2c4b8ef89548a7a6aeab5c9a576e3e7421",
    strip_prefix = "toml_edit-0.19.15",
    urls = ["https://static.crates.io/crates/toml_edit/0.19.15/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "toml_edit-0.19.15",
    srcs = [":toml_edit-0.19.15.crate"],
    crate = "toml_edit",
    crate_root = "toml_edit-0.19.15.crate/src/lib.rs",
    edition = "2021",
    features = [
        "default",
        "serde",
    ],
    visibility = [],
    deps = [
        ":indexmap-2.11.0",
        ":serde-1.0.219",
        ":serde_spanned-0.6.9",
        ":toml_datetime-0.6.11",
        ":winnow-0.5.40",
    ],
)

crate_download(
    name = "tracing-0.1.37.crate",
    sha256 = "8ce8c33a8d48bd45d624a6e523445fd21ec13d3653cd51f681abf67418f54eb8",
    strip_prefix = "tracing-0.1.37",
    urls = ["https://static.crates.io/crates/tracing/0.1.37/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "tracing-0.1.37",
    srcs = [":tracing-0.1.37.crate"],
    crate = "tracing",
    crate_root = "tracing-0.1.37.crate/src/lib.rs",
    edition = "2018",
    features = [
        "attributes",
        "default",
        "max_level_off",
        "release_max_level_off",
        "std",
        "tracing-attributes",
    ],
    visibility = [],
    deps = [
        ":cfg-if-1.0.3",
        ":pin-project-lite-0.2.16",
        ":tracing-attributes-0.1.30",
        ":tracing-core-0.1.30",
    ],
)

crate_download(
    name = "tracing-attributes-0.1.30.crate",
    sha256 = "81383ab64e72a7a8b8e13130c49e3dab29def6d0c7d76a03087b3cf71c5c6903",
    strip_prefix = "tracing-attributes-0.1.30",
    urls = ["https://static.crates.io/crates/tracing-attributes/0.1.30/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "tracing-attributes-0.1.30",
    srcs = [":tracing-attributes-0.1.30.crate"],
    crate = "tracing_attributes",
    crate_root = "tracing-attributes-0.1.30.crate/src/lib.rs",
    edition = "2018",
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
    ],
)

crate_download(
    name = "tracing-core-0.1.30.crate",
    sha256 = "24eb03ba0eab1fd845050058ce5e616558e8f8d8fca633e6b163fe25c797213a",
    strip_prefix = "tracing-core-0.1.30",
    urls = ["https://static.crates.io/crates/tracing-core/0.1.30/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "tracing-core-0.1.30",
    srcs = [":tracing-core-0.1.30.crate"],
    crate = "tracing_core",
    crate_root = "tracing-core-0.1.30.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "once_cell",
        "std",
    ],
    visibility = [],
    deps = [":once_cell-1.21.3"],
)

crate_download(
    name = "tracing-log-0.2.0.crate",
    sha256 = "ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3",
    strip_prefix = "tracing-log-0.2.0",
    urls = ["https://static.crates.io/crates/tracing-log/0.2.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "tracing-log-0.2.0",
    srcs = [":tracing-log-0.2.0.crate"],
    crate = "tracing_log",
    crate_root = "tracing-log-0.2.0.crate/src/lib.rs",
    edition = "2018",
    features = [
        "log-tracer",
        "std",
    ],
    visibility = [],
    deps = [
        ":log-0.4.27",
        ":once_cell-1.21.3",
        ":tracing-core-0.1.30",
    ],
)

crate_download(
    name = "tracing-subscriber-0.3.18.crate",
    sha256 = "ad0f048c97dbd9faa9b7df56362b8ebcaa52adb06b498c050d2f4e32f90a7a8b",
    strip_prefix = "tracing-subscriber-0.3.18",
    urls = ["https://static.crates.io/crates/tracing-subscriber/0.3.18/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "tracing-subscriber-0.3.18",
    srcs = [":tracing-subscriber-0.3.18.crate"],
    crate = "tracing_subscriber",
    crate_root = "tracing-subscriber-0.3.18.crate/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "ansi",
        "env-filter",
        "fmt",
        "matchers",
        "nu-ansi-term",
        "once_cell",
        "parking_lot",
        "regex",
        "registry",
        "sharded-slab",
        "smallvec",
        "std",
        "thread_local",
        "tracing",
    ],
    visibility = [],
    deps = [
        ":matchers-0.1.0",
        ":nu-ansi-term-0.46.0",
        ":once_cell-1.21.3",
        ":parking_lot-0.12.4",
        ":regex-1.11.1",
        ":sharded-slab-0.1.7",
        ":smallvec-1.15.1",
        ":thread_local-1.1.9",
        ":tracing-0.1.37",
        ":tracing-core-0.1.30",
    ],
)

crate_download(
    name = "tracing-tree-0.3.1.crate",
    sha256 = "b56c62d2c80033cb36fae448730a2f2ef99410fe3ecbffc916681a32f6807dbe",
    strip_prefix = "tracing-tree-0.3.1",
    urls = ["https://static.crates.io/crates/tracing-tree/0.3.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "tracing-tree-0.3.1",
    srcs = [":tracing-tree-0.3.1.crate"],
    crate = "tracing_tree",
    crate_root = "tracing-tree-0.3.1.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "tracing-log",
    ],
    visibility = [],
    deps = [
        ":nu-ansi-term-0.50.1",
        ":tracing-core-0.1.30",
        ":tracing-log-0.2.0",
        ":tracing-subscriber-0.3.18",
    ],
)

crate_download(
    name = "twox-hash-1.6.3.crate",
    sha256 = "97fee6b57c6a41524a810daee9286c02d7752c4253064d0b05472833a438f675",
    strip_prefix = "twox-hash-1.6.3",
    urls = ["https://static.crates.io/crates/twox-hash/1.6.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "twox-hash-1.6.3",
    srcs = [":twox-hash-1.6.3.crate"],
    crate = "twox_hash",
    crate_root = "twox-hash-1.6.3.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "rand",
        "std",
    ],
    visibility = [],
    deps = [
        ":cfg-if-1.0.3",
        ":rand-0.8.5",
        ":static_assertions-1.1.0",
    ],
)

crate_download(
    name = "type-map-0.5.1.crate",
    sha256 = "cb30dbbd9036155e74adad6812e9898d03ec374946234fbcebd5dfc7b9187b90",
    strip_prefix = "type-map-0.5.1",
    urls = ["https://static.crates.io/crates/type-map/0.5.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "type-map-0.5.1",
    srcs = [":type-map-0.5.1.crate"],
    crate = "type_map",
    crate_root = "type-map-0.5.1.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
    deps = [":rustc-hash-2.1.1"],
)

crate_download(
    name = "typenum-1.18.0.crate",
    sha256 = "1dccffe3ce07af9386bfd29e80c0ab1a8205a2fc34e4bcd40364df902cfa8f3f",
    strip_prefix = "typenum-1.18.0",
    urls = ["https://static.crates.io/crates/typenum/1.18.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "typenum-1.18.0",
    srcs = [":typenum-1.18.0.crate"],
    crate = "typenum",
    crate_root = "typenum-1.18.0.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
)

crate_download(
    name = "unic-langid-0.9.6.crate",
    sha256 = "a28ba52c9b05311f4f6e62d5d9d46f094bd6e84cb8df7b3ef952748d752a7d05",
    strip_prefix = "unic-langid-0.9.6",
    urls = ["https://static.crates.io/crates/unic-langid/0.9.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "unic-langid-0.9.6",
    srcs = [":unic-langid-0.9.6.crate"],
    crate = "unic_langid",
    crate_root = "unic-langid-0.9.6.crate/src/lib.rs",
    edition = "2021",
    features = [
        "default",
        "macros",
        "unic-langid-macros",
    ],
    visibility = [],
    deps = [
        ":unic-langid-impl-0.9.6",
        ":unic-langid-macros-0.9.6",
    ],
)

crate_download(
    name = "unic-langid-impl-0.9.6.crate",
    sha256 = "dce1bf08044d4b7a94028c93786f8566047edc11110595914de93362559bc658",
    strip_prefix = "unic-langid-impl-0.9.6",
    urls = ["https://static.crates.io/crates/unic-langid-impl/0.9.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "unic-langid-impl-0.9.6",
    srcs = [":unic-langid-impl-0.9.6.crate"],
    crate = "unic_langid_impl",
    crate_root = "unic-langid-impl-0.9.6.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [":tinystr-0.8.1"],
)

crate_download(
    name = "unic-langid-macros-0.9.6.crate",
    sha256 = "d5957eb82e346d7add14182a3315a7e298f04e1ba4baac36f7f0dbfedba5fc25",
    strip_prefix = "unic-langid-macros-0.9.6",
    urls = ["https://static.crates.io/crates/unic-langid-macros/0.9.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "unic-langid-macros-0.9.6",
    srcs = [":unic-langid-macros-0.9.6.crate"],
    crate = "unic_langid_macros",
    crate_root = "unic-langid-macros-0.9.6.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [
        ":proc-macro-hack-0.5.20+deprecated",
        ":tinystr-0.8.1",
        ":unic-langid-impl-0.9.6",
        ":unic-langid-macros-impl-0.9.6",
    ],
)

crate_download(
    name = "unic-langid-macros-impl-0.9.6.crate",
    sha256 = "a1249a628de3ad34b821ecb1001355bca3940bcb2f88558f1a8bd82e977f75b5",
    strip_prefix = "unic-langid-macros-impl-0.9.6",
    urls = ["https://static.crates.io/crates/unic-langid-macros-impl/0.9.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "unic-langid-macros-impl-0.9.6",
    srcs = [":unic-langid-macros-impl-0.9.6.crate"],
    crate = "unic_langid_macros_impl",
    crate_root = "unic-langid-macros-impl-0.9.6.crate/src/lib.rs",
    edition = "2021",
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro-hack-0.5.20+deprecated",
        ":quote-1.0.40",
        ":syn-2.0.106",
        ":unic-langid-impl-0.9.6",
    ],
)

crate_download(
    name = "unicase-2.8.1.crate",
    sha256 = "75b844d17643ee918803943289730bec8aac480150456169e647ed0b576ba539",
    strip_prefix = "unicase-2.8.1",
    urls = ["https://static.crates.io/crates/unicase/2.8.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "unicase-2.8.1",
    srcs = [":unicase-2.8.1.crate"],
    crate = "unicase",
    crate_root = "unicase-2.8.1.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
)

crate_download(
    name = "unicode-ident-1.0.18.crate",
    sha256 = "5a5f39404a5da50712a4c1eecf25e90dd62b613502b7e925fd4e4d19b5c96512",
    strip_prefix = "unicode-ident-1.0.18",
    urls = ["https://static.crates.io/crates/unicode-ident/1.0.18/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "unicode-ident-1.0.18",
    srcs = [":unicode-ident-1.0.18.crate"],
    crate = "unicode_ident",
    crate_root = "unicode-ident-1.0.18.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
)

crate_download(
    name = "unicode-normalization-0.1.24.crate",
    sha256 = "5033c97c4262335cded6d6fc3e5c18ab755e1a3dc96376350f3d8e9f009ad956",
    strip_prefix = "unicode-normalization-0.1.24",
    urls = ["https://static.crates.io/crates/unicode-normalization/0.1.24/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "unicode-normalization-0.1.24",
    srcs = [":unicode-normalization-0.1.24.crate"],
    crate = "unicode_normalization",
    crate_root = "unicode-normalization-0.1.24.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "std",
    ],
    visibility = [],
    deps = [":tinyvec-1.10.0"],
)

crate_download(
    name = "unicode-properties-0.1.3.crate",
    sha256 = "e70f2a8b45122e719eb623c01822704c4e0907e7e426a05927e1a1cfff5b75d0",
    strip_prefix = "unicode-properties-0.1.3",
    urls = ["https://static.crates.io/crates/unicode-properties/0.1.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "unicode-properties-0.1.3",
    srcs = [":unicode-properties-0.1.3.crate"],
    crate = "unicode_properties",
    crate_root = "unicode-properties-0.1.3.crate/src/lib.rs",
    edition = "2021",
    features = ["emoji"],
    visibility = [],
)

crate_download(
    name = "unicode-script-0.5.7.crate",
    sha256 = "9fb421b350c9aff471779e262955939f565ec18b86c15364e6bdf0d662ca7c1f",
    strip_prefix = "unicode-script-0.5.7",
    urls = ["https://static.crates.io/crates/unicode-script/0.5.7/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "unicode-script-0.5.7",
    srcs = [":unicode-script-0.5.7.crate"],
    crate = "unicode_script",
    crate_root = "unicode-script-0.5.7.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
)

crate_download(
    name = "unicode-security-0.1.2.crate",
    sha256 = "2e4ddba1535dd35ed8b61c52166b7155d7f4e4b8847cec6f48e71dc66d8b5e50",
    strip_prefix = "unicode-security-0.1.2",
    urls = ["https://static.crates.io/crates/unicode-security/0.1.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "unicode-security-0.1.2",
    srcs = [":unicode-security-0.1.2.crate"],
    crate = "unicode_security",
    crate_root = "unicode-security-0.1.2.crate/src/lib.rs",
    edition = "2018",
    features = ["default"],
    visibility = [],
    deps = [
        ":unicode-normalization-0.1.24",
        ":unicode-script-0.5.7",
    ],
)

crate_download(
    name = "unicode-segmentation-1.12.0.crate",
    sha256 = "f6ccf251212114b54433ec949fd6a7841275f9ada20dddd2f29e9ceea4501493",
    strip_prefix = "unicode-segmentation-1.12.0",
    urls = ["https://static.crates.io/crates/unicode-segmentation/1.12.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "unicode-segmentation-1.12.0",
    srcs = [":unicode-segmentation-1.12.0.crate"],
    crate = "unicode_segmentation",
    crate_root = "unicode-segmentation-1.12.0.crate/src/lib.rs",
    edition = "2018",
    visibility = [],
)

crate_download(
    name = "unicode-width-0.2.1.crate",
    sha256 = "4a1a07cc7db3810833284e8d372ccdc6da29741639ecc70c9ec107df0fa6154c",
    strip_prefix = "unicode-width-0.2.1",
    urls = ["https://static.crates.io/crates/unicode-width/0.2.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "unicode-width-0.2.1",
    srcs = [":unicode-width-0.2.1.crate"],
    crate = "unicode_width",
    crate_root = "unicode-width-0.2.1.crate/src/lib.rs",
    edition = "2021",
    features = [
        "cjk",
        "default",
    ],
    platform = {
        "linux-arm64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
                "std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "linux-riscv64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
                "std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "linux-x86_64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
                "std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "macos-arm64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
                "std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "macos-x86_64-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
                "std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "windows-gnu-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
                "std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
        "windows-msvc-library": dict(
            features = [
                "core",
                "rustc-dep-of-std",
                "std",
            ],
            named_deps = {
                "core": ":rustc-std-workspace-core-1.99.0",
                "std": ":rustc-std-workspace-std-1.99.0",
            },
        ),
    },
    visibility = [],
)

crate_download(
    name = "unicode-xid-0.2.6.crate",
    sha256 = "ebc1c04c71510c7f702b52b7c350734c9ff1295c464a03335b00bb84fc54f853",
    strip_prefix = "unicode-xid-0.2.6",
    urls = ["https://static.crates.io/crates/unicode-xid/0.2.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "unicode-xid-0.2.6",
    srcs = [":unicode-xid-0.2.6.crate"],
    crate = "unicode_xid",
    crate_root = "unicode-xid-0.2.6.crate/src/lib.rs",
    edition = "2015",
    features = ["default"],
    visibility = [],
)

rust_bootstrap_library(
    name = "unwind-0.0.0",
    srcs = [
        "rust/library/unwind/src/lib.rs",
        "rust/library/unwind/src/libunwind.rs",
        "rust/library/unwind/src/unwinding.rs",
        "rust/library/unwind/src/wasm.rs",
    ],
    crate = "unwind",
    crate_root = "rust/library/unwind/src/lib.rs",
    edition = "2024",
    platform = {
        "linux-arm64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-riscv64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "linux-x86_64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-arm64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "macos-x86_64-library": dict(
            deps = [":libc-0.2.175"],
        ),
        "windows-gnu-library": dict(
            deps = [":libc-0.2.175"],
        ),
    },
    visibility = [],
    deps = [
        ":cfg-if-1.0.3",
        ":compiler_builtins-0.1.160",
        ":core-0.0.0",
    ],
)

crate_download(
    name = "url-2.5.7.crate",
    sha256 = "08bc136a29a3d1758e07a9cca267be308aeebf5cfd5a10f3f67ab2097683ef5b",
    strip_prefix = "url-2.5.7",
    urls = ["https://static.crates.io/crates/url/2.5.7/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "url-2.5.7",
    srcs = [":url-2.5.7.crate"],
    crate = "url",
    crate_root = "url-2.5.7.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "serde",
        "std",
    ],
    visibility = [],
    deps = [
        ":form_urlencoded-1.2.2",
        ":idna-1.1.0",
        ":percent-encoding-2.3.2",
        ":serde-1.0.219",
    ],
)

crate_download(
    name = "utf8_iter-1.0.4.crate",
    sha256 = "b6c140620e7ffbb22c2dee59cafe6084a59b5ffc27a8859a5f0d494b5d52b6be",
    strip_prefix = "utf8_iter-1.0.4",
    urls = ["https://static.crates.io/crates/utf8_iter/1.0.4/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "utf8_iter-1.0.4",
    srcs = [":utf8_iter-1.0.4.crate"],
    crate = "utf8_iter",
    crate_root = "utf8_iter-1.0.4.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
)

crate_download(
    name = "utf8parse-0.2.2.crate",
    sha256 = "06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821",
    strip_prefix = "utf8parse-0.2.2",
    urls = ["https://static.crates.io/crates/utf8parse/0.2.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "utf8parse-0.2.2",
    srcs = [":utf8parse-0.2.2.crate"],
    crate = "utf8parse",
    crate_root = "utf8parse-0.2.2.crate/src/lib.rs",
    edition = "2018",
    features = ["default"],
    visibility = [],
)

crate_download(
    name = "wasm-encoder-0.219.2.crate",
    sha256 = "8aa79bcd666a043b58f5fa62b221b0b914dd901e6f620e8ab7371057a797f3e1",
    strip_prefix = "wasm-encoder-0.219.2",
    urls = ["https://static.crates.io/crates/wasm-encoder/0.219.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "wasm-encoder-0.219.2",
    srcs = [":wasm-encoder-0.219.2.crate"],
    crate = "wasm_encoder",
    crate_root = "wasm-encoder-0.219.2.crate/src/lib.rs",
    edition = "2021",
    features = [
        "component-model",
        "default",
    ],
    visibility = [],
    deps = [":leb128-0.2.5"],
)

crate_download(
    name = "wasmparser-0.236.1.crate",
    sha256 = "a9b1e81f3eb254cf7404a82cee6926a4a3ccc5aad80cc3d43608a070c67aa1d7",
    strip_prefix = "wasmparser-0.236.1",
    urls = ["https://static.crates.io/crates/wasmparser/0.236.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "wasmparser-0.236.1",
    srcs = [":wasmparser-0.236.1.crate"],
    crate = "wasmparser",
    crate_root = "wasmparser-0.236.1.crate/src/lib.rs",
    edition = "2021",
    env = {
        "OUT_DIR": "$(location :wasmparser-0.236.1-build-script-run[out_dir])",
    },
    rustc_flags = ["@$(location :wasmparser-0.236.1-build-script-run[rustc_flags])"],
    visibility = [],
    deps = [":bitflags-2.9.3"],
)

rust_bootstrap_binary(
    name = "wasmparser-0.236.1-build-script-build",
    srcs = [":wasmparser-0.236.1.crate"],
    crate = "build_script_build",
    crate_root = "wasmparser-0.236.1.crate/build.rs",
    edition = "2021",
    visibility = [],
)

rust_bootstrap_buildscript_run(
    name = "wasmparser-0.236.1-build-script-run",
    package_name = "wasmparser",
    buildscript_rule = ":wasmparser-0.236.1-build-script-build",
    version = "0.236.1",
)

crate_download(
    name = "winapi-0.3.9.crate",
    sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419",
    strip_prefix = "winapi-0.3.9",
    urls = ["https://static.crates.io/crates/winapi/0.3.9/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "winapi-0.3.9",
    srcs = [":winapi-0.3.9.crate"],
    crate = "winapi",
    crate_root = "winapi-0.3.9.crate/src/lib.rs",
    edition = "2015",
    env = {
        "OUT_DIR": "$(location :winapi-0.3.9-build-script-run[out_dir])",
    },
    features = [
        "consoleapi",
        "errhandlingapi",
        "fileapi",
        "handleapi",
        "processenv",
        "winbase",
        "wincon",
    ],
    platform = {
        "windows-gnu-compiler": dict(
            deps = [":winapi-x86_64-pc-windows-gnu-0.4.0"],
        ),
    },
    rustc_flags = ["@$(location :winapi-0.3.9-build-script-run[rustc_flags])"],
    visibility = [],
    deps = [
        "//platforms/windows:advapi32.lib",
        "//platforms/windows:avrt.lib",
        "//platforms/windows:bcrypt.lib",
        "//platforms/windows:bluetoothapis.lib",
        "//platforms/windows:bthprops.lib",
        "//platforms/windows:cfgmgr32.lib",
        "//platforms/windows:comctl32.lib",
        "//platforms/windows:comdlg32.lib",
        "//platforms/windows:credui.lib",
        "//platforms/windows:crypt32.lib",
        "//platforms/windows:cryptnet.lib",
        "//platforms/windows:d2d1.lib",
        "//platforms/windows:d3d11.lib",
        "//platforms/windows:d3d12.lib",
        "//platforms/windows:d3d9.lib",
        "//platforms/windows:d3dcompiler.lib",
        "//platforms/windows:dbghelp.lib",
        "//platforms/windows:dcomp.lib",
        "//platforms/windows:dsound.lib",
        "//platforms/windows:dwmapi.lib",
        "//platforms/windows:dwrite.lib",
        "//platforms/windows:dxgi.lib",
        "//platforms/windows:dxva2.lib",
        "//platforms/windows:fwpuclnt.lib",
        "//platforms/windows:gdi32.lib",
        "//platforms/windows:hid.lib",
        "//platforms/windows:httpapi.lib",
        "//platforms/windows:imm32.lib",
        "//platforms/windows:iphlpapi.lib",
        "//platforms/windows:kernel32.lib",
        "//platforms/windows:ktmw32.lib",
        "//platforms/windows:mmdevapi.lib",
        "//platforms/windows:mpr.lib",
        "//platforms/windows:msimg32.lib",
        "//platforms/windows:mswsock.lib",
        "//platforms/windows:ncrypt.lib",
        "//platforms/windows:netapi32.lib",
        "//platforms/windows:ntdll.lib",
        "//platforms/windows:odbc32.lib",
        "//platforms/windows:ole32.lib",
        "//platforms/windows:oleaut32.lib",
        "//platforms/windows:opengl32.lib",
        "//platforms/windows:pdh.lib",
        "//platforms/windows:powrprof.lib",
        "//platforms/windows:psapi.lib",
        "//platforms/windows:rstrtmgr.lib",
        "//platforms/windows:runtimeobject.lib",
        "//platforms/windows:secur32.lib",
        "//platforms/windows:setupapi.lib",
        "//platforms/windows:shcore.lib",
        "//platforms/windows:shell32.lib",
        "//platforms/windows:shlwapi.lib",
        "//platforms/windows:sporder.lib",
        "//platforms/windows:synchronization.lib",
        "//platforms/windows:user32.lib",
        "//platforms/windows:userenv.lib",
        "//platforms/windows:usp10.lib",
        "//platforms/windows:uxtheme.lib",
        "//platforms/windows:version.lib",
        "//platforms/windows:vssapi.lib",
        "//platforms/windows:wer.lib",
        "//platforms/windows:wevtapi.lib",
        "//platforms/windows:windowscodecs.lib",
        "//platforms/windows:winhttp.lib",
        "//platforms/windows:wininet.lib",
        "//platforms/windows:winmm.lib",
        "//platforms/windows:winscard.lib",
        "//platforms/windows:winspool.lib",
        "//platforms/windows:wintrust.lib",
        "//platforms/windows:winusb.lib",
        "//platforms/windows:wlanapi.lib",
        "//platforms/windows:ws2_32.lib",
        "//platforms/windows:wtsapi32.lib",
        "//platforms/windows:xinput.lib",
    ],
)

rust_bootstrap_binary(
    name = "winapi-0.3.9-build-script-build",
    srcs = [":winapi-0.3.9.crate"],
    crate = "build_script_build",
    crate_root = "winapi-0.3.9.crate/build.rs",
    edition = "2015",
    features = [
        "consoleapi",
        "errhandlingapi",
        "fileapi",
        "handleapi",
        "processenv",
        "winbase",
        "wincon",
    ],
    visibility = [],
)

rust_bootstrap_buildscript_run(
    name = "winapi-0.3.9-build-script-run",
    package_name = "winapi",
    buildscript_rule = ":winapi-0.3.9-build-script-build",
    features = [
        "consoleapi",
        "errhandlingapi",
        "fileapi",
        "handleapi",
        "processenv",
        "winbase",
        "wincon",
    ],
    version = "0.3.9",
)

crate_download(
    name = "winapi-util-0.1.10.crate",
    sha256 = "0978bf7171b3d90bac376700cb56d606feb40f251a475a5d6634613564460b22",
    strip_prefix = "winapi-util-0.1.10",
    urls = ["https://static.crates.io/crates/winapi-util/0.1.10/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "winapi-util-0.1.10",
    srcs = [":winapi-util-0.1.10.crate"],
    crate = "winapi_util",
    crate_root = "winapi-util-0.1.10.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [":windows-sys-0.60.2"],
)

crate_download(
    name = "winapi-x86_64-pc-windows-gnu-0.4.0.crate",
    sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f",
    strip_prefix = "winapi-x86_64-pc-windows-gnu-0.4.0",
    sub_targets = [
        "lib/libwinapi_ole32.a",
        "lib/libwinapi_shell32.a",
    ],
    urls = ["https://static.crates.io/crates/winapi-x86_64-pc-windows-gnu/0.4.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "winapi-x86_64-pc-windows-gnu-0.4.0",
    srcs = [":winapi-x86_64-pc-windows-gnu-0.4.0.crate"],
    crate = "winapi_x86_64_pc_windows_gnu",
    crate_root = "winapi-x86_64-pc-windows-gnu-0.4.0.crate/src/lib.rs",
    edition = "2015",
    visibility = [],
    deps = [
        ":winapi-x86_64-pc-windows-gnu-0.4.0-extra_libraries-libwinapi_ole32.a",
        ":winapi-x86_64-pc-windows-gnu-0.4.0-extra_libraries-libwinapi_shell32.a",
    ],
)

prebuilt_cxx_library(
    name = "winapi-x86_64-pc-windows-gnu-0.4.0-extra_libraries-libwinapi_ole32.a",
    static_lib = ":winapi-x86_64-pc-windows-gnu-0.4.0.crate[lib/libwinapi_ole32.a]",
    visibility = [],
)

prebuilt_cxx_library(
    name = "winapi-x86_64-pc-windows-gnu-0.4.0-extra_libraries-libwinapi_shell32.a",
    static_lib = ":winapi-x86_64-pc-windows-gnu-0.4.0.crate[lib/libwinapi_shell32.a]",
    visibility = [],
)

crate_download(
    name = "windows-0.61.3.crate",
    sha256 = "9babd3a767a4c1aef6900409f85f5d53ce2544ccdfaa86dad48c91782c6d6893",
    strip_prefix = "windows-0.61.3",
    urls = ["https://static.crates.io/crates/windows/0.61.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows-0.61.3",
    srcs = [":windows-0.61.3.crate"],
    crate = "windows",
    crate_root = "windows-0.61.3.crate/src/lib.rs",
    edition = "2021",
    features = [
        "Win32",
        "Win32_Foundation",
        "Win32_Globalization",
        "Win32_Security",
        "Win32_Storage",
        "Win32_Storage_FileSystem",
        "Win32_System",
        "Win32_System_Diagnostics",
        "Win32_System_Diagnostics_Debug",
        "Win32_System_IO",
        "Win32_System_LibraryLoader",
        "Win32_System_ProcessStatus",
        "Win32_System_Threading",
        "default",
        "std",
    ],
    visibility = [],
    deps = [
        ":windows-collections-0.2.0",
        ":windows-core-0.61.2",
        ":windows-future-0.2.1",
        ":windows-link-0.1.3",
        ":windows-numerics-0.2.0",
    ],
)

crate_download(
    name = "windows-collections-0.2.0.crate",
    sha256 = "3beeceb5e5cfd9eb1d76b381630e82c4241ccd0d27f1a39ed41b2760b255c5e8",
    strip_prefix = "windows-collections-0.2.0",
    urls = ["https://static.crates.io/crates/windows-collections/0.2.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows-collections-0.2.0",
    srcs = [":windows-collections-0.2.0.crate"],
    crate = "windows_collections",
    crate_root = "windows-collections-0.2.0.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [":windows-core-0.61.2"],
)

crate_download(
    name = "windows-core-0.61.2.crate",
    sha256 = "c0fdd3ddb90610c7638aa2b3a3ab2904fb9e5cdbecc643ddb3647212781c4ae3",
    strip_prefix = "windows-core-0.61.2",
    urls = ["https://static.crates.io/crates/windows-core/0.61.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows-core-0.61.2",
    srcs = [":windows-core-0.61.2.crate"],
    crate = "windows_core",
    crate_root = "windows-core-0.61.2.crate/src/lib.rs",
    edition = "2021",
    features = ["std"],
    visibility = [],
    deps = [
        ":windows-implement-0.60.0",
        ":windows-interface-0.59.1",
        ":windows-link-0.1.3",
        ":windows-result-0.3.4",
        ":windows-strings-0.4.2",
    ],
)

crate_download(
    name = "windows-future-0.2.1.crate",
    sha256 = "fc6a41e98427b19fe4b73c550f060b59fa592d7d686537eebf9385621bfbad8e",
    strip_prefix = "windows-future-0.2.1",
    urls = ["https://static.crates.io/crates/windows-future/0.2.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows-future-0.2.1",
    srcs = [":windows-future-0.2.1.crate"],
    crate = "windows_future",
    crate_root = "windows-future-0.2.1.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [
        ":windows-core-0.61.2",
        ":windows-link-0.1.3",
        ":windows-threading-0.1.0",
    ],
)

crate_download(
    name = "windows-implement-0.60.0.crate",
    sha256 = "a47fddd13af08290e67f4acabf4b459f647552718f683a7b415d290ac744a836",
    strip_prefix = "windows-implement-0.60.0",
    urls = ["https://static.crates.io/crates/windows-implement/0.60.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows-implement-0.60.0",
    srcs = [":windows-implement-0.60.0.crate"],
    crate = "windows_implement",
    crate_root = "windows-implement-0.60.0.crate/src/lib.rs",
    edition = "2021",
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
    ],
)

crate_download(
    name = "windows-interface-0.59.1.crate",
    sha256 = "bd9211b69f8dcdfa817bfd14bf1c97c9188afa36f4750130fcdf3f400eca9fa8",
    strip_prefix = "windows-interface-0.59.1",
    urls = ["https://static.crates.io/crates/windows-interface/0.59.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows-interface-0.59.1",
    srcs = [":windows-interface-0.59.1.crate"],
    crate = "windows_interface",
    crate_root = "windows-interface-0.59.1.crate/src/lib.rs",
    edition = "2021",
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
    ],
)

crate_download(
    name = "windows-link-0.1.3.crate",
    sha256 = "5e6ad25900d524eaabdbbb96d20b4311e1e7ae1699af4fb28c17ae66c80d798a",
    strip_prefix = "windows-link-0.1.3",
    urls = ["https://static.crates.io/crates/windows-link/0.1.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows-link-0.1.3",
    srcs = [":windows-link-0.1.3.crate"],
    crate = "windows_link",
    crate_root = "windows-link-0.1.3.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
)

crate_download(
    name = "windows-numerics-0.2.0.crate",
    sha256 = "9150af68066c4c5c07ddc0ce30421554771e528bde427614c61038bc2c92c2b1",
    strip_prefix = "windows-numerics-0.2.0",
    urls = ["https://static.crates.io/crates/windows-numerics/0.2.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows-numerics-0.2.0",
    srcs = [":windows-numerics-0.2.0.crate"],
    crate = "windows_numerics",
    crate_root = "windows-numerics-0.2.0.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [
        ":windows-core-0.61.2",
        ":windows-link-0.1.3",
    ],
)

crate_download(
    name = "windows-result-0.3.4.crate",
    sha256 = "56f42bd332cc6c8eac5af113fc0c1fd6a8fd2aa08a0119358686e5160d0586c6",
    strip_prefix = "windows-result-0.3.4",
    urls = ["https://static.crates.io/crates/windows-result/0.3.4/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows-result-0.3.4",
    srcs = [":windows-result-0.3.4.crate"],
    crate = "windows_result",
    crate_root = "windows-result-0.3.4.crate/src/lib.rs",
    edition = "2021",
    features = ["std"],
    visibility = [],
    deps = [":windows-link-0.1.3"],
)

crate_download(
    name = "windows-strings-0.4.2.crate",
    sha256 = "56e6c93f3a0c3b36176cb1327a4958a0353d5d166c2a35cb268ace15e91d3b57",
    strip_prefix = "windows-strings-0.4.2",
    urls = ["https://static.crates.io/crates/windows-strings/0.4.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows-strings-0.4.2",
    srcs = [":windows-strings-0.4.2.crate"],
    crate = "windows_strings",
    crate_root = "windows-strings-0.4.2.crate/src/lib.rs",
    edition = "2021",
    features = ["std"],
    visibility = [],
    deps = [":windows-link-0.1.3"],
)

crate_download(
    name = "windows-sys-0.52.0.crate",
    sha256 = "282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d",
    strip_prefix = "windows-sys-0.52.0",
    urls = ["https://static.crates.io/crates/windows-sys/0.52.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows-sys-0.52.0",
    srcs = [":windows-sys-0.52.0.crate"],
    crate = "windows_sys",
    crate_root = "windows-sys-0.52.0.crate/src/lib.rs",
    edition = "2021",
    features = [
        "Win32",
        "Win32_Foundation",
        "Win32_Security",
        "Win32_Storage",
        "Win32_Storage_FileSystem",
        "Win32_System",
        "Win32_System_Console",
        "default",
    ],
    visibility = [],
    deps = [":windows-targets-0.52.6"],
)

crate_download(
    name = "windows-sys-0.59.0.crate",
    sha256 = "1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b",
    strip_prefix = "windows-sys-0.59.0",
    urls = ["https://static.crates.io/crates/windows-sys/0.59.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows-sys-0.59.0",
    srcs = [":windows-sys-0.59.0.crate"],
    crate = "windows_sys",
    crate_root = "windows-sys-0.59.0.crate/src/lib.rs",
    edition = "2021",
    features = [
        "Win32",
        "Win32_Foundation",
        "Win32_Security",
        "Win32_System",
        "Win32_System_Console",
        "Win32_System_Memory",
        "Win32_System_Threading",
        "default",
    ],
    visibility = [],
    deps = [":windows-targets-0.52.6"],
)

crate_download(
    name = "windows-sys-0.60.2.crate",
    sha256 = "f2f500e4d28234f72040990ec9d39e3a6b950f9f22d3dba18416c35882612bcb",
    strip_prefix = "windows-sys-0.60.2",
    urls = ["https://static.crates.io/crates/windows-sys/0.60.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows-sys-0.60.2",
    srcs = [":windows-sys-0.60.2.crate"],
    crate = "windows_sys",
    crate_root = "windows-sys-0.60.2.crate/src/lib.rs",
    edition = "2021",
    features = [
        "Win32",
        "Win32_Foundation",
        "Win32_Storage",
        "Win32_Storage_FileSystem",
        "Win32_System",
        "Win32_System_Console",
        "Win32_System_SystemInformation",
        "default",
    ],
    visibility = [],
    deps = [":windows-targets-0.53.3"],
)

rust_bootstrap_library(
    name = "windows-targets-0.0.0",
    srcs = ["rust/library/windows_targets/src/lib.rs"],
    crate = "windows_targets",
    crate_root = "rust/library/windows_targets/src/lib.rs",
    edition = "2024",
    visibility = [],
)

crate_download(
    name = "windows-targets-0.52.6.crate",
    sha256 = "9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973",
    strip_prefix = "windows-targets-0.52.6",
    urls = ["https://static.crates.io/crates/windows-targets/0.52.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows-targets-0.52.6",
    srcs = [":windows-targets-0.52.6.crate"],
    crate = "windows_targets",
    crate_root = "windows-targets-0.52.6.crate/src/lib.rs",
    edition = "2021",
    platform = {
        "windows-gnu-compiler": dict(
            deps = [":windows_x86_64_gnu-0.52.6"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":windows_x86_64_msvc-0.52.6"],
        ),
    },
    visibility = [],
)

crate_download(
    name = "windows-targets-0.53.3.crate",
    sha256 = "d5fe6031c4041849d7c496a8ded650796e7b6ecc19df1a431c1a363342e5dc91",
    strip_prefix = "windows-targets-0.53.3",
    urls = ["https://static.crates.io/crates/windows-targets/0.53.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows-targets-0.53.3",
    srcs = [":windows-targets-0.53.3.crate"],
    crate = "windows_targets",
    crate_root = "windows-targets-0.53.3.crate/src/lib.rs",
    edition = "2021",
    platform = {
        "windows-gnu-compiler": dict(
            deps = [":windows_x86_64_gnu-0.53.0"],
        ),
        "windows-msvc-compiler": dict(
            deps = [":windows_x86_64_msvc-0.53.0"],
        ),
    },
    visibility = [],
)

crate_download(
    name = "windows-threading-0.1.0.crate",
    sha256 = "b66463ad2e0ea3bbf808b7f1d371311c80e115c0b71d60efc142cafbcfb057a6",
    strip_prefix = "windows-threading-0.1.0",
    urls = ["https://static.crates.io/crates/windows-threading/0.1.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows-threading-0.1.0",
    srcs = [":windows-threading-0.1.0.crate"],
    crate = "windows_threading",
    crate_root = "windows-threading-0.1.0.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
    deps = [":windows-link-0.1.3"],
)

crate_download(
    name = "windows_x86_64_gnu-0.52.6.crate",
    sha256 = "147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78",
    strip_prefix = "windows_x86_64_gnu-0.52.6",
    urls = ["https://static.crates.io/crates/windows_x86_64_gnu/0.52.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows_x86_64_gnu-0.52.6",
    srcs = [":windows_x86_64_gnu-0.52.6.crate"],
    crate = "windows_x86_64_gnu",
    crate_root = "windows_x86_64_gnu-0.52.6.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
)

crate_download(
    name = "windows_x86_64_gnu-0.53.0.crate",
    sha256 = "2e55b5ac9ea33f2fc1716d1742db15574fd6fc8dadc51caab1c16a3d3b4190ba",
    strip_prefix = "windows_x86_64_gnu-0.53.0",
    urls = ["https://static.crates.io/crates/windows_x86_64_gnu/0.53.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows_x86_64_gnu-0.53.0",
    srcs = [":windows_x86_64_gnu-0.53.0.crate"],
    crate = "windows_x86_64_gnu",
    crate_root = "windows_x86_64_gnu-0.53.0.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
)

crate_download(
    name = "windows_x86_64_msvc-0.52.6.crate",
    sha256 = "589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec",
    strip_prefix = "windows_x86_64_msvc-0.52.6",
    urls = ["https://static.crates.io/crates/windows_x86_64_msvc/0.52.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows_x86_64_msvc-0.52.6",
    srcs = [":windows_x86_64_msvc-0.52.6.crate"],
    crate = "windows_x86_64_msvc",
    crate_root = "windows_x86_64_msvc-0.52.6.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
)

crate_download(
    name = "windows_x86_64_msvc-0.53.0.crate",
    sha256 = "271414315aff87387382ec3d271b52d7ae78726f5d44ac98b4f4030c91880486",
    strip_prefix = "windows_x86_64_msvc-0.53.0",
    urls = ["https://static.crates.io/crates/windows_x86_64_msvc/0.53.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "windows_x86_64_msvc-0.53.0",
    srcs = [":windows_x86_64_msvc-0.53.0.crate"],
    crate = "windows_x86_64_msvc",
    crate_root = "windows_x86_64_msvc-0.53.0.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
)

crate_download(
    name = "winnow-0.5.40.crate",
    sha256 = "f593a95398737aeed53e489c785df13f3618e41dbcd6718c6addbf1395aa6876",
    strip_prefix = "winnow-0.5.40",
    urls = ["https://static.crates.io/crates/winnow/0.5.40/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "winnow-0.5.40",
    srcs = [":winnow-0.5.40.crate"],
    crate = "winnow",
    crate_root = "winnow-0.5.40.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "default",
        "std",
    ],
    visibility = [],
)

crate_download(
    name = "winnow-0.7.13.crate",
    sha256 = "21a0236b59786fed61e2a80582dd500fe61f18b5dca67a4a067d0bc9039339cf",
    strip_prefix = "winnow-0.7.13",
    urls = ["https://static.crates.io/crates/winnow/0.7.13/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "winnow-0.7.13",
    srcs = [":winnow-0.7.13.crate"],
    crate = "winnow",
    crate_root = "winnow-0.7.13.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "default",
        "std",
    ],
    visibility = [],
)

crate_download(
    name = "writeable-0.5.5.crate",
    sha256 = "1e9df38ee2d2c3c5948ea468a8406ff0db0b29ae1ffde1bcf20ef305bcc95c51",
    strip_prefix = "writeable-0.5.5",
    urls = ["https://static.crates.io/crates/writeable/0.5.5/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "writeable-0.5.5",
    srcs = [":writeable-0.5.5.crate"],
    crate = "writeable",
    crate_root = "writeable-0.5.5.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
)

crate_download(
    name = "writeable-0.6.1.crate",
    sha256 = "ea2f10b9bb0928dfb1b42b65e1f9e36f7f54dbdf08457afefb38afcdec4fa2bb",
    strip_prefix = "writeable-0.6.1",
    urls = ["https://static.crates.io/crates/writeable/0.6.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "writeable-0.6.1",
    srcs = [":writeable-0.6.1.crate"],
    crate = "writeable",
    crate_root = "writeable-0.6.1.crate/src/lib.rs",
    edition = "2021",
    visibility = [],
)

crate_download(
    name = "yoke-0.7.5.crate",
    sha256 = "120e6aef9aa629e3d4f52dc8cc43a015c7724194c97dfaf45180d2daf2b77f40",
    strip_prefix = "yoke-0.7.5",
    urls = ["https://static.crates.io/crates/yoke/0.7.5/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "yoke-0.7.5",
    srcs = [":yoke-0.7.5.crate"],
    crate = "yoke",
    crate_root = "yoke-0.7.5.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "default",
        "derive",
        "zerofrom",
    ],
    visibility = [],
    deps = [
        ":stable_deref_trait-1.2.0",
        ":yoke-derive-0.7.5",
        ":zerofrom-0.1.6",
    ],
)

crate_download(
    name = "yoke-0.8.0.crate",
    sha256 = "5f41bb01b8226ef4bfd589436a297c53d118f65921786300e427be8d487695cc",
    strip_prefix = "yoke-0.8.0",
    urls = ["https://static.crates.io/crates/yoke/0.8.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "yoke-0.8.0",
    srcs = [":yoke-0.8.0.crate"],
    crate = "yoke",
    crate_root = "yoke-0.8.0.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "derive",
        "zerofrom",
    ],
    visibility = [],
    deps = [
        ":stable_deref_trait-1.2.0",
        ":yoke-derive-0.8.0",
        ":zerofrom-0.1.6",
    ],
)

crate_download(
    name = "yoke-derive-0.7.5.crate",
    sha256 = "2380878cad4ac9aac1e2435f3eb4020e8374b5f13c296cb75b4620ff8e229154",
    strip_prefix = "yoke-derive-0.7.5",
    urls = ["https://static.crates.io/crates/yoke-derive/0.7.5/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "yoke-derive-0.7.5",
    srcs = [":yoke-derive-0.7.5.crate"],
    crate = "yoke_derive",
    crate_root = "yoke-derive-0.7.5.crate/src/lib.rs",
    edition = "2021",
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
        ":synstructure-0.13.2",
    ],
)

crate_download(
    name = "yoke-derive-0.8.0.crate",
    sha256 = "38da3c9736e16c5d3c8c597a9aaa5d1fa565d0532ae05e27c24aa62fb32c0ab6",
    strip_prefix = "yoke-derive-0.8.0",
    urls = ["https://static.crates.io/crates/yoke-derive/0.8.0/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "yoke-derive-0.8.0",
    srcs = [":yoke-derive-0.8.0.crate"],
    crate = "yoke_derive",
    crate_root = "yoke-derive-0.8.0.crate/src/lib.rs",
    edition = "2021",
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
        ":synstructure-0.13.2",
    ],
)

crate_download(
    name = "zerocopy-0.8.26.crate",
    sha256 = "1039dd0d3c310cf05de012d8a39ff557cb0d23087fd44cad61df08fc31907a2f",
    strip_prefix = "zerocopy-0.8.26",
    urls = ["https://static.crates.io/crates/zerocopy/0.8.26/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "zerocopy-0.8.26",
    srcs = [":zerocopy-0.8.26.crate"],
    crate = "zerocopy",
    crate_root = "zerocopy-0.8.26.crate/src/lib.rs",
    edition = "2021",
    env = {
        "CARGO_PKG_VERSION": "0.8.26",
    },
    features = ["simd"],
    visibility = [],
)

crate_download(
    name = "zerofrom-0.1.6.crate",
    sha256 = "50cc42e0333e05660c3587f3bf9d0478688e15d870fab3346451ce7f8c9fbea5",
    strip_prefix = "zerofrom-0.1.6",
    urls = ["https://static.crates.io/crates/zerofrom/0.1.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "zerofrom-0.1.6",
    srcs = [":zerofrom-0.1.6.crate"],
    crate = "zerofrom",
    crate_root = "zerofrom-0.1.6.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "derive",
    ],
    visibility = [],
    deps = [":zerofrom-derive-0.1.6"],
)

crate_download(
    name = "zerofrom-derive-0.1.6.crate",
    sha256 = "d71e5d6e06ab090c67b5e44993ec16b72dcbaabc526db883a360057678b48502",
    strip_prefix = "zerofrom-derive-0.1.6",
    urls = ["https://static.crates.io/crates/zerofrom-derive/0.1.6/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "zerofrom-derive-0.1.6",
    srcs = [":zerofrom-derive-0.1.6.crate"],
    crate = "zerofrom_derive",
    crate_root = "zerofrom-derive-0.1.6.crate/src/lib.rs",
    edition = "2021",
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
        ":synstructure-0.13.2",
    ],
)

crate_download(
    name = "zerotrie-0.2.2.crate",
    sha256 = "36f0bbd478583f79edad978b407914f61b2972f5af6fa089686016be8f9af595",
    strip_prefix = "zerotrie-0.2.2",
    urls = ["https://static.crates.io/crates/zerotrie/0.2.2/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "zerotrie-0.2.2",
    srcs = [":zerotrie-0.2.2.crate"],
    crate = "zerotrie",
    crate_root = "zerotrie-0.2.2.crate/src/lib.rs",
    edition = "2021",
    features = [
        "yoke",
        "zerofrom",
    ],
    visibility = [],
    deps = [
        ":displaydoc-0.2.5",
        ":yoke-0.8.0",
        ":zerofrom-0.1.6",
    ],
)

crate_download(
    name = "zerovec-0.10.4.crate",
    sha256 = "aa2b893d79df23bfb12d5461018d408ea19dfafe76c2c7ef6d4eba614f8ff079",
    strip_prefix = "zerovec-0.10.4",
    urls = ["https://static.crates.io/crates/zerovec/0.10.4/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "zerovec-0.10.4",
    srcs = [":zerovec-0.10.4.crate"],
    crate = "zerovec",
    crate_root = "zerovec-0.10.4.crate/src/lib.rs",
    edition = "2021",
    features = [
        "derive",
        "yoke",
    ],
    visibility = [],
    deps = [
        ":yoke-0.7.5",
        ":zerofrom-0.1.6",
        ":zerovec-derive-0.10.3",
    ],
)

crate_download(
    name = "zerovec-0.11.4.crate",
    sha256 = "e7aa2bd55086f1ab526693ecbe444205da57e25f4489879da80635a46d90e73b",
    strip_prefix = "zerovec-0.11.4",
    urls = ["https://static.crates.io/crates/zerovec/0.11.4/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "zerovec-0.11.4",
    srcs = [":zerovec-0.11.4.crate"],
    crate = "zerovec",
    crate_root = "zerovec-0.11.4.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "derive",
        "yoke",
    ],
    visibility = [],
    deps = [
        ":yoke-0.8.0",
        ":zerofrom-0.1.6",
        ":zerovec-derive-0.11.1",
    ],
)

crate_download(
    name = "zerovec-derive-0.10.3.crate",
    sha256 = "6eafa6dfb17584ea3e2bd6e76e0cc15ad7af12b09abdd1ca55961bed9b1063c6",
    strip_prefix = "zerovec-derive-0.10.3",
    urls = ["https://static.crates.io/crates/zerovec-derive/0.10.3/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "zerovec-derive-0.10.3",
    srcs = [":zerovec-derive-0.10.3.crate"],
    crate = "zerovec_derive",
    crate_root = "zerovec-derive-0.10.3.crate/src/lib.rs",
    edition = "2021",
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
    ],
)

crate_download(
    name = "zerovec-derive-0.11.1.crate",
    sha256 = "5b96237efa0c878c64bd89c436f661be4e46b2f3eff1ebb976f7ef2321d2f58f",
    strip_prefix = "zerovec-derive-0.11.1",
    urls = ["https://static.crates.io/crates/zerovec-derive/0.11.1/download"],
    visibility = [],
)

rust_bootstrap_library(
    name = "zerovec-derive-0.11.1",
    srcs = [":zerovec-derive-0.11.1.crate"],
    crate = "zerovec_derive",
    crate_root = "zerovec-derive-0.11.1.crate/src/lib.rs",
    edition = "2021",
    proc_macro = True,
    visibility = [],
    deps = [
        ":proc-macro2-1.0.101",
        ":quote-1.0.40",
        ":syn-2.0.106",
    ],
)
